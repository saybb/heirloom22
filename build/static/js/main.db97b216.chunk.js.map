{"version":3,"sources":["heirloom22_logo.svg","store/Actions/authActions.js","firebase/config.js","store/Actions/userActions.js","component/profile/userProfile.js","component/util/imageUpload.js","component/profile/editProfile.js","component/profile/UserModal.js","component/layout/Navigation.js","component/feed/ArtefactListElement.js","store/objectTypes.js","component/util/Makeid.js","component/forms/ArtefactForm.js","component/forms/EventForm.js","component/forms/EventHandler.js","component/forms/PersonForm.js","component/forms/PersonHandler.js","component/forms/ArtefactHandler.js","component/feed/ArtefactList.js","component/util/Text.js","component/layout/Welcome.jsx","component/forms/RelationForm.js","component/util/DeleteRelation.js","component/objects/ItemLinks.js","component/forms/GeneralDelComfirmation.js","component/util/ImageDisplay.js","component/util/Avatar.js","component/forms/AddendumForm.jsx","component/forms/AddendumHandler.jsx","component/objects/Addendum.jsx","component/objects/AddendumList.jsx","component/forms/DelComfirmation.js","component/objects/Artefact.js","component/objects/Event.js","component/objects/Person.js","component/auth/SignIn.js","component/auth/SignUp.js","App.js","serviceWorker.js","store/Reducer/userReducer.js","store/Reducer/authReducer.js","store/Reducer/rootReducer.js","index.js"],"names":["module","exports","updateUserProfile","info","dispatch","state","auth","firestore","user","currentUser","infoElement","Object","keys","forEach","key","includes","collection","doc","uid","update","then","updateProfile","displayName","name","catch","err","console","log","type","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storageRef","storage","ref","createObj","objType","obj","getState","add","authroId","created_by","date_created","Date","last_modified","editObj","docId","length","deleteObj","a","get","snapshot","data","artefacts_links","item","deleteRelation","reference","people_links","events_links","delete","uploadFile","path","file","child","put","getDownloadURL","downloadURL","fieldAppend","fieldName","fieldValue","FieldValue","arrayUnion","targetRef","objRef","snapshot_1","DeleteRelationField","snapshot_2","targetObj","toLowerCase","field","new_field","filter","link","id","connect","profile","props","src","photoURL","alt","style","width","height","objectFit","maxWidth","borderRadius","verticalAlign","email","lastName","location","bio","to","getBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","beforeUpload","isJpgOrPng","isLt5M","size","message","ImageUpload","previewVisible","previewImage","fileList","handleCancel","setState","handlePreview","preview","originFileObj","handleChange","handleUpload","handleFile","this","uploadButton","className","action","listType","onPreview","onChange","visible","footer","onCancel","React","Component","Item","placeholder","UserModal","editMode","confirmLoading","showModal","handleEditMode","handleSubmit","e","loading","handleBack","target","value","onClick","icon","title","onOk","url","objects","Navigation","MainMenu","mode","logo","UserMenu","signOut","color","Meta","Card","ArtefactListElement","artefact","excerpt","str","n","substring","hoverable","cover","media_links","description","ARTEFACTS","EVENTS","PEOPLE","ADDENDUMS","makeID","characters","charactersLength","i","charAt","Math","floor","random","TextArea","Input","ArtefactForm","events_selected","people_selected","toggle","resetState","preventDefault","form","validateFields","values","resetFields","RelationFormItems","getFieldDecorator","events","people","handleFieldChange","Fragment","label","optionFilterProp","filterOption","people_names","map","person","Option","lastname","person_id","initialValue","setFieldsValue","rules","required","autosize","minRows","new_people_links","events_names","event","event_id","new_events_links","new_events_name","JSON","parse","stringify","events_name","antIcon","fontSize","spin","spinning","indicator","tip","onSubmit","align","ghost","Form","create","compose","Events","People","firestoreConnect","EventForm","details","date","format","htmlType","EventHandler","margin","PersonForm","dob","PersonHandler","ArtefactHandler","authorId","newArtefact","artefact_link","relation","event_link","person_link","buttonText","top","ArtefactList","artefacts","onBack","window","history","back","tags","extra","avatar","entries","Artefacts","capitalize","string","toUpperCase","slice","Welcome","textAlign","welcomeMessage","tutorial","span","justify","onMount","unMount","RelationForm","artefact_id","iconType","shape","layout","hideRequiredMark","okType","okText","onConfirm","ItemLink","ItemLinks","items","header","display","alignItems","GeneralDelComfirmation","handleConfirm","hideModal","cancelText","ImageDisplay","carousel","createRef","index","previous","current","prev","next","goTo","from","dots","beforeChange","m","backgroundColor","borderColor","borderStyle","borderWidth","cursor","Avatar","img","callback","addEventListener","imageUrl","makeid","componentDidUpdate","returnUrl","showUploadList","AddendumForm","image_url","getImageUrl","addendum","now","AddendumHandler","Addendum","document","toDate","toLocaleDateString","weekday","year","month","day","AddendumList","handleDelete","list","element","addendums","filtered_addendumsList","getAddendums","generateList","Addendums","orderBy","DelComfirmation","push","match","params","column","moment","calendar","subTitle","SignIn","password","signIn","authError","Field","Button","creds","credentials","signInWithEmailAndPassword","SignUp","submission","signup","signUp","newUser","createUserWithEmailAndPassword","resp","set","App","context","remove_width_constraint_handler","reset_width_constraint_handler","HomeRoutes","exact","render","component","Artefact","Event","Person","Boolean","hostname","initState","isLoading","errMess","userReducer","authReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","config","userProfile","useFirestoreForProfile","attachAuthIsReady","logger","reduxFirestore","firebaseAuthIsReady","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mHAAAA,EAAOC,QAAU,IAA0B,6C,0pBCApC,IA8CMC,EAAoB,SAACC,GAChC,OAAO,SAACC,EAAUC,EAAX,GAAyC,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,UAC1BC,EAAOF,EAAKG,YACZC,EAAc,CAAC,OAAQ,WAAY,WAAY,MAAO,YAC1DC,OAAOC,KAAKT,GAAMU,SAAQ,SAAAC,GACpBJ,EAAYK,SAASD,IAAOX,EAAKW,IAAoB,KAAdX,EAAKW,WAAqBX,EAAKW,MAE5EP,EAAUS,WAAW,SAASC,IAAIT,EAAKU,KAAKC,O,yVAA5C,IACWhB,IACRiB,MAAK,WACKd,EAAKG,YACXY,cAAc,CAAEC,YAAanB,EAAKoB,UACtCC,OAAM,SAAAC,GAASC,QAAQC,IAAI,gCAC7BP,MAAK,WACJhB,EAAS,CAAEwB,KAAM,8BAChBJ,OAAM,SAACC,GACRrB,EAAS,CAAEwB,KAAM,8B,oFC/CvBC,IAASC,cAVM,CACXC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,wCAKJ,IAAM/B,EAAOuB,IAASvB,OAIhBC,GAFWsB,IAASvB,KAERuB,IAAStB,aAIrB+B,GAFgBT,IAAStB,UAEZsB,IAASU,UAAUC,OAE9BX,IAAf,E,yjBCzBO,IAAMY,EAAY,SAACC,EAASC,GAC/B,OAAO,SAACvC,EAAUwC,EAAX,GAA8C,IAAvBtC,EAAsB,EAAtBA,KAAsB,EAAhBC,UACtBS,WAAW0B,GAASG,IAA9B,KACOF,EADP,CAEIG,SAAUxC,EAAKG,YAAYS,IAC3B6B,WAAYzC,EAAKG,YAAYa,YAC7B0B,aAAc,IAAIC,KAClBC,cAAe,IAAID,QACpB7B,MAAK,SAACH,GACLb,EAAS,CAAEwB,KAAM,iBAAmBX,IAAKA,OAC1CO,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZrB,EAAS,CAAEwB,KAAM,gBAAkBH,QAKlC0B,EAAU,SAACT,EAASU,EAAOT,GACpC,OAAO,SAACvC,EAAUwC,EAAX,GAAwC,IAAjBrC,EAAgB,EAAhBA,UAC1BI,OAAOC,KAAK+B,GAAK9B,SAAQ,SAAAC,GAAa6B,EAAI7B,IAAoC,KAA3B6B,EAAI7B,IAAQ,IAAIuC,eAAsBV,EAAI7B,MACnFP,EAAUS,WAAW0B,GAASzB,IAAImC,GACxCjC,OAAJ,KACOwB,EADP,CAEIO,cAAe,IAAID,QACpB7B,MAAK,WACJhB,EAAS,CAAEwB,KAAM,oBAClBJ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZrB,EAAS,CAAEwB,KAAM,cAAgBH,QAsBhC6B,EAAY,SAACZ,EAASU,GAC/B,8CAAO,WAAOhD,EAAUwC,EAAjB,wBAAAW,EAAA,6DAA6BhD,EAA7B,EAA6BA,UAC1BiC,EAAMjC,EAAUS,WAAW0B,GAASzB,IAAImC,GAD3C,SAEoBZ,EAAIgB,MAFxB,OAEGC,EAFH,OAGH/B,QAAQC,IAAI8B,EAASC,SACfzC,EAAMwC,EAASC,QACdC,iBACH1C,EAAI0C,gBAAgB9C,SAAQ,SAAA+C,GAASxD,EAASyD,EAAenB,EAASU,EAAOQ,EAAKE,UAAW,uBAE9F7C,EAAI8C,cACH9C,EAAI8C,aAAalD,SAAQ,SAAC+C,GAAUxD,EAASyD,EAAenB,EAASU,EAAOQ,EAAKE,UAAW,oBAE7F7C,EAAI+C,cACH/C,EAAI+C,aAAanD,SAAQ,SAAA+C,GAASxD,EAASyD,EAAenB,EAASU,EAAOQ,EAAKE,UAAW,oBAE9FtB,EAAIyB,SACH7C,MAAK,WACFhB,EAAS,CAAEwB,KAAM,sBAClBJ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZrB,EAAS,CAAEwB,KAAM,gBAAiBH,MAnBnC,4CAAP,uDAAM,IAwBGyC,EAAa,SAACC,EAAMC,GAC7B,OAAO,SAAChE,EAAUwC,EAAX,GAAwC,EAAjBN,WACf+B,MAAMF,GAAMG,IAAIF,GAC1BhD,MAAK,SAACqC,GACHA,EAASjB,IAAI+B,iBAAiBnD,MAAK,SAACoD,GAChCpE,EAAS,CAAEwB,KAAM,iBAAkB4C,YAAaA,OAC/ChD,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZrB,EAAS,CAAEwB,KAAM,yBAMtB6C,EAAc,SAAC/B,EAASU,EAAOsB,EAAWC,GACnD,OAAO,SAAEvE,EAAUwC,EAAZ,GAAwC,EAAhBrC,UACPS,WAAW0B,GAASzB,IAAImC,GACxCjC,OAAJ,eACKuD,EAAa7C,EAAStB,UAAUqE,WAAWC,WAAWF,KAE1DvD,MAAK,WACFhB,EAAS,CAAEwB,KAAM,sBAClBJ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZrB,EAAS,CAAEwB,KAAM,gBAAiBH,QAajCoC,EAAiB,SAACnB,EAASU,EAAO0B,EAAWJ,GACtD,8CAAO,WAAOtE,EAAUwC,EAAjB,4BAAAW,EAAA,6DAA6BhD,EAA7B,EAA6BA,UAA7B,kBAEsBA,EAAUU,IAAIyB,EAAQ,IAAIU,GAFhD,cAEO2B,EAFP,gBAG0BA,EAAOvB,MAHjC,YAGOwB,EAHP,QAIetB,OAJf,wBAKWf,EAAMsC,EAAoBD,EAAWtB,OAAQgB,EAAWI,GALnE,UAMWC,EAAO5D,OAAP,KACCwB,EADD,CAEFO,cAAe,IAAID,QAR5B,yBAY0B6B,EAAUtB,MAZpC,aAYO0B,EAZP,QAaexB,OAbf,wBAcWyB,EAAYF,EAAoBC,EAAWxB,OAAZ,UAAuBhB,EAAQ0C,cAA/B,UAAsDL,GAdhG,UAeWD,EAAU3D,OAAV,KACCgE,EADD,CAEFjC,cAAe,IAAID,QAjB5B,0DAqBCvB,QAAQC,IAAR,MArBD,0DAAP,uDAAM,IA2BV,SAASsD,EAAoBtC,EAAK0C,EAAOvB,GACrC,IAAInB,EAAI0C,IAAQ,IAAIhC,OAAS,EAAE,CAC3B,IAAIiC,EAAY3C,EAAI0C,GAAOE,QAAO,SAACC,GAC/B,OAAOA,EAAK1B,UAAU2B,KAAO3B,EAAU2B,MAE3C9C,EAAI0C,GAASC,EAEjB,OAAO3C,EChJX,IA8Be+C,eAPS,SAACrF,GACrB,MAAM,CACJC,KAAMD,EAAMwB,SAASvB,KACrBqF,QAAStF,EAAMwB,SAAS8D,WAIfD,EA9BK,SAACE,GAAW,IACpBtF,EAAkBsF,EAAlBtF,KAAMqF,EAAYC,EAAZD,QACd,OAAKrF,EAAKY,IAGN,kBAAC,WAAD,KACI,yBAAK2E,IAAMF,EAAQG,SAAWH,EAAQG,SAAW,wJAC7CC,IAAI,GACJC,MAAO,CAACC,MAAO,IACXC,OAAQ,IACRC,UAAW,QACXC,SAAU,OACVC,aAAc,MACdC,cAAe,YACvB,+BAAKhG,EAAKiG,OACV,2BAAIZ,EAAQpE,KAAZ,KAAoBoE,EAAQa,SAA5B,KACA,2BAAIb,EAAQY,OACZ,2BAAIZ,EAAQc,SAAUd,EAAQc,SAAW,8BACzC,2BAAId,EAAQe,IAAKf,EAAQe,IAAM,2BAhBf,kBAAC,IAAD,CAAUC,GAAG,e,oCCJzC,SAASC,EAAUxC,GACjB,OAAO,IAAIyC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAc9C,GACrB4C,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,SACrCJ,EAAOK,QAAU,SAAAC,GAAK,OAAIP,EAAOO,OAKrC,SAASC,EAAanD,GAClB,IAAMoD,EAA2B,eAAdpD,EAAKxC,MAAuC,cAAdwC,EAAKxC,KACtD,GAAK4F,EAAL,CAIA,IAAMC,EAASrD,EAAKsD,KAAO,KAAO,KAAO,EACzC,GAAKD,EAIL,OAAOD,GAAcC,EAHlBE,IAAQL,MAAM,qCALdK,IAAQL,MAAM,qC,IAqENM,E,2MAzDbvH,MAAQ,CACNwH,gBAAgB,EAChBC,aAAc,GACdC,SAAU,I,EAGZC,aAAe,kBAAM,EAAKC,SAAS,CAAEJ,gBAAgB,K,EAErDK,c,uCAAgB,WAAM9D,GAAN,SAAAb,EAAA,yDACTa,EAAK+D,QADI,gCAESvB,EAAUxC,EAAKgE,eAFxB,OAEZhE,EAAK+D,QAFO,cAKd,EAAKF,SAAS,CACZH,aAAc1D,EAAK+D,QACnBN,gBAAgB,IAPJ,2C,wDAWhBQ,aAAe,YAAmB,IAAhBN,EAAe,EAAfA,SACd,EAAKE,SAAS,CAAEF,c,EAGlBO,aAAe,SAAClE,GACZ,EAAKwB,MAAM2C,WAAWnE,I,wEAKlB,IAAD,EAC4CoE,KAAKnI,MAAhDwH,EADD,EACCA,eAAgBC,EADjB,EACiBA,aAAcC,EAD/B,EAC+BA,SAChCU,EACJ,6BACE,kBAAC,IAAD,CAAM7G,KAAK,SACX,yBAAK8G,UAAU,mBAAf,WAGJ,OACE,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACAC,OAAQH,KAAKF,aACXM,SAAS,eACTb,SAAUA,EACVc,UAAWL,KAAKN,cAChBY,SAAUN,KAAKH,aACfd,aAAcA,GAEbQ,EAAS1E,QAAU,EAAI,KAAOoF,GAEjC,kBAAC,IAAD,CAAOM,QAASlB,EAAgBmB,OAAQ,KAAMC,SAAUT,KAAKR,cAC3D,yBAAKjC,IAAI,UAAUC,MAAO,CAAEC,MAAO,QAAUJ,IAAKiC,U,GAnDlCoB,IAAMC,WCSjBzD,eAPS,SAACrF,GACrB,MAAM,CACJC,KAAMD,EAAMwB,SAASvB,KACrBqF,QAAStF,EAAMwB,SAAS8D,WAIfD,EA9BK,SAAC,GAAgC,IAA/B2C,EAA8B,EAA9BA,aAAcE,EAAgB,EAAhBA,WAChC,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAaA,WAAYA,IACzB,kBAAC,IAAD,KACA,kBAAC,IAAKa,KAAN,KACI,kBAAC,IAAD,CAAO3D,GAAG,OAAO4D,YAAY,aAAaP,SAAUT,KAEtD,kBAAC,IAAKe,KAAN,KACE,kBAAC,IAAD,CAAO3D,GAAG,WAAW4D,YAAY,YAAYP,SAAUT,KAEzD,kBAAC,IAAKe,KAAN,KACE,kBAAC,IAAD,CAAO3D,GAAG,WAAW4D,YAAY,iBAAiBP,SAAUT,KAE9D,kBAAC,IAAKe,KAAN,KACE,kBAAC,IAAD,CAAO3D,GAAG,MAAM4D,YAAY,2BAA2BP,SAAUT,UCNvEiB,E,2MACHjJ,MAAQ,CAELkJ,UAAU,EACVR,SAAS,EACTS,gBAAgB,EAChBjI,KAAM,GACNiF,SAAU,GACVC,SAAU,GACVC,IAAK,GACLZ,SAAU,KACV1B,KAAM,M,EAGTqF,UAAY,WACT,EAAKxB,SAAS,CACXc,SAAS,K,EAIfW,eAAiB,WACd,EAAKzB,SAAS,CACXsB,UAAU,K,EAKhBI,a,uCAAe,WAAOC,GAAP,eAAArG,EAAA,0DACP,EAAKlD,MAAM+D,KADJ,iCAGe9B,EAAW+B,MAAM,SAAW,EAAKuB,MAAMtF,KAAKY,IAAM,IAAM,EAAKb,MAAM+D,KAAK7C,MAAM+C,IAAI,EAAKjE,MAAM+D,MAH5G,cAGFX,EAHE,uBAKcA,EAASjB,IAAI+B,iBAL3B,yBAKFuB,SALE,WAIDmC,SAJC,wBASV,EAAKrC,MAAM1F,kBAAkB,EAAKG,OAClC,EAAK4H,SAAS,CAAC4B,SAAS,EAAOd,SAAS,EAAOQ,UAAU,IAV/C,4C,wDAafO,WAAa,WACV,EAAK7B,SAAS,CACXc,SAAS,EACTQ,UAAU,K,EAIhBvB,aAAe,WACZ,EAAKC,SAAS,CACXsB,UAAU,K,EAIhBlB,aAAe,SAAAuB,GACZ,EAAK3B,SAAL,eACI2B,EAAEG,OAAOtE,GAAKmE,EAAEG,OAAOC,S,EAI9BzB,WAAa,SAAAnE,GACT,EAAK6D,SAAS,CACV7D,KAAMA,K,wEAIJ,IAAD,EAC4BoE,KAAKnI,MAAhC0I,EADD,EACCA,QAASS,EADV,EACUA,eADV,EAEkBhB,KAAK5C,MAAtBD,EAFD,EAECA,QAASrF,EAFV,EAEUA,KAEhB,OACG,6BACG,kBAAC,IAAD,CAAQsB,KAAK,UAAUqI,QAASzB,KAAKiB,UAAWS,KAAK,QAC/C5J,EAAKgB,YAA6BhB,EAAKgB,YAApBqE,EAAQpE,MAEjC,kBAAC,IAAD,CACG4I,MAAM,UACNpB,QAASA,EACTqB,KAAM5B,KAAKmB,aACXH,eAAgBA,EAChBP,SAAUT,KAAKsB,WACfd,OACIR,KAAKnI,MAAMkJ,SAaP,CACG,kBAAC,IAAD,CAAQzI,IAAI,SAASmJ,QAASzB,KAAKR,cAAnC,UAGA,kBAAC,IAAD,CACGlH,IAAI,SACJc,KAAK,UACLqI,QAASzB,KAAKmB,cAHjB,WAhBH,CACG,kBAAC,IAAD,CAAQ7I,IAAI,QAAQmJ,QAASzB,KAAKsB,YAAlC,QAGA,kBAAC,IAAD,CACGhJ,IAAI,OACJc,KAAK,UACLqI,QAASzB,KAAKkB,gBAHjB,kBAsBTlB,KAAKnI,MAAMkJ,SAGV,kBAAC,EAAD,CAAalB,aAAcG,KAAKH,aAAcE,WAAYC,KAAKD,aAF/D,kBAAC,EAAD,Y,GA7GMW,IAAMC,WAsIfzD,eAfS,SAAArF,GACrB,MAAO,CACJC,KAAMD,EAAMwB,SAASvB,KACrBqF,QAAStF,EAAMwB,SAAS8D,QACxB0E,IAAKhK,EAAMiK,QAAQ9F,gBAIE,SAAApE,GACxB,MAAO,CACJF,kBAAmB,SAAAC,GAAI,OAAIC,EAASF,EAAkBC,KACtD+D,WAAY,SAACC,EAAMC,GAAP,OAAgBhE,EAAS8D,EAAWC,EAAMC,QAI7CsB,CAGb4D,GCzIIiB,I,kNAWHC,SAAW,WAIR,OAHe,EAAK5E,MAAbtF,KAGEY,IAEH,kBAAC,IAAD,CAAMwH,UAAU,YAAY+B,KAAK,cAC9B,kBAAC,IAAKrB,KAAN,CAAWtI,IAAI,QACZ,kBAAC,IAAD,CAAS6F,GAAG,KACT,yBAAK+B,UAAU,WAAW7C,IAAK6E,IAAM3E,IAAI,WAG/C,kBAAC,IAAKqD,KAAN,CAAWtI,IAAI,QACZ,kBAAC,IAAD,CAAS6F,GAAG,KAAZ,SAEH,kBAAC,IAAKyC,KAAN,CAAWtI,IAAI,QACZ,kBAAC,IAAD,CAAS6F,GAAG,SAAZ,cAEH,kBAAC,IAAKyC,KAAN,CAAWtI,IAAI,YACZ,kBAAC,IAAD,CAAS6F,GAAG,4CAAZ,yBAIH,kBAAC,IAAKyC,KAAN,CAAWtI,IAAI,SACZ,kBAAC,IAAD,CAAS6F,GAAG,gCAAZ,sBAIH,kBAAC,IAAKyC,KAAN,CAAWtI,IAAI,UACZ,kBAAC,IAAD,CAAS6F,GAAG,gCAAZ,wBAQN,kBAAC,IAAD,CAAM+B,UAAU,YAAY+B,KAAK,cAC9B,kBAAC,IAAKrB,KAAN,CAAWtI,IAAI,QACZ,kBAAC,IAAD,CAAS6F,GAAG,KACT,yBAAK+B,UAAU,WAAW7C,IAAK6E,IAAM3E,IAAI,WAG/C,kBAAC,IAAKqD,KAAN,CAAWtI,IAAI,QACZ,kBAAC,IAAD,CAAS6F,GAAG,KAAZ,W,EAQfgE,SAAW,WAAO,IAAD,EACU,EAAK/E,MAAtBtF,EADO,EACPA,KAAMsK,EADC,EACDA,QAEb,OAAItK,EAAKY,IAEH,kBAAC,IAAD,CAAMwH,UAAU,YAAY+B,KAAK,cAC9B,kBAAC,IAAKrB,KAAN,CAAWtI,IAAI,WACZ,kBAAC,EAAD,OAEH,kBAAC,IAAKsI,KAAN,CAAWtI,IAAI,UACZ,kBAAC,IAAD,CAAS6F,GAAG,WAAZ,YAEH,kBAAC,IAAKyC,KAAN,CAAWtI,IAAI,UACZ,kBAAC,IAAD,CAAQc,KAAK,OAAOqI,QAASW,GAC1B,kBAAC,IAAD,CAAMhJ,KAAK,SAASoE,MAAO,CAAC6E,MAAO,YAO5C,kBAAC,IAAD,CAAMnC,UAAU,YAAY+B,KAAK,cAC9B,kBAAC,IAAKrB,KAAN,CAAWtI,IAAI,SACZ,kBAAC,IAAD,CAAS6F,GAAG,WAAZ,a,wEApFZ,OACG,yBAAK+B,UAAU,WACZ,uBAAM8B,SAAN,MACA,uBAAMG,SAAN,W,GALazB,IAAMC,YA0GhBzD,gBAZS,SAAArF,GACrB,MAAO,CACJC,KAAMD,EAAMwB,SAASvB,SAIA,SAAAF,GACxB,MAAO,CACJwK,QAAS,kBAAMxK,GPrGZ,SAACA,EAAUC,EAAX,GAA6B,EAAVC,KAEnBsK,UAAUxJ,MAAK,WAClBhB,EAAS,CAAEwB,KAAM,8BOsGR8D,CAGb6E,I,2DClHMO,GAASC,KAATD,KAwDOE,OAlDf,SAA6BpF,GAAQ,IACzBqF,EAAwBrF,EAAxBqF,SAAUnH,EAAc8B,EAAd9B,UAWlB,SAASoH,EAAQC,EAAKC,GAClB,OAAID,EAAI9H,OAAS+H,EAEND,EAAIE,UAAU,EAAGD,EAAE,GAAK,MAExBD,EASf,OACIF,EAEI,6BACI,kBAAC,IAAD,CAAMtE,GAAI,mBAAqB7C,GAC3B,kBAAC,KAAD,CACIwH,WAAS,EACT5C,UAAU,wBACV6C,OAAQN,EAASO,aAAa,IAAInI,OAAS,EACrC,yBAAK0C,IAAI,QAAQF,IAAKoF,EAASO,YAAY,GAAGnB,MAC9C,MAGN,kBAACS,GAAD,CACIX,MAAOe,EAAQD,EAAS1J,KAtC3B,IAuCGkK,YAAaR,EAASQ,aAAeP,EAAQD,EAASQ,YAtC1D,UA2Cd,+CC9DGC,I,OAAY,aACZC,GAAS,SACTC,GAAS,SAETC,GAAY,Y,oBCHZC,GAAS,SAACzI,GAKnB,IAJA,IAAI+D,EAAS,GACT2E,EACD,iEACCC,EAAmBD,EAAW1I,OACzB4I,EAAI,EAAGA,EAAI5I,EAAQ4I,IACzB7E,GAAU2E,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAE1D,OAAO5E,GCKHkF,GAAaC,IAAbD,SAEFE,G,2MACFnM,MAAQ,CACJwJ,SAAS,EACT4C,gBAAiB,GACjBC,gBAAiB,GACjB3I,aAAc,GACdC,aAAc,GAEdI,KAAM,KACN0B,SAAU,M,EAGd6G,OAAS,WACL,EAAK1E,SAAS,CAAE4B,SAAS,K,EAG7B+C,WAAa,WACT,EAAK3E,SAAS,CACV4B,SAAS,EACT4C,gBAAiB,GACjBC,gBAAiB,GACjB3I,aAAc,GACdC,aAAc,GAEdI,KAAM,KACN0B,SAAU,Q,EAKlByC,WAAa,SAAAnE,GACT,EAAK6D,SAAS,CACV7D,KAAMA,K,EAMduF,a,uCAAe,WAAOC,GAAP,SAAArG,EAAA,sDACXqG,EAAEiD,iBAIF,EAAKjH,MAAMkH,KAAKC,eAAhB,uCAA+B,WAAOtL,EAAKuL,GAAZ,iBAAAzJ,EAAA,yDACtB9B,EADsB,oBAEvB,EAAKkL,UAEF,EAAKtM,MAAM+D,KAJS,iCAME9B,EAAW+B,MAAM,SAAW,EAAKuB,MAAMtF,KAAKY,IAAM,IAAM4K,GAAO,IAAM,EAAKzL,MAAM+D,KAAK7C,MACzG+C,IAAI,EAAKjE,MAAM+D,MAPG,cAMfX,EANe,uBASCA,EAASjB,IAAI+B,iBATd,yBASfuB,SATe,WAQdmC,SARc,wBAajBgD,EAAW,CACb1J,KAAMyL,EAAOzL,KACbkK,YAAauB,EAAOvB,aAAe,GACnCD,YAAa,EAAKnL,MAAMyF,SAAW,CAAC,CAChC9C,aAAc,IAAIC,KAClBoH,IAAK,EAAKhK,MAAMyF,WAElB,IAIN,EAAKF,MAAM+D,aAAasB,GAExB,EAAK2B,aACL,EAAKhH,MAAMkH,KAAKG,cA3BO,4CAA/B,oCAAAzE,KAAA,gBALW,2C,wDA2Ef0E,kBAAoB,WAAO,IACfC,EAAsB,EAAKvH,MAAMkH,KAAjCK,kBADc,EAEwB,EAAKvH,MAA3CwH,EAFc,EAEdA,OAAQC,EAFM,EAENA,OAAQC,EAFF,EAEEA,kBAFF,EAKlB,EAAKjN,MADLoM,EAJkB,EAIlBA,gBAAiBC,EAJC,EAIDA,gBAAiB3I,EAJhB,EAIgBA,aAAaC,EAJ7B,EAI6BA,aAGnD,OACI,kBAAC,IAAMuJ,SAAP,KACI,kBAAC,IAAKnE,KAAN,CAAWoE,MAAM,kBACZL,EAAkB,SAAU,GAA5BA,CACG,kBAAC,KAAD,CACI1C,KAAK,WACLpB,YAAY,8CACZoE,iBAAkB,WAClBC,cAAc,EAEd5E,SAAU,SAACkB,GACP,EAAK/B,SAAS,CAACyE,gBAAiB1C,IAChCsD,EAAkB,CAACZ,gBAAiB1C,IAGpC,IAAM2D,EAAe,GACrB3D,EAAM4D,KAAI,SAAAC,GAAM,OAAIF,EAAaE,GAAUR,EAAOQ,GAAQtM,QAC1D+L,EAAkB,CAACK,aAAcA,MAInCN,EACE1M,OAAOC,KAAKyM,GAAQO,KAAK,SAACnI,GAAD,OACrB,kBAAC,KAAOqI,OAAR,CAAehN,IAAK2E,GAAK4H,EAAO5H,GAAIlE,KAAO,IAAM8L,EAAO5H,GAAIsI,aAElE,QAKd,6BACKrB,EAAgBkB,KAAI,SAACI,GAAD,OACjB,kBAAC,IAAK5E,KAAN,CACItI,IAAKkN,EACLR,MAAO,iBAAmBH,EAAOW,GAAWzM,KAAO,IAAM8L,EAAOW,GAAWD,UAE1EZ,EAAkBa,EACf,CAAEC,aAAclK,EAAaiK,IAAc,GACzCE,eAAiBnK,EAAaiK,IAAc,GAC5CG,MAAQ,CACN,CAAEC,UAAU,EACZzG,QAAS,kEALhBwF,CAQD,kBAACb,GAAD,CACIjD,YAAa,sDACbgF,SAAU,CAACC,QAAS,GACpBxF,SAAU,SAACc,GACP,IAAM2E,EAAmBxK,EACzBwK,EAAiBP,GAAapE,EAAEG,OAAOC,MAEvCsD,EAAkB,CAACvJ,aAAcwK,aAOrD,kBAAC,IAAKnF,KAAN,CAAWoE,MAAM,kBACZL,EAAkB,SAAU,GAA5BA,CACG,kBAAC,KAAD,CACA1C,KAAK,WACLpB,YAAY,8CACZoE,iBAAkB,WAClBC,cAAc,EAEd5E,SAAU,SAACkB,GACP,EAAK/B,SAAS,CAACwE,gBAAiBzC,IAChCsD,EAAkB,CAACb,gBAAiBzC,IAGpC,IAAMwE,EAAe,GACrBxE,EAAM4D,KAAI,SAAAa,GAAK,OAAID,EAAaC,GAASrB,EAAOqB,GAAOlN,QACvD+L,EAAkB,CAACkB,aAAcA,MAG/BpB,EACEzM,OAAOC,KAAKwM,GAAQQ,KAAK,SAACnI,GAAD,OACrB,kBAAC,KAAOqI,OAAR,CAAehN,IAAK2E,GAAK2H,EAAO3H,GAAIlE,SAE1C,QAKd,6BACKkL,EAAgBmB,KAAI,SAACc,GAAD,OACjB,kBAAC,IAAKtF,KAAN,CACItI,IAAK4N,EACLlB,MAAO,iBAAmBJ,EAAOsB,GAAUnN,MAE1C4L,EAAkBuB,EACf,CAAET,aAAcjK,EAAa0K,IAAa,GACxCR,eAAiBlK,EAAa0K,IAAa,GAC3CP,MAAQ,CACN,CAAEC,UAAU,EACZzG,QAAS,iEALhBwF,CAQD,kBAACb,GAAD,CACIjD,YAAa,qDACbgF,SAAU,CAACC,QAAS,GACpBxF,SAAU,SAACc,GACP,IAAM+E,EAAmB3K,EACzB2K,EAAiBD,GAAY9E,EAAEG,OAAOC,MACtCsD,EAAkB,CAACtJ,aAAc2K,IAEjC,IAAIC,EAAkBC,KAAKC,MAAMD,KAAKE,UAAU/K,IAChD4K,EAAgBF,GAAYtB,EAAOsB,GAAUnN,KAC7C+L,EAAkB,CAAC0B,YAAaJ,e,wEA1JtD,IACEzB,EAAsB3E,KAAK5C,MAAMkH,KAAjCK,kBADH,EAE0B3E,KAAK5C,MAA5BhE,EAFH,EAEGA,KAAMoG,EAFT,EAESA,aACRiH,EAAU,kBAAC,IAAD,CAAMrN,KAAK,UAAUoE,MAAO,CAAEkJ,SAAU,IAAMC,MAAI,IAClE,OACI,kBAAC,KAAD,CAAMC,SAAU5G,KAAKnI,MAAMwJ,QAASwF,UAAWJ,EAASK,IAAI,YAAY5H,KAAK,SAC7E,kBAAC,IAAD,CAAM6H,SAAW/G,KAAKmB,aAAejB,UAAU,sBAC3C,kBAAC,IAAKU,KAAN,CAAWoE,MAAM,QAAQL,EAAkB,OACvC,CAAEgB,MAAQ,CACN,CAAEC,UAAU,EACVzG,QAAS,uCAHMwF,CAMrB,kBAAC,IAAD,CAAO9D,YAAY,iCAGvB,kBAAC,IAAKD,KAAN,CAAWoE,MAAM,eAAeL,EAAkB,cAAlBA,CAC5B,kBAACb,GAAD,CACIjD,YAAa,gFACbgF,SAAU,CAACC,QAAS,OAIjB,WAAT1M,GAAqB,uBAAMsL,kBAAN,CAAwBJ,KAAMK,IACrD,kBAAC,IAAK/D,KAAN,CAAWoE,MAAM,kEACb,kBAAC,EAAD,CAAajF,WAAYC,KAAKD,eAGtC,kBAAC,KAAD,CAAS3G,KAAK,eACd,yBAAKA,KAAK,OAAO4N,MAAM,SACf,kBAAC,IAAD,CAAQ5N,KAAK,UAAUqI,QAASjC,GAAhC,UACA,kBAAC,KAAD,CAASpG,KAAK,aACd,kBAAC,IAAD,CAAQA,KAAK,UAAU6N,OAAK,EAACxF,QAASzB,KAAKmB,cAA3C,gB,GA3GOT,IAAMC,WAiPjCqD,GAAekD,IAAKC,OAAO,CAACpO,KAAM,sBAAnBmO,CAA0ClD,IAEzD,IAQeoD,eACXlK,aAToB,SAACrF,GACrB,MAAO,CACHC,KAAMD,EAAMwB,SAASvB,KACrB8M,OAAQ/M,EAAME,UAAUmD,KAAKmM,OAC7BxC,OAAQhN,EAAME,UAAUmD,KAAKoM,WAMjCC,6BAAiB,iBAAM,CACnB,CAAC/O,WAAY4K,IACb,CAAC5K,WAAY2K,QAJNiE,CAMbpD,I,UC1QMF,GAAaC,IAAbD,SAEF0D,G,2MACFrG,aAAe,SAAAC,GAEXA,EAAEiD,iBAGF,EAAKjH,MAAMkH,KAAKC,gBAAe,SAACtL,EAAKuL,GACjC,IAAKvL,EAAK,CACN,IAAMgN,EAAQ,CACVlN,KAAMyL,EAAOzL,KACb0O,QAASjD,EAAOvB,aAAe,GAC/ByE,KAAM,IAAIjN,KAAK+J,EAAOkD,OAI1B,EAAKtK,MAAM+D,aAAa8E,GACxB,EAAK7I,MAAMkH,KAAKG,mB,wEAKlB,IACEE,EAAsB3E,KAAK5C,MAAMkH,KAAjCK,kBAGR,OACI,kBAAC,IAAD,CAAMoC,SAAW/G,KAAKmB,cAClB,kBAAC,IAAKP,KAAN,CAAWoE,MAAM,QAAQL,EAAkB,OACvC,CAAEgB,MAAQ,CACN,CAAEC,UAAU,EACVzG,QAAS,oCAHMwF,CAMrB,kBAAC,IAAD,CAAO9D,YAAY,8BAGvB,kBAAC,IAAKD,KAAN,CAAWoE,MAAM,QAAQL,EAAkB,OACvC,CAAEgB,MAAQ,CACN,CAAEC,UAAU,EACVzG,QAAS,oCAHMwF,CAMrB,kBAAC,KAAD,CAAY9D,YAAY,aAAa8G,OAnB9B,iBAuBX,kBAAC,IAAK/G,KAAN,CAAWoE,MAAM,eAAeL,EAAkB,cAAlBA,CAC5B,kBAAC,GAAD,CACI9D,YAAa,gFACbgF,SAAU,CAACC,QAAS,OAI5B,kBAAC,IAAKlF,KAAN,KACI,kBAAC,IAAD,CAAQxH,KAAK,UAAU6N,OAAK,EAACW,SAAS,UAAtC,gB,GAtDIlH,IAAMC,WAgEf6G,GAFfA,GAAYN,IAAKC,OAAO,CAACpO,KAAM,aAAnBmO,CAAiCM,ICzDvCK,G,YACF,WAAYzK,GAAO,IAAD,8BAClB,4CAAMA,KASN6D,UAAY,WACR,EAAKxB,SAAS,CACVc,SAAS,KAZC,EAgBlBf,aAAe,WACX,EAAKC,SAAS,CACVc,SAAS,KAlBC,EAsBlBY,aAAe,SAAC8E,GACY,WAApB,EAAKpO,MAAMuB,KACX,EAAKgE,MAAMnD,UAAUkJ,GAAQ8C,GAE7B,EAAK7I,MAAMzC,QAAQwI,GAAQ,EAAK/F,MAAMxC,MAAOqL,GAEjD,EAAKxG,SAAS,CAAEc,SAAS,KA1B7B,EAAK1I,MAAQ,CACT0I,SAAS,EACTnH,KAAM,EAAKgE,MAAMhE,KACjBuI,MAA2B,WAApB,EAAKvE,MAAMhE,KAAoB,kBAAoB,aAC1DwB,MAAO,EAAKwC,MAAMxC,MAAQ,EAAKwC,MAAMxC,MAAQ,MAN/B,E,sEAgCd,OACI,kBAAC,IAAMmK,SAAP,KACI,kBAAC,IAAD,CAAQ3L,KAAK,UAAU6N,OAAK,EAACxF,QAASzB,KAAKiB,UAAWzD,MAAO,CAACsK,OAAQ,WAAW,kBAAC,IAAD,CAAM1O,KAAK,gBAAgB4G,KAAKnI,MAAM8J,OACvH,kBAAC,IAAD,CACIpB,QAASP,KAAKnI,MAAM0I,QACpBoB,MAAO3B,KAAKnI,MAAM8J,MAClBC,KAAM5B,KAAKmB,aACXV,SAAUT,KAAKR,aACfgB,OAAQ,CACJ,kBAAC,IAAD,CAAQlI,IAAI,SAASc,KAAK,UAAUqI,QAASzB,KAAKR,cAAlD,YAGJ,kBAAC,GAAD,CAAW2B,aAAcnB,KAAKmB,qB,GA7CvBT,IAAMC,WA2DlByG,eACXlK,YAAQ,MARe,SAACtF,GACxB,MAAO,CACHqC,UAAW,SAACC,EAAS+L,GAAV,OAAoBrO,EAASqC,EAAUC,EAAS+L,KAC3DtL,QAAS,SAACT,EAAS+C,EAAIgJ,GAAd,OAAwBrO,EAAS+C,EAAQT,EAAS+C,EAAIgJ,SAIxDmB,CAEbS,ICpEM/D,GAAaC,IAAbD,SAEFiE,G,2MACF5G,aAAe,SAAAC,GAEXA,EAAEiD,iBAGF,EAAKjH,MAAMkH,KAAKC,gBAAe,SAACtL,EAAKuL,GACjC,IAAKvL,EAAK,CACN,IAAMoM,EAAS,CACXtM,KAAMyL,EAAOzL,KACbwM,SAAUf,EAAOe,SACjBkC,QAASjD,EAAOvB,aAAe,GAC/B+E,IAAK,IAAIvN,KAAK+J,EAAOkD,OAIzB,EAAKtK,MAAM+D,aAAakE,GACxB,EAAKjI,MAAMkH,KAAKG,mB,wEAKlB,IACEE,EAAsB3E,KAAK5C,MAAMkH,KAAjCK,kBAGR,OACI,kBAAC,IAAD,CAAMoC,SAAW/G,KAAKmB,cAClB,kBAAC,IAAKP,KAAN,CAAWoE,MAAM,cAAcL,EAAkB,OAC7C,CAAEgB,MAAQ,CACN,CAAEC,UAAU,EACVzG,QAAS,4CAHYwF,CAM3B,kBAAC,IAAD,CAAO9D,YAAY,wCAGvB,kBAAC,IAAKD,KAAN,CAAWoE,MAAM,aAAaL,EAAkB,WAC5C,CAAEgB,MAAQ,CACN,CAAEC,UAAU,EACVzG,QAAS,2CAHWwF,CAM1B,kBAAC,IAAD,CAAO9D,YAAY,uCAGvB,kBAAC,IAAKD,KAAN,CAAWoE,MAAM,iBAAiBL,EAAkB,OAChD,CAAEgB,MAAQ,CACN,CAAEC,UAAU,EACVzG,QAAS,uBAHewF,CAM9B,kBAAC,KAAD,CAAY9D,YAAY,aAAa8G,OA5B9B,iBAgCX,kBAAC,IAAK/G,KAAN,CAAWoE,MAAM,eAAeL,EAAkB,cAAlBA,CAC5B,kBAAC,GAAD,CACI9D,YAAa,2FACbgF,SAAU,CAACC,QAAS,OAI5B,kBAAC,IAAKlF,KAAN,KACI,kBAAC,IAAD,CAAQxH,KAAK,UAAU6N,OAAK,EAACW,SAAS,UAAtC,gB,GAhEKlH,IAAMC,WAyEhBoH,GADfA,GAAab,IAAKC,OAAO,CAACpO,KAAM,cAAnBmO,CAAkCa,ICnEzCE,G,YACF,WAAY7K,GAAO,IAAD,8BACd,4CAAMA,KASV6D,UAAY,WACR,EAAKxB,SAAS,CACVc,SAAS,KAZC,EAgBlBf,aAAe,WACX,EAAKC,SAAS,CACVc,SAAS,KAlBC,EAsBlBY,aAAe,SAACkE,GACY,WAApB,EAAKxN,MAAMuB,KACX,EAAKgE,MAAMnD,UAAUmJ,GAAQiC,GAE7B,EAAKjI,MAAMzC,QAAQyI,GAAQ,EAAKhG,MAAMxC,MAAOyK,GAEjD,EAAK5F,SAAS,CAAEc,SAAS,KA1BzB,EAAK1I,MAAQ,CACT0I,SAAS,EACTnH,KAAM,EAAKgE,MAAMhE,KACjBuI,MAA2B,WAApB,EAAKvE,MAAMhE,KAAoB,kBAAoB,cAC1DwB,MAAO,EAAKwC,MAAMxC,MAAQ,EAAKwC,MAAMxC,MAAQ,MANnC,E,sEAgCd,OACI,kBAAC,IAAMmK,SAAP,KACI,kBAAC,IAAD,CAAQ3L,KAAK,UAAU6N,OAAK,EAACxF,QAASzB,KAAKiB,UAAWzD,MAAO,CAACsK,OAAQ,WAAW,kBAAC,IAAD,CAAM1O,KAAK,gBAAgB4G,KAAKnI,MAAM8J,OACvH,kBAAC,IAAD,CACIpB,QAASP,KAAKnI,MAAM0I,QACpBoB,MAAM,sBACNC,KAAM5B,KAAKmB,aACXV,SAAUT,KAAKR,aACfgB,OAAQ,CACJ,kBAAC,IAAD,CAAQlI,IAAI,SAASc,KAAK,UAAUqI,QAASzB,KAAKR,cAAlD,YAGJ,kBAAC,GAAD,CAAY2B,aAAcnB,KAAKmB,qB,GA7CvBT,IAAMC,WA2DnByG,eACXlK,YAAQ,MARe,SAACtF,GACxB,MAAO,CACHqC,UAAW,SAACC,EAAS+L,GAAV,OAAoBrO,EAASqC,EAAUC,EAAS+L,KAC3DtL,QAAS,SAACT,EAAS+C,EAAIgJ,GAAd,OAAwBrO,EAAS+C,EAAQT,EAAS+C,EAAIgJ,SAIxDmB,CAEba,I,ikBC1DIC,G,YACH,WAAY9K,GAAQ,IAAD,8BAChB,4CAAMA,KA8BT0H,kBAAoB,SAACjI,GAClB,EAAK4C,SAAS5C,IAhCE,EAmCnBoE,UAAY,WACT,EAAKxB,SAAS,CACXc,SAAS,KArCI,EAyCnBf,aAAe,WACZ,EAAKC,SAAS,CACXc,SAAS,KA3CI,EA+CnBY,aA/CmB,uCA+CJ,WAAOsB,GAAP,iCAAA1H,EAAA,2DAIuB,EAAKlD,MAHhCuB,EADI,EACJA,KACL6K,EAFS,EAETA,gBAAiBC,EAFR,EAEQA,gBACjB1I,EAHS,EAGTA,aAAcD,EAHL,EAGKA,aACdyK,EAJS,EAITA,aAAcb,EAJL,EAIKA,aACTrN,EAAS,EAAKsF,MAAdtF,KAGK,WAATsB,EARQ,iCASiBrB,EAAUS,WAAW0K,IAAW7I,IAAhC,MACpBoI,EADoB,CAEvB0F,SAAUrQ,EAAKY,IACf6B,WAAYzC,EAAKgB,YACjB0B,aAAc,IAAIC,KAClBC,cAAe,IAAID,QAdb,OASH2N,EATG,OAkBNnE,EAAgBpJ,OAAS,GACzBoJ,EAAgB5L,SAAQ,SAAA4N,GACrB,IAAMoC,EAAgB,CACnBtP,KAAM0J,EAAS1J,KACfuC,UAAWvD,EAAUU,IAAI,cAAgB2P,EAAYnL,IACrDqL,SAAU9M,EAAayK,IAEpBsC,EAAa,CAChBxP,KAAMiN,EAAaC,GACnB3K,UAAWvD,EAAUU,IAAI,WAAawN,GACtCqC,SAAU9M,EAAayK,IAE1B,EAAK7I,MAAMnB,YAAYkH,GAAQ8C,EAAO,kBAAmBoC,GACzD,EAAKjL,MAAMnB,YAAYiH,GAAWkF,EAAYnL,GAAI,eAAgBsL,MAIrErE,EAAgBrJ,OAAS,GACtBqJ,EAAgB7L,SAAQ,SAAAgN,GACrB,IAAMgD,EAAgB,CACnBtP,KAAM0J,EAAS1J,KACfuC,UAAWvD,EAAUU,IAAI,cAAgB2P,EAAYnL,IACrDqL,SAAU/M,EAAa8J,IAEpBmD,EAAc,CACjBzP,KAAMoM,EAAaE,GACnB/J,UAAWvD,EAAUU,IAAI,WAAa4M,GACtCiD,SAAU/M,EAAa8J,IAE1B,EAAKjI,MAAMnB,YAAYmH,GAAQiC,EAAQ,kBAAmBgD,GAC1D,EAAKjL,MAAMnB,YAAYiH,GAAWkF,EAAYnL,GAAI,eAAgBuL,MAhDlE,wBAqDT,EAAKpL,MAAMzC,QAAQuI,GAAW,EAAK9F,MAAMxC,MAAO6H,GArDvC,QAwDZ,EAAKhD,SAAS,CAACc,SAAS,IAxDZ,4CA/CI,sDAEhB,EAAK1I,MAAQ,CACV0I,SAAS,EACTnH,KAAM,EAAKgE,MAAMhE,KACjBuI,MACuB,WAApB,EAAKvE,MAAMhE,KACN,qBACA,gBACRqP,WACuB,WAApB,EAAKrL,MAAMhE,KACN,qBACA,OACRwB,MACG,EAAKwC,MAAMxC,MACN,EAAKwC,MAAMxC,MACX,KACR8G,KACuB,WAApB,EAAKtE,MAAMhE,KACN,cACA,OAER6K,gBAAiB,GACjBC,gBAAiB,GACjB1I,aAAc,GACdD,aAAc,GACdyK,aAAa,GACbb,aAAa,IA3BA,E,sEA2GhB,OACG,kBAAC,IAAMJ,SAAP,KACG,kBAAC,IAAD,CAAQ3L,KAAK,UAAUqI,QAASzB,KAAKiB,UAAWgG,OAAK,EAAC/H,KAAK,SACxD,kBAAC,IAAD,CAAM9F,KAAM4G,KAAKnI,MAAM6J,OAAS1B,KAAKnI,MAAM4Q,YAG9C,kBAAC,IAAD,CACGjL,MAAO,CAAEkL,IAAK,IACdnI,QAASP,KAAKnI,MAAM0I,QACpBoB,MAAO3B,KAAKnI,MAAM8J,MAClBlB,SAAUT,KAAKR,aACfgB,OAAQ,MAEa,WAApBR,KAAKnI,MAAMuB,KACT,kBAAC,IAAM2L,SAAP,KACG,kBAAC,GAAD,CAAe3L,KAAM,WACrB,kBAAC,GAAD,CAAcA,KAAM,YAEtB,KAEJ,kBAAC,GAAD,CACG+H,aAAcnB,KAAKmB,aACnB2D,kBAAmB9E,KAAK8E,kBACxB1L,KAAM4G,KAAKnI,MAAMuB,KACjBwB,MAAOoF,KAAKnI,MAAM+C,MAClB4E,aAAcQ,KAAKR,qB,GArIPkB,IAAMC,WA4JrByG,eACZlK,aAhBqB,SAAArF,GACrB,MAAO,CACJC,KAAMD,EAAMwB,SAASvB,SAIA,SAAAF,GACxB,MAAO,CACJqC,UAAW,SAACC,EAASuI,GAAV,OAAuB7K,EAASqC,EAAUC,EAASuI,KAC9D9H,QAAS,SAACT,EAAS+C,EAAIwF,GAAd,OACT7K,EAAS+C,EAAQT,EAAS+C,EAAIwF,KAC9BxG,YAAa,SAAC/B,EAASU,EAAMsB,EAAWC,GAA3B,OAA0CvE,EAASqE,EAAY/B,EAASU,EAAOsB,EAAWC,SAI9FiL,CAKbc,IChKIS,G,iLAEQ,IAAD,EAC0B3I,KAAK5C,MAA5BwL,EADH,EACGA,UAAWzL,EADd,EACcA,QACnB,OAAIyL,EAODA,IAAczQ,OAAOC,KAAKwQ,GAErB,yBAAK1I,UAAU,oBACX,mDAKR,kBAAC,IAAM6E,SAAP,KACI,kBAAC,KAAD,CACI8D,OAAQ,kBAAMC,OAAOC,QAAQC,QAC7BrH,MAAM,2BACNsH,KAAM,kBAAC,KAAD,CAAK5G,MAAM,QAAQlF,EAAQpE,MACjCmQ,MAAO,CACH,kBAAC,GAAD,CAAiB9P,KAAM,YAE3B+P,OAAQ,CAAE9L,IAAKF,EAAQG,YAG3B,yBAAK4C,UAAU,yBACX,yBAAKA,UAAU,iBACT0I,GAAazQ,OAAOiR,QAAQR,GAAWxD,KAAI,oCAAEnI,EAAF,KAAMwF,EAAN,YAAoB,kBAAC,GAAD,CAAqBnK,IAAK2E,EAAI3B,UAAW2B,EAAIwF,SAAUA,UA1BhI,yBAAKvC,UAAU,oBACX,kBAAC,KAAD,CAAM4G,IAAI,uBAAuB5H,KAAK,e,GAP/BwB,IAAMC,WAgDlByG,eACXlK,aAToB,SAACrF,GACrB,MAAO,CACL+Q,UAAW/Q,EAAME,UAAUmD,KAAKmO,UAChCvR,KAAMD,EAAMwB,SAASvB,KACrBqF,QAAStF,EAAMwB,SAAS8D,YAM1BoK,6BAAiB,iBAAM,CAAC,CACpB/O,WAAY0K,QAHLkE,CAKbuB,ICvEK,SAASW,GAAWC,GAExB,OAAOA,EAAO7F,OAAO,GAAG8F,cAAgBD,EAAOE,MAAM,G,uBCwBlDC,I,kNACHlM,MAAQ,CACLmM,UAAW,U,EAGdC,eAAiB,WAAM,IAGhB7Q,EAHgB,EAEI,EAAKqE,MAAtBD,EAFa,EAEbA,QAASrF,EAFI,EAEJA,KAQhB,OAHAiB,EAAOuQ,GAHuBvQ,EAA1BjB,GAAQA,EAAKgB,YAAoBhB,EAAKgB,YACjCqE,GAAWA,EAAQpE,KAAaoE,EAAQpE,KACrC,WAIPjB,EAAKY,IAYP,kCACOK,EADP,2HAVG,wBAAImH,UAAU,SAAd,MACOnH,EADP,mDAEG,uBAAGmH,UAAU,eAAb,yH,EAuBZ2J,SAAW,WAIR,OAHe,EAAKzM,MAAbtF,KAGGY,IAyBP,yBAAKwH,UAAU,YAEZ,kBAAC,KAAD,CAAK9G,KAAK,QACP,kBAAC,KAAD,CAAK0Q,KAAM,GACR,kBAAC,IAAD,CAAM1Q,KAAK,UAEd,kBAAC,KAAD,CAAK0Q,KAAM,IACR,kBAAC,KAAD,CAAK5J,UAAU,SAAf,YACA,kBAAC,KAAD,gBAEG,kBAAC,IAAD,CAAQA,UAAU,mBACf,kBAAC,IAAD,CAAS/B,GAAG,KAAZ,SAHN,gCASN,kBAAC,KAAD,CAAK/E,KAAK,OAAO2Q,QAAQ,UACtB,kBAAC,KAAD,CAAKD,KAAM,GACR,kBAAC,IAAD,CAAM1Q,KAAK,aAEd,kBAAC,KAAD,CAAK0Q,KAAM,IACR,kBAAC,KAAD,CAAK5J,UAAU,SAAf,WACA,kBAAC,KAAD,gBAEG,kBAAC,IAAD,CAAQA,UAAU,mBACf,kBAAC,IAAD,CAAS/B,GAAG,SAAZ,cAHN,kGAUN,kBAAC,KAAD,CAAK/E,KAAK,OAAO2Q,QAAQ,UACtB,kBAAC,KAAD,CAAKD,KAAM,GACR,kBAAC,IAAD,CAAM1Q,KAAK,YAEd,kBAAC,KAAD,CAAK0Q,KAAM,IACR,kBAAC,KAAD,CAAK5J,UAAU,SAAf,WACA,kBAAC,KAAD,gBAEG,kBAAC,IAAD,CACG9G,KAAK,SACLqI,QAAS,EAAKrE,MAAMgF,QACpBlC,UAAU,mBAHb,WAFH,yCAaN,kBAAC,KAAD,CAAK9G,KAAK,OAAO2Q,QAAQ,UACtB,kBAAC,KAAD,CAAKD,KAAM,GACR,kBAAC,IAAD,CAAM1Q,KAAK,cAEd,kBAAC,KAAD,CAAK0Q,KAAM,IACR,kBAAC,KAAD,CAAK5J,UAAU,SAAf,uBACA,kBAAC,KAAD,gBAEG,kBAAC,IAAD,CAAQA,UAAU,mBACf,kBAAC,IAAD,CAAS/B,GAAG,WAAZ,YAHN,mDAjFN,yBAAK+B,UAAU,YAEZ,kBAAC,KAAD,CAAK9G,KAAK,QACP,kBAAC,KAAD,CAAK0Q,KAAM,GACR,kBAAC,IAAD,CAAM1Q,KAAK,WAEd,kBAAC,KAAD,CAAK0Q,KAAM,IACR,kBAAC,KAAD,CAAK5J,UAAU,SAAf,UACA,kBAAC,KAAD,gBAEG,kBAAC,IAAD,CAAQA,UAAU,mBACf,kBAAC,IAAD,CAAS/B,GAAG,WAAZ,WAHN,wC,mFApBf6B,KAAK5C,MAAM4M,Y,6CAGXhK,KAAK5C,MAAM6M,Y,+BA0GX,OACG,yBAAK/J,UAAU,WACZ,yBAAKA,UAAU,cACZ,yBAAKA,UAAU,SACZ,yBAAKA,UAAU,OAAO7C,IAAK6E,IAAM3E,IAAI,SACrC,wBAAI2C,UAAU,UAAd,0BACCF,KAAK4J,iBAHT,IAIG,yBAAK1J,UAAU,UAAf,OAKN,uBAAM2J,SAAN,W,GA7JUlJ,cA+KPzD,gBAZS,SAAArF,GACrB,MAAO,CACJC,KAAMD,EAAMwB,SAASvB,KACrBqF,QAAStF,EAAMwB,SAAS8D,YAIH,SAAAvF,GACxB,MAAO,CACJwK,QAAS,kBAAMxK,GnBtLZ,SAACA,EAAUC,EAAX,GAA6B,EAAVC,KAEnBsK,UAAUxJ,MAAK,WAClBhB,EAAS,CAAEwB,KAAM,8BmBsLR8D,CAGbwM,I,oBCpMM5F,GAAaC,IAAbD,SAEFoG,G,2MACFrS,MAAQ,CACJ0I,SAAS,EACToB,MAAO,EAAKvE,MAAMhE,KAClBwB,MAAO,EAAKwC,MAAMxC,MAAQ,EAAKwC,MAAMxC,MAAQ,KAE7CqJ,gBAAiB,GACjBC,gBAAiB,GACjB1I,aAAc,GACdD,aAAc,I,EAGlB0F,UAAY,WACR,EAAKxB,SAAS,CACZc,SAAS,K,EAIbf,aAAe,WACb,EAAKC,SAAS,CACVc,SAAS,K,EAIjBY,a,uCAAe,WAAOC,GAAP,qCAAArG,EAAA,sDACXqG,EAAEiD,iBADS,EAEqD,EAAKjH,MAA7DrF,EAFG,EAEHA,UAAW6M,EAFR,EAEQA,OAAQC,EAFhB,EAEgBA,OAAQsF,EAFxB,EAEwBA,YAAalO,EAFrC,EAEqCA,YAC1CwG,EAAW,EAAKrF,MAAMqF,SAAS0H,GAH1B,EAOP,EAAKtS,MAFLoM,EALO,EAKPA,gBAAiBC,EALV,EAKUA,gBACjB1I,EANO,EAMPA,aAAcD,EANP,EAMOA,aAElB,EAAK6B,MAAMkH,KAAKC,gBAAe,SAACtL,EAAKuL,GAC5BvL,IACEgL,EAAgBpJ,OAAS,GACxBoJ,EAAgB5L,SAAQ,SAAA4N,GACpB,IAAMoC,EAAgB,CAClBtP,KAAM0J,EAAS1J,KACfuC,UAAWvD,EAAUU,IAAI,cAAgB0R,GACzC7B,SAAU9M,EAAayK,IAErBsC,EAAa,CACfxP,KAAM6L,EAAOqB,GAAOlN,KACpBuC,UAAWvD,EAAUU,IAAI,WAAawN,GACtCqC,SAAU9M,EAAayK,IAE3BhK,EAAYkH,GAAQ8C,EAAO,kBAAmBoC,GAC9CpM,EAAYiH,GAAWiH,EAAa,eAAgB5B,MAIzDrE,EAAgBrJ,OAAS,GACxBqJ,EAAgB7L,SAAQ,SAAAgN,GACpB,IAAMgD,EAAgB,CAClBtP,KAAM0J,EAAS1J,KACfuC,UAAWvD,EAAUU,IAAI,cAAgB0R,GACzC7B,SAAU/M,EAAa8J,IAErBmD,EAAc,CAChBzP,KAAM8L,EAAOQ,GAAQtM,KACrBuC,UAAWvD,EAAUU,IAAI,WAAa4M,GACtCiD,SAAU/M,EAAa8J,IAE3BpJ,EAAYmH,GAAQiC,EAAQ,kBAAmBgD,GAC/CpM,EAAYiH,GAAWiH,EAAa,eAAgB3B,MAK5D,EAAKpL,MAAMkH,KAAKG,cAChB,EAAKhF,SAAS,CACVc,SAAS,QA/CV,2C,8HAqDN,IAAD,OACIoE,EAAsB3E,KAAK5C,MAAMkH,KAAjCK,kBADJ,EAEwC3E,KAAK5C,MAAzCwH,EAFJ,EAEIA,OAAQC,EAFZ,EAEYA,OAAQlD,EAFpB,EAEoBA,MAAOyI,EAF3B,EAE2BA,SAF3B,EAMApK,KAAKnI,MAFLoM,EAJA,EAIAA,gBAAiBC,EAJjB,EAIiBA,gBACjB1I,EALA,EAKAA,aAAcD,EALd,EAKcA,aAAcgF,EAL5B,EAK4BA,QAEhC,OACI,6BACA,kBAAC,IAAD,CAAQnH,KAAK,UAAUiR,MAAM,SAAS3I,KAAM0I,EAAUnD,OAAK,EAACxF,QAASzB,KAAKiB,UAAW/B,KAAK,UAC1F,kBAAC,IAAD,CACIqB,QAASA,EACToB,MAAOA,EACPlB,SAAUT,KAAKR,aACfgB,OAAQ,CACJ,kBAAC,IAAD,CAAQlI,IAAI,OAAOmJ,QAASzB,KAAKR,cAAjC,UAGA,kBAAC,IAAD,CAAQlH,IAAI,SAASc,KAAK,UAAWqI,QAASzB,KAAKmB,cAAnD,YAMR,kBAAC,IAAD,CAAMmJ,OAAO,WAAWC,kBAAgB,GAE7B,mBAAV5I,EACD,kBAAC,IAAMoD,SAAP,KACI,kBAAC,IAAKnE,KAAN,CAAWoE,MAAM,kBACZL,EAAkB,SAAU,GAA5BA,CACG,kBAAC,KAAD,CACI1C,KAAK,WACLpB,YAAY,8CACZoE,iBAAkB,WAClBC,cAAc,EAEd5E,SAAU,SAACkB,GAAW,EAAK/B,SAAS,CAACyE,gBAAiB1C,MAEpDqD,EACE1M,OAAOC,KAAKyM,GAAQO,KAAK,SAACnI,GAAD,OACrB,kBAAC,KAAOqI,OAAR,CAAehN,IAAK2E,GAAK4H,EAAO5H,GAAIlE,KAAO,IAAM8L,EAAO5H,GAAIsI,aAElE,QAKd,6BACKrB,EAAgBkB,KAAI,SAACI,GAAD,OACjB,kBAAC,IAAK5E,KAAN,CACItI,IAAKkN,EACLR,MAAO,iBAAmBH,EAAOW,GAAWzM,KAAO,IAAM8L,EAAOW,GAAWD,UAE1EZ,EAAkBa,EACf,CAAEC,aAAclK,EAAaiK,IAAc,GACzCE,eAAiBnK,EAAaiK,IAAc,GAC5CG,MAAQ,CACN,CAAEC,UAAU,EACZzG,QAAS,kEALhBwF,CAQD,kBAAC,GAAD,CACI9D,YAAa,sDACbgF,SAAU,CAACC,QAAS,GACpBxF,SAAU,SAACc,GACP,IAAM2E,EAAmBxK,EACzBwK,EAAiBP,GAAapE,EAAEG,OAAOC,MACvC,EAAK/B,SAAS,CAAClE,aAAcwK,cAQjD,kBAAC,IAAMhB,SAAP,KACA,kBAAC,IAAKnE,KAAN,CAAWoE,MAAM,kBACZL,EAAkB,SAAU,GAA5BA,CACG,kBAAC,KAAD,CACA1C,KAAK,WACLpB,YAAY,8CACZoE,iBAAkB,WAClBC,cAAc,EAEd5E,SAAU,SAACkB,GAAW,EAAK/B,SAAS,CAACwE,gBAAiBzC,MAEhDoD,EACEzM,OAAOC,KAAKwM,GAAQQ,KAAK,SAACnI,GAAD,OACrB,kBAAC,KAAOqI,OAAR,CAAehN,IAAK2E,GAAK2H,EAAO3H,GAAIlE,SAE1C,QAKd,6BACKkL,EAAgBmB,KAAI,SAACc,GAAD,OACjB,kBAAC,IAAKtF,KAAN,CACItI,IAAK4N,EACLlB,MAAO,iBAAmBJ,EAAOsB,GAAUnN,MAE1C4L,EAAkBuB,EACf,CAAET,aAAcjK,EAAa0K,IAAa,GACxCR,eAAiBlK,EAAa0K,IAAa,GAC3CP,MAAQ,CACN,CAAEC,UAAU,EACZzG,QAAS,iEALhBwF,CAQD,kBAAC,GAAD,CACI9D,YAAa,qDACbgF,SAAU,CAACC,QAAS,GACpBxF,SAAU,SAACc,GACP,IAAM+E,EAAmB3K,EACzB2K,EAAiBD,GAAY9E,EAAEG,OAAOC,MACtC,EAAK/B,SAAS,CAACjE,aAAc2K,qB,GAhMtCzF,IAAMC,WAmNjCuJ,GAAehD,IAAKC,OAAO,CAACpO,KAAM,sBAAnBmO,CAA0CgD,IAEzD,IAce9C,eACXlK,aAfoB,SAACrF,GACrB,MAAO,CACHC,KAAMD,EAAMwB,SAASvB,KACrB8M,OAAQ/M,EAAME,UAAUmD,KAAKmM,OAC7BxC,OAAQhN,EAAME,UAAUmD,KAAKoM,WAIV,SAAA1P,GACvB,MAAM,CACFqE,YAAa,SAAC/B,EAASU,EAAMsB,EAAWC,GAA3B,OAA0CvE,EAASqE,EAAY/B,EAASU,EAAOsB,EAAWC,SAM3GoL,6BAAiB,iBAAM,CACnB,CAAC/O,WAAY4K,IACb,CAAC5K,WAAY2K,QAJNiE,CAMb8C,I,UChNc9C,eACZlK,YACG,MARoB,SAAAtF,GACvB,MAAO,CACJyD,eAAgB,SAACnB,EAASU,EAAO0B,EAAWJ,GAA5B,OAA0CtE,EAASyD,EAAenB,EAASU,EAAO0B,EAAWJ,SAIpGkL,EA3BO,SAAChK,GAAW,IACxBhC,EAAmCgC,EAAnChC,KAAMlB,EAA6BkD,EAA7BlD,QAASU,EAAoBwC,EAApBxC,MAAOsB,EAAakB,EAAblB,UAO7B,OACI,kBAAC,KAAD,CACIyF,MAAM,sDACND,KAAM,kBAAC,IAAD,CAAMtI,KAAK,oBAAoBoE,MAAO,CAAE6E,MAAO,SACrDmI,OAAQ,SACRC,OAAO,SACPC,UAXa,SAAAtJ,GAEjBhE,EAAM/B,eAAenB,EAASU,EAAOQ,EAAKE,UAAWY,KAWrD,kBAAC,IAAD,CAAM9C,KAAK,eAAeoE,MAAO,CAAC6E,MAAM,a,OCmDhD,SAASsI,GAASvN,GAAQ,IACfhC,EAAmCgC,EAAnChC,KAAMlB,EAA6BkD,EAA7BlD,QAASU,EAAoBwC,EAApBxC,MAAOsB,EAAakB,EAAblB,UAC7B,OACI,yBAAKgE,UAAU,sBACX,4BACI,kBAAC,IAAD,CAAM/B,GAAI,SAAW/C,EAAKE,UAAUK,MAAOP,EAAKrC,MAChD,kBAAC,KAAD,CAASK,KAAK,aACd,kBAAC,GAAD,CACIgC,KAAMA,EACNlB,QAASA,EACTU,MAAOA,EACPsB,UAAWA,KAGnB,2BAAId,EAAKkN,WAKNsC,OAjFf,SAAmBxN,GAAQ,IAChBuE,EAAgDvE,EAAhDuE,MAAOkJ,EAAyCzN,EAAzCyN,MAAO3Q,EAAkCkD,EAAlClD,QAASC,EAAyBiD,EAAzBjD,IAAKS,EAAoBwC,EAApBxC,MAAOsB,EAAakB,EAAblB,UACpCkO,EAAW,SAACzI,GACd,MAAa,mBAAVA,EAAmC,gBACzB,mBAAVA,EAAmC,gBAAtC,GAGEmJ,EAAS,SAACnJ,GACZ,MAAc,sBAAVA,EAEI,4BACA,kBAAC,KAAD,CAAKnE,MAAO,CAACuN,QAAS,OAAQC,WAAW,WACpCrJ,IAMT,4BACA,kBAAC,KAAD,CAAKnE,MAAO,CAACuN,QAAS,OAAQC,WAAW,WACpCrJ,EACD,kBAAC,KAAD,CAASvI,KAAK,aACd,kBAAC,GAAD,CACIuI,MAAOA,EACPc,SAAUtI,EACVgQ,YAAavP,EACbwP,SAAUA,EAASzI,QAQnC,OAAKkJ,GAA0B,IAAjBA,EAAMhQ,OAahB,kBAAC,IAAMkK,SAAP,KACC+F,EAAOnJ,GAEJkJ,EAAMzF,KAAI,SAAChK,GAAD,OAAU,kBAACuP,GAAD,CACpBrS,IAAK8C,EAAKrC,KACVqC,KAAMA,EACNc,UAAWA,EACXhC,QAASA,EACTU,MAAOA,QAnBP,kBAAC,IAAMmK,SAAP,KACK+F,EAAOnJ,GACR,yBAAKzB,UAAU,YACf,yBAAKA,UAAU,aACf,oDAA0ByB,EAAM/E,cAAhC,yBAAoE,kBAAC,IAAD,CAAMxD,KAAMgR,EAASzI,GAAQnE,MAAO,CAAC6E,MAAO,gBAAhH,8CC5BV4I,G,2MAEHC,c,sBAAgB,sBAAAnQ,EAAA,sEACP,EAAKqC,MAAMtC,UAAU,EAAKsC,MAAMlD,QAAS,EAAKkD,MAAMxC,OAD7C,OAGb,EAAKwC,MAAM+N,YAHE,2C,wEAOb,OACG,6BACG,kBAAC,IAAD,CACGxJ,MAAM,SACNpB,QAASP,KAAK5C,MAAMmD,QACpBqB,KAAM5B,KAAKkL,cACXzK,SAAUT,KAAK5C,MAAM+N,UACrBV,OAAO,UACPW,WAAW,UAEX,2BACG,kBAAC,IAAD,CAAMhS,KAAK,oBAAoBoE,MAAO,CAAC6E,MAAO,SADjD,gD,GAnBsB3B,IAAMC,WAmC5ByG,eACZlK,YACG,MARqB,SAAAtF,GACxB,MAAO,CACJkD,UAAW,SAACZ,EAASU,GAAV,OAAoBhD,EAASkD,EAAUZ,EAASU,SAIlDwM,CAKb6D,I,UCiBaI,I,kNA7EXxT,MAAQ,CACJyT,SAAU5K,IAAM6K,YAChBC,MAAO,G,EAIXC,SAAW,WACP,EAAK5T,MAAMyT,SAASI,QAAQC,Q,EAGhCC,KAAO,WACH,EAAK/T,MAAMyT,SAASI,QAAQE,Q,EAGhCC,KAAO,SAACL,GACJ,EAAK3T,MAAMyT,SAASI,QAAQG,KAAKL,I,EAGrC3L,aAAe,SAACiM,EAAMN,GAClB,EAAK/L,SAAS,CAAC+L,MAAOA,K,wEAIhB,IAAD,SACsBxL,KAAKnI,MAAzByT,EADF,EACEA,SAAUE,EADZ,EACYA,MACTxI,EAAgBhD,KAAK5C,MAArB4F,YAER,OAAKA,EAEG,yBAAK9C,UAAU,sBACX,kBAAC,KAAD,CACIlG,IAAKsR,EACLS,MAAM,EACNC,aAAchM,KAAKH,cAElBmD,EAAYoC,KAAI,SAACpI,EAAMC,GACpB,OACI,yBAAK3E,IAAK2E,EAAIiD,UAAU,4BACpB,yBAAK3C,IAAI,WAAWF,IAAKL,EAAK6E,WAO5CmB,EAAYnI,OAAS,EACnB,yBAAK2C,MAAO,CAACmM,UAAW,WACpB,kBAAC,IAAD,CAAMvQ,KAAK,cAAcoE,MAAO,CAACkJ,SAAU,OAAQoB,OAAQ,UAAWrG,QAASzB,KAAKyL,WAClFzI,EAAYoC,KAAI,SAAC6G,EAAGxI,GAAJ,OACd,yBACInL,IAAKmL,EACLjG,MAAO,CACHuN,QAAS,eACTjN,cAAe,cACfL,MAAO,OACPC,OAAQ,OACRwO,gBAAiBzI,IAAM+H,EAAQ,mBAAqB,QACpDW,YAAa,mBACbtO,aAAc,MACduO,YAAa3I,IAAM+H,EAAQ,OAAS,QACpCa,YAAa,UACbC,OAAQ,UACRxE,OAAQ,UAEZrG,QAAS,kBAAM,EAAKoK,KAAKpI,SAGjC,kBAAC,IAAD,CAAMrK,KAAK,eAAeoE,MAAO,CAACkJ,SAAU,OAAQoB,OAAQ,UAAWrG,QAASzB,KAAK4L,QAE3F,MA1CW,S,GA5BNlL,IAAMC,YCQjC,SAAS5B,GAAanD,GACnB,IAAMoD,EAA2B,eAAdpD,EAAKxC,MAAuC,cAAdwC,EAAKxC,KACtD,GAAK4F,EAAL,CAIA,IAAMC,EAASrD,EAAKsD,KAAO,KAAO,KAAO,EACzC,GAAKD,EAIL,OAAOD,GAAcC,EAHlBE,IAAQL,MAAM,qCALdK,IAAQL,MAAM,qC,IA2BdyN,G,2MACH1U,MAAQ,CACLwJ,SAAS,G,EAIZxB,aAAe,SAAAlI,GACU,EAAKyF,MAApBpB,YA5Cb,SAAmBwQ,EAAKC,GACrB,IAAMjO,EAAS,IAAIC,WACnBD,EAAOkO,iBAAiB,QAAQ,kBAAMD,EAASjO,EAAOI,WACtDJ,EAAOE,cAAc8N,GA+ClBpO,CAAUzG,EAAKiE,KAAKgE,eAAe,SAAA+M,GAAQ,OACxC,EAAKlN,SAAS,CACX4B,SAAS,OALZ,EAAK5B,SAAS,CAAC4B,SAAS,K,EAY9BvB,aAAe,SAAAlE,GAEZ,IAAI7C,EAvCV,SAAgB8B,GAKb,IAJA,IAAI+D,EAAS,GACT2E,EACD,iEACCC,EAAmBD,EAAW1I,OACzB4I,EAAI,EAAGA,EAAI5I,EAAQ4I,IACzB7E,GAAU2E,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAE1D,OAAO5E,EA+BOgO,CAAO,IAAMhR,EAAK7C,KAE7B,EAAKqE,MAAM1B,WAAW,SAAW,EAAK0B,MAAMtF,KAAKY,IAAM,IAAMK,EAAM6C,I,EAMtEiR,mBAAqB,WAAO,IAClB7Q,EAAe,EAAKoB,MAApBpB,YACP9C,QAAQC,IAAI,MAAO6C,GACf,EAAKoB,MAAM0P,UACZ,EAAK1P,MAAM0P,UAAU9Q,GAErB9C,QAAQC,IACL,gE,wEAKC,IACA6C,EAAegE,KAAK5C,MAApBpB,YACDiE,EACH,6BACG,kBAAC,IAAD,CAAM7G,KAAM4G,KAAKnI,MAAMwJ,QAAU,UAAY,SAC7C,yBAAKnB,UAAU,mBAAf,WAKN,OAFAhH,QAAQC,IAAI6G,KAAKnI,OAGd,kBAAC,IAAD,CACGkB,KAAK,SACLqH,SAAS,eACTF,UAAU,kBACV6M,gBAAgB,EAChB5M,OAAQH,KAAKF,aACbf,aAAcA,GACduB,SAAUN,KAAKH,cAEd7D,EACE,yBAAKqB,IAAKrB,EAAauB,IAAI,SAASC,MAAO,CAACC,MAAO,UAEnDwC,O,GAnEMU,aAuFNzD,gBAbS,SAAArF,GACrB,MAAO,CACJC,KAAMD,EAAMwB,SAASvB,KACrBkE,YAAanE,EAAMiK,QAAQ9F,gBAIN,SAAApE,GACxB,MAAO,CACJ8D,WAAY,SAACC,EAAMC,GAAP,OAAgBhE,EAAS8D,EAAWC,EAAMC,QAI7CsB,CAGbqP,IC5HMzI,GAAaC,IAAbD,SAEFkJ,G,2MACFnV,MAAQ,CACLoV,UAAW,M,EAIdC,YAAc,SAAAD,GACV,EAAKxN,SAAS,CAACwN,cACf/T,QAAQC,IAAI,YAAa8T,I,EAG7B9L,aAAe,SAAAC,GAEXA,EAAEiD,iBAGF,EAAKjH,MAAMkH,KAAKC,gBAAe,SAACtL,EAAKuL,GACjC,IAAKvL,EAAK,CACN,IAAMkU,EAAW,CACb1F,QAASjD,EAAOiD,QAChBzE,YAAa,EAAKnL,MAAMoV,UACpB,CACI,CACIzS,aAAcC,KAAK2S,MACnBvL,IAAK,EAAKhK,MAAMoV,YAG1B,IAIN,EAAK7P,MAAM+D,aAAagM,GACxB,EAAK/P,MAAMkH,KAAKG,mB,wEAKlB,IACEE,EAAsB3E,KAAK5C,MAAMkH,KAAjCK,kBAER,OACI,kBAAC,IAAD,CAAMoC,SAAW/G,KAAKmB,cAClB,kBAAC,IAAKP,KAAN,CAAWoE,MAAM,WAAWL,EAAkB,UAAW,CAACgB,MAAO,CAAC,CAACC,UAAU,EAAMzG,QAAS,gCAAhEwF,CACxB,kBAAC,GAAD,CACI9D,YAAa,+DACbgF,SAAU,CAACC,QAAS,OAI5B,kBAAC,IAAKlF,KAAN,CAAWoE,MAAM,UACb,kBAAC,GAAD,CAAQ8H,UAAW9M,KAAKkN,eAG5B,kBAAC,IAAKtM,KAAN,KACI,kBAAC,IAAD,CAAQxH,KAAK,UAAU6N,OAAK,EAACW,SAAS,UAAtC,gB,GAtDOlH,IAAMC,WA+DlBqM,GADfA,GAAe9F,IAAKC,OAAO,CAACpO,KAAM,gBAAnBmO,CAAoC8F,IC9DtCK,GAAb,2MACGxV,MAAQ,CACL0I,SAAS,EACTnH,KAAM,EAAKgE,MAAMhE,KACjBuI,MACuB,WAApB,EAAKvE,MAAMhE,KAAoB,qBAAuB,gBACzDwB,MAAO,EAAKwC,MAAMxC,MAAQ,EAAKwC,MAAMxC,MAAQ,MANnD,EASGqG,UAAY,WACT,EAAKxB,SAAS,CACXc,SAAS,KAXlB,EAeGf,aAAe,WACZ,EAAKC,SAAS,CACXc,SAAS,KAjBlB,EAqBGY,aAAe,SAAAgM,GAEZA,EAAS7R,UAAY,EAAK8B,MAAMrF,UAAUU,IACvC,aAAe,EAAK2E,MAAM+M,aAG7BjR,QAAQC,IAAIgU,GACZjU,QAAQC,IAAI,EAAKiE,MAAMxC,OACC,WAApB,EAAK/C,MAAMuB,KACZ,EAAKgE,MAAMnD,UAAUoJ,GAAW8J,GAEhC,EAAK/P,MAAMzC,QAAQ0I,GAAW,EAAKjG,MAAMxC,MAAOuS,GAGnD,EAAK1N,SAAS,CAACc,SAAS,KAnC9B,wEAuCM,OACG,kBAAC,IAAMwE,SAAP,KAEyB,WAApB/E,KAAKnI,MAAMuB,KACP,kBAAC,IAAD,CACGA,KAAK,UACLiR,MAAM,SACN3I,KAAM,WACNuF,OAAK,EACLxF,QAASzB,KAAKiB,UACd/B,KAAK,UAER,kBAAC,IAAD,CACGA,KAAK,QACLuC,QAASzB,KAAKiB,WAEd,kBAAC,IAAD,CAAM7H,KAAK,SAAS,QAK7B,kBAAC,IAAD,CACGmH,QAASP,KAAKnI,MAAM0I,QACpBE,SAAUT,KAAKR,aACfmC,MAAO3B,KAAKnI,MAAM8J,MAClBnB,OAAQ,CACL,kBAAC,IAAD,CACGlI,IAAI,SACJc,KAAK,UACLqI,QAASzB,KAAKR,cAHjB,YASH,kBAAC,GAAD,CAAc2B,aAAcnB,KAAKmB,qBA1EhD,GAAqCR,aAyFtByG,eACZlK,YACG,MAVqB,SAAAtF,GACxB,MAAO,CACJqC,UAAW,SAACC,EAASiT,GAAV,OAAuBvV,EAASqC,EAAUC,EAASiT,KAC9DxS,QAAS,SAACT,EAAS+C,EAAIkQ,GAAd,OACNvV,EAAS+C,EAAQT,EAAS+C,EAAIkQ,SASpC5F,8BALYH,CAMbiG,I,WCzEmBC,G,2MAClBzV,MAAQ,CAAC0I,SAAS,G,EAElBU,UAAY,WACT,EAAKxB,SAAS,CACXc,SAAS,K,EAGf4K,UAAY,WACT,EAAK1L,SAAS,CACXc,SAAS,K,wEAcL,IAAD,EAOFP,KAAK5C,MAAMmQ,SALZhT,EAFG,EAEHA,WACAC,EAHG,EAGHA,aACAiN,EAJG,EAIHA,QACAzE,EALG,EAKHA,YACA1H,EANG,EAMHA,UAEGV,EAAQoF,KAAK5C,MAAMH,GACzB,OACG,yBAAKiD,UAAU,YACZ,yBAAKA,UAAU,aACZ,4BAA4B1F,EAnD5BgT,SAASC,mBAAmB,QANxB,CACbC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,aAsDI,uBAAGrQ,MAAO,CAAC6E,MAAO,YAAlB,OAAmC9H,EAAY+O,GAAW/O,GAAc,WACxE,2BAAIkN,GACFzE,GAAeA,EAAYnI,OAAS,kBAAC,GAAD,CAAcmI,YAAaA,IAAkB,MAEtF,yBAAK9C,UAAU,4BACZ,kBAAC,GAAD,CAAiBhB,KAAK,QAAQtE,MAAOoF,KAAK5C,MAAMH,GAAIkN,YAAa7O,EAAU2B,GAAI7D,KAAK,SACpF,kBAAC,KAAD,CAASA,KAAK,aACd,kBAAC,IAAD,CAAQqI,QAASzB,KAAKiB,UAAW/B,KAAK,SACnC,kBAAC,IAAD,CAAM9F,KAAK,WADd,WAGA,kBAAC,GAAD,CACGc,QAAQ,YACRU,MAAOA,EACP2F,QAASP,KAAKnI,MAAM0I,QACpBU,UAAWjB,KAAKiB,UAChBkK,UAAWnL,KAAKmL,kB,GApDIzK,IAAMC,WCErC,IAAMmN,GAAb,iCAToB7Q,EASpB,0KACGpF,MAAQ,CACL8D,MAXcsB,EAWG,EAAKG,MAAMH,GAVxB,aAAeA,IAQzB,EAKG8Q,aAAe,SAAA9Q,GACZ,EAAKG,MAAMtC,UAAUuI,GAAWpG,IANtC,EA6CG6N,OAAS,SAAAnJ,GACN,OACG,4BACG,kBAAC,KAAD,CAAKnE,MAAO,CAACuN,QAAS,OAAQC,WAAY,WACtCrJ,EACD,kBAAC,KAAD,CAASvI,KAAK,aACd,kBAAC,GAAD,CACA+Q,YAAa,EAAK/M,MAAMH,GACxB7D,KAAK,cArDpB,4EAWgB4U,GAAO,IAAD,OAChB,OAAOA,EAAK5I,KAAI,SAAA6I,GAAO,OACpB,kBAAC,GAAD,CACG3V,IAAK2V,EAAQ,GACbhR,GAAIgR,EAAQ,GACZV,SAAUU,EAAQ,GAClBxS,OAAQ,EAAKsS,oBAjBzB,mCAwBgBG,GAAY,IAAD,OAcrB,OAbsB/V,OAAOC,KAAK8V,GAAW9I,KAAI,SAAA9M,GAAG,MAAI,CACrDA,EACA4V,EAAU5V,OAWQyE,QAClB,SAAAoQ,GAAQ,OACLA,EAAS,IAAMA,EAAS,GAAG7R,UAAUK,OAAS,EAAK9D,MAAM8D,UAxCrE,+BA4DY,IAECuS,EAAalO,KAAK5C,MAAlB8Q,UAGHC,EAAyB,GAM7B,OALID,IACDC,EAAyBnO,KAAKoO,aAAaF,IAK3C,6BACIlO,KAAK8K,OAAO,aACsB,IAAlCqD,EAAuBtT,OACrB,+EAEAmF,KAAKqO,aAAaF,QA7EjC,GAAkCxN,aAkGnByG,eACZlK,aAfqB,SAAArF,GAErB,MAAO,CACJqW,UAFerW,EAAME,UAAUmD,KAAKoT,cAMf,SAAA1W,GACxB,MAAO,CACJkD,UAAW,SAACZ,EAASU,GAAV,OAAoBhD,EAASkD,EAAUZ,EAASU,SAU9D2M,6BAAiB,SAAAnK,GAAK,MAAI,CACvB,CACG5E,WAAY6K,GAEZkL,QAAS,CAAC,qBATJnH,CAYb0G,IC1IIU,G,2MACJ3W,MAAQ,CAAE0I,SAAS,G,EAEnBU,UAAY,WACV,EAAKxB,SAAS,CACZc,SAAS,K,EAKb2K,c,sBAAgB,sBAAAnQ,EAAA,sEAER,EAAKqC,MAAMtC,UAAU,EAAKsC,MAAMlD,QAAS,EAAKkD,MAAMxC,OAF5C,OAId,EAAK6E,SAAS,CACVc,SAAS,IAIb,EAAKnD,MAAM2L,QAAQ0F,KAAK,SATV,2C,EAYhBtD,UAAY,WACV,EAAK1L,SAAS,CACZc,SAAS,K,wEAKX,OACE,6BACE,kBAAC,IAAD,CAAQnH,KAAK,SAASqI,QAASzB,KAAKiB,UAAWgG,OAAK,EAAC/H,KAAK,SACtD,kBAAC,IAAD,CAAM9F,KAAK,WADf,WAGA,kBAAC,IAAD,CACEuI,MAAM,qCACNpB,QAASP,KAAKnI,MAAM0I,QACpBqB,KAAM5B,KAAKkL,cACXzK,SAAUT,KAAKmL,UACfV,OAAO,UACPW,WAAW,UAEX,2BAAG,kBAAC,IAAD,CAAMhS,KAAK,oBAAoBoE,MAAO,CAAE6E,MAAO,SAAY,uE,GA1C1C3B,IAAMC,WAuDpByG,eACZlK,YACG,MARoB,SAAAtF,GACvB,MAAO,CACJkD,UAAW,SAACZ,EAASU,GAAV,OAAoBhD,EAASkD,EAAUZ,EAASU,SAIlDwM,CAKboH,I,UC0CYpH,I,OAAAA,YACZlK,aARqB,SAAArF,GAErB,MAAO,CACJ4K,SAFc5K,EAAME,UAAUmD,KAAKmO,aASnC,MAEH9B,6BAAiB,SAAAnK,GAAK,MAAI,CACvB,CACG5E,WAAY,YACZC,IAAK2E,EAAMsR,MAAMC,OAAO1R,QARlBmK,EAxFE,SAAAhK,GAAU,IACjBqF,EAAYrF,EAAZqF,SACDxF,EAAKG,EAAMsR,MAAMC,OAAO1R,GAG9B,OAAKwF,EASDA,IAAaA,EAASxF,GAEpB,yBAAKiD,UAAU,kBACZ,sDAKN,6BACM,kBAAC,KAAD,CACG2I,OAAQ,kBAAMC,OAAOC,QAAQC,QAC7BrH,MAAOc,EAASxF,GAAIlE,MAEpB,kBAAC,KAAD,CAAcmG,KAAK,QAAQ0P,OAAQ,GACnC,kBAAC,KAAahO,KAAd,CAAmBoE,MAAM,cAAcvC,EAASxF,GAAI1C,YACjD,kBAAC,KAAaqG,KAAd,CAAmBoE,MAAM,cACrB6J,KAAOpM,EAASxF,GAAIzC,aAAagT,UAAU7F,OAAO,OAGrDlF,EAASxF,GAAIvC,cACd,kBAAC,KAAakG,KAAd,CAAmBoE,MAAM,iBACvB6J,KAAOpM,EAASxF,GAAIvC,cAAc8S,UAAUsB,YAG9C,OAIT,kBAAC,GAAD,CAAc9L,YAAaP,EAASxF,GAAI+F,cACxC,yBAAK9C,UAAU,kBACZ,2BAAIuC,EAASxF,GAAIgG,aACjB,kBAAC,KAAD,CAAK/C,UAAU,cAAc1C,MAAO,CAACuN,QAAS,OAAQC,WAAW,WAC9D,kBAAC,GAAD,CAAiBpQ,MAAOqC,IACxB,kBAAC,KAAD,CAAS7D,KAAK,aACd,kBAAC,GAAD,CACGwB,MAAOqC,EACP/C,QAASgJ,GACT6F,QAAS3L,EAAM2L,WAKrB,yBAAK7I,UAAU,QACZ,kBAAC,GAAD,CAAcjD,GAAIA,IAClB,kBAAC,GAAD,CACG3E,IAAI,iBACJqJ,MAAM,iBACNzF,UAAU,eACV2O,MAAOpI,EAASxF,GAAI1B,aACpBrB,QAASgJ,GACT/I,IAAKsI,EACL7H,MAAOqC,IAEV,kBAAC,GAAD,CACG3E,IAAI,iBACJqJ,MAAM,iBACNzF,UAAU,eACV2O,MAAOpI,EAASxF,GAAIzB,aACpBtB,QAASgJ,GACTtI,MAAOqC,OAlEhB,yBAAKiD,UAAU,kBACZ,kBAAC,KAAD,CAAM4G,IAAI,aAAa5H,KAAK,eCyDzBkI,eACZlK,aARqB,SAAArF,GAErB,MAAO,CACJoO,MAFWpO,EAAME,UAAUmD,KAAKmM,WAQnCE,6BAAiB,SAAAnK,GAAK,MAAI,CACvB,CACG5E,WAAY,SACZC,IAAK2E,EAAMsR,MAAMC,OAAO1R,QALlBmK,EArED,SAAAhK,GAAU,IACb6I,EAAU7I,EAAV6I,MACFhJ,EAAKG,EAAMsR,MAAMC,OAAO1R,GAQ9B,OAAKgJ,EAQDA,IAAUA,EAAMhJ,GAEd,yBAAKiD,UAAU,kBACZ,mDAMN,6BACM,kBAAC,KAAD,CACG2I,OAAQ,kBAAMC,OAAOC,QAAQC,QAC7BrH,MAAOsE,EAAMhJ,GAAIlE,KACjBgW,SAAU,eAAgB9I,EAAMhJ,GAAIyK,KAAK8F,SAASC,mBAAmB,QA5BjE,CACbC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,aA0BI,kBAAC,KAAD,CAAc3O,KAAK,QAAQ0P,OAAQ,GACnC,kBAAC,KAAahO,KAAd,CAAmBoE,MAAM,cAAciB,EAAMhJ,GAAI1C,YAC9C,kBAAC,KAAaqG,KAAd,CAAmBoE,MAAM,cACrB6J,KAAO5I,EAAMhJ,GAAIzC,aAAagT,UAAU7F,OAAO,OAGlD1B,EAAMhJ,GAAIvC,cACX,kBAAC,KAAakG,KAAd,CAAmBoE,MAAM,iBACvB6J,KAAO5I,EAAMhJ,GAAIvC,cAAc8S,UAAUsB,YAG3C,OAIZ,yBAAK5O,UAAU,kBACZ,2BAAI+F,EAAMhJ,GAAIwK,SACd,kBAAC,GAAD,CACG9F,MAAM,oBACNzF,UAAU,kBACVhC,QAASiJ,GACT0H,MAAO5E,EAAMhJ,GAAI9B,gBACjBP,MAAOqC,MA3CV,yBAAKiD,UAAU,kBACZ,kBAAC,KAAD,CAAM4G,IAAI,aAAa5H,KAAK,cCmDzBkI,eACXlK,aARoB,SAACrF,GAErB,MAAO,CACHwN,OAFWxN,EAAME,UAAUmD,KAAKoM,WAQpCC,6BAAiB,SAACnK,GAAD,MAAU,CAAC,CACxB5E,WAAY,SACZC,IAAK2E,EAAMsR,MAAMC,OAAO1R,QAJjBmK,EAhEA,SAAChK,GAAW,IACfiI,EAAWjI,EAAXiI,OACFpI,EAAKG,EAAMsR,MAAMC,OAAO1R,GAG9B,OAAKoI,EAQDA,IAAWA,EAAOpI,GAEd,yBAAKiD,UAAU,kBACX,oDAMR,6BACI,kBAAC,KAAD,CACG2I,OAAQ,kBAAMC,OAAOC,QAAQC,QAC7BrH,MAAO0D,EAAOpI,GAAIlE,KAAO,IAAMsM,EAAOpI,GAAIsI,SAC1CwJ,SAAU,SAAU1J,EAAOpI,GAAI+K,IAAIwF,SAASC,mBAAmB,QAvB1D,CAAEC,QAAS,OAAQC,KAAM,UAAWC,MAAO,OAAQC,IAAK,aAyB7D,kBAAC,KAAD,CAAc3O,KAAK,QAAQ0P,OAAQ,GACnC,kBAAC,KAAahO,KAAd,CAAmBoE,MAAM,cAAcK,EAAOpI,GAAI1C,YAC/C,kBAAC,KAAaqG,KAAd,CAAmBoE,MAAM,cACrB6J,KAAOxJ,EAAOpI,GAAIzC,aAAagT,UAAU7F,OAAO,OAGnDtC,EAAOpI,GAAIvC,cACZ,kBAAC,KAAakG,KAAd,CAAmBoE,MAAM,iBACvB6J,KAAOxJ,EAAOpI,GAAIvC,cAAc8S,UAAUsB,YAG5C,OAIN,yBAAK5O,UAAU,kBACX,2BAAImF,EAAOpI,GAAIwK,SACf,kBAAC,GAAD,CACI9F,MAAM,oBACNzF,UAAU,kBACV2O,MAAOxF,EAAOpI,GAAI9B,gBAClBjB,QAASkJ,GACTxI,MAAOqC,MA3Cf,yBAAKiD,UAAU,kBACX,kBAAC,KAAD,CAAM4G,IAAI,aAAa5H,KAAK,c,oBClBtC8P,G,2MACJnX,MAAQ,CACNkG,MAAO,GACPkR,SAAU,I,EAEZpP,aAAe,SAACuB,GACd,EAAK3B,SAAL,eACG2B,EAAEG,OAAOtE,GAAKmE,EAAEG,OAAOC,S,EAG5BL,aAAe,SAACC,GACdA,EAAEiD,iBACF,EAAKjH,MAAM8R,OAAO,EAAKrX,Q,wEAEf,IAAD,EACqBmI,KAAK5C,MAAzBtF,EADD,EACCA,KAAMqX,EADP,EACOA,UACd,OAAIrX,EAAKY,IAAY,kBAAC,IAAD,CAAUyF,GAAG,MAE9B,kBAAC+I,GAAA,EAAD,CAAMH,SAAU/G,KAAKmB,cACnB,kBAAC+F,GAAA,EAAKkI,MAAN,KACE,wCACA,2BAAOhW,KAAK,QAAQyH,YAAY,QAAQ5D,GAAG,QAAQqD,SAAUN,KAAKH,gBAGpE,kBAACqH,GAAA,EAAKkI,MAAN,KACE,2CACA,2BAAOhW,KAAK,WAAWyH,YAAY,WAAW5D,GAAG,WAAWqD,SAAUN,KAAKH,gBAG7E,kBAACwP,GAAA,EAAD,CAAQjW,KAAK,UAAb,UAEA,yBAAK8G,UAAU,mBACTiP,EAAY,2BAAIA,GAAiB,W,GAhC5BxO,aAoDNzD,gBAbS,SAACrF,GACvB,MAAM,CACJsX,UAAWtX,EAAMG,KAAKmX,UACtBrX,KAAMD,EAAMwB,SAASvB,SAIE,SAACF,GAC1B,MAAO,CACLsX,OAAQ,SAACI,GAAD,OAAW1X,GlCtDA2X,EkCsDgBD,ElCrD5B,SAAC1X,EAAUC,EAAX,GAA6B,EAAVC,KAEnB0X,2BACHD,EAAYxR,MACZwR,EAAYN,UACZrW,MAAK,WACLhB,EAAS,CAAEwB,KAAM,qBAChBJ,OAAM,SAACC,GACRrB,EAAS,CAAEwB,KAAM,cAAeH,cATlB,IAACsW,MkC0DRrS,CAA6C8R,ICnDtDS,G,2MACF5X,MAAQ,CACJkG,MAAO,GACPkR,SAAU,GACVlW,KAAM,GACNiF,SAAU,GACV0R,WAAY,CACR3R,MAAO,K,EAIf8B,aAAe,SAACuB,GACZ,EAAK3B,SAAL,eACK2B,EAAEG,OAAOtE,GAAKmE,EAAEG,OAAOC,S,EAIhCL,aAAe,SAACC,GACZA,EAAEiD,iBADgB,MAG0B,EAAKxM,MAC3C8X,EAAS,CACX5R,MALc,EAGVA,MAGJkR,SANc,EAGHA,SAIXlW,KAPc,EAGOA,KAKrBiF,SARc,EAGaA,UAQ/B,EAAKZ,MAAMwS,OAAOD,GAElB,EAAKlQ,SAAS,CAACiQ,WAAYC,K,wEAGrB,IACED,EAAe1P,KAAKnI,MAApB6X,WACA5X,EAASkI,KAAK5C,MAAdtF,KAGR,OAAK4X,GAAcA,EAAW3R,OAAS2R,EAAW3R,QAAUjG,EAAKiG,MAEzD,kBAAC,IAAD,CAAUI,GAAG,MAKjB,kBAAC+I,GAAA,EAAD,CAAMH,SAAU/G,KAAKmB,cACjB,kBAAC+F,GAAA,EAAKkI,MAAN,KACI,6CACA,2BAAOhW,KAAK,OAAOyH,YAAY,aAAa5D,GAAG,OAAOqD,SAAUN,KAAKH,gBAGzE,kBAACqH,GAAA,EAAKkI,MAAN,KACI,4CACA,2BAAOhW,KAAK,OAAOyH,YAAY,YAAY5D,GAAG,WAAWqD,SAAUN,KAAKH,gBAG5E,kBAACqH,GAAA,EAAKkI,MAAN,KACI,wCACA,2BAAOhW,KAAK,QAAQyH,YAAY,QAAQ5D,GAAG,QAAQqD,SAAUN,KAAKH,gBAGtE,kBAACqH,GAAA,EAAKkI,MAAN,KACI,2CACA,2BAAOhW,KAAK,WAAWyH,YAAY,WAAW5D,GAAG,WAAWqD,SAAUN,KAAKH,gBAG/E,kBAACwP,GAAA,EAAD,CAAQjW,KAAK,UAAb,e,GAlEKuH,aAqFNzD,gBAbS,SAACrF,GACrB,MAAO,CACHC,KAAMD,EAAMwB,SAASvB,KACrBqX,UAAWtX,EAAMG,KAAKmX,cAIH,SAACvX,GACxB,MAAO,CACHgY,OAAQ,SAACN,GAAD,OAAW1X,GnChEJiY,EmCgEoBP,EnC/DlC,SAAC1X,EAAUC,EAAX,GAAyC,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,UAE9BD,EAAKgY,+BACHD,EAAQ9R,MACR8R,EAAQZ,UACRrW,MAAK,SAAAmX,GAGL,cAFOF,EAAO,SACdA,EAAQvS,SAAW,wJACZvF,EAAUS,WAAW,SAASC,IAAIsX,EAAK/X,KAAKU,KAAKsX,IAAIH,GAC3DjX,MAAK,WACOd,EAAKG,YACXY,cAAc,CAAEC,YAAa+W,EAAQ9W,UACzCC,OAAM,SAAAC,GAASC,QAAQC,IAAI,mCAC7BP,MAAK,WACNhB,EAAS,CAAEwB,KAAM,sBAChBJ,OAAM,SAACC,GACRrB,EAAS,CAAEwB,KAAM,eAAgBH,cAjBjB,IAAC4W,MmCoER3S,CAA6CuS,ICjEtDQ,G,YACH,WAAY7S,EAAO8S,GAAU,IAAD,8BACzB,4CAAM9S,EAAO8S,KAQhBC,gCAAkC,WAC/B,EAAK1Q,SAAS,CAAChC,MAAO,UAVG,EAY5B2S,+BAAiC,WAC9B,EAAK3Q,SAAS,CAAChC,MAAO,SAbG,EA0B5B4S,WAAa,WAGV,OAFe,EAAKjT,MAAbtF,KAEEY,IAEH,kBAAC,IAAD,KACG,kBAAC,IAAD,CACGiD,KAAK,IACL2U,OAAK,EAGLC,OAAQ,SAAAnT,GAAK,OACV,kBAAC,GAAD,eACG4M,QAAS,EAAKmG,gCACdlG,QAAS,EAAKmG,gCACVhT,OAIb,kBAAC,IAAD,CAAOzB,KAAK,QAAQ6U,UAAW7H,KAC/B,kBAAC,IAAD,CAAOhN,KAAK,sBAAsB6U,UAAWC,KAE7C,kBAAC,IAAD,CAAO9U,KAAK,mBAAmB6U,UAAWE,KAC1C,kBAAC,IAAD,CAAO/U,KAAK,mBAAmB6U,UAAWG,KAE1C,kBAAC,IAAD,CAAOhV,KAAK,UAAU6U,UAAWf,KACjC,kBAAC,IAAD,CAAO9T,KAAK,UAAU6U,UAAWpR,IAGjC,kBAAC,IAAD,CAAOmR,OAAQ,kBAAM,kBAAC,IAAD,CAAUpS,GAAG,UAKrC,kBAAC,IAAD,KAEG,kBAAC,IAAD,CACGxC,KAAK,IACL2U,OAAK,EAGLC,OAAQ,SAAAnT,GAAK,OACV,kBAAC,GAAD,eACG4M,QAAS,EAAKmG,gCACdlG,QAAS,EAAKmG,gCACVhT,OAIb,kBAAC,IAAD,CAAOzB,KAAK,UAAU6U,UAAWxB,KAGjC,kBAAC,IAAD,CAAOuB,OAAQ,kBAAM,kBAAC,IAAD,CAAUpS,GAAG,WA5E3C,EAAKtG,MAAQ,CACV4F,MAAO,OAHe,E,sEAgBzB,OACG,kBAAC,IAAD,KACG,kBAAC,GAAD,MACA,yBAAKyC,UAAU,MAAM1C,MAAO,CAACC,MAAOuC,KAAKnI,MAAM4F,QAC5C,uBAAM4S,WAAN,Y,GArBG3P,IAAMC,WA2FTyG,eAAQlK,aALC,SAAArF,GACrB,MAAO,CACJC,KAAMD,EAAMwB,SAASvB,SAGZsP,CAAkC6I,IC1G7BW,QACW,cAA7B9H,OAAO7K,SAAS4S,UAEe,UAA7B/H,OAAO7K,SAAS4S,UAEhB/H,OAAO7K,SAAS4S,SAASnC,MACvB,2D,0mBClBN,IAAMoC,GAAY,CAChBC,WAAW,EACXC,QAAS,MAyEIC,GAtEK,WAAgC,IAA/BpZ,EAA8B,uDAAtBiZ,GAAW3Q,EAAW,uCACjD,OAAQA,EAAO/G,MAEX,IAAK,iBAEH,OADAF,QAAQC,IAAI,kBACL,MACFtB,EADL,CAEEY,IAAK0H,EAAO1H,MAEhB,IAAK,eAED,OADAS,QAAQC,IAAI,gBACL,MACFtB,EADL,CAEEmZ,QAAS,kBAGf,IAAK,eAED,OADA9X,QAAQC,IAAI,gBACLtB,EAEX,IAAK,aAED,OADAqB,QAAQC,IAAI,cACL,MACFtB,EADL,CAEEmZ,QAAS,gBAGf,IAAK,iBAED,OADA9X,QAAQC,IAAI,kBACLtB,EAEX,IAAK,eAED,OADAqB,QAAQC,IAAI,gBACL,MACFtB,EADL,CAEEmZ,QAAS,kBAGf,IAAK,iBAEH,OADA9X,QAAQC,IAAI,kBACL,MACFtB,EADL,CAEEmE,YAAamE,EAAOnE,cAGxB,IAAK,eAED,OADA9C,QAAQC,IAAI,gBACL,MACFtB,EADL,CAEEmZ,QAAS,kBAGf,IAAK,iBAED,OADA9X,QAAQC,IAAI,kBACLtB,EAEX,IAAK,eAED,OADAqB,QAAQC,IAAI,gBACL,MACFtB,EADL,CAEEmZ,QAAS,kBAGf,QACE,OAAOnZ,I,6jBCrEf,IAAMiZ,GAAY,CACd3B,UAAW,MAwDE+B,GArDK,WAAgC,IAA/BrZ,EAA8B,uDAAtBiZ,GAAW3Q,EAAW,uCACjD,OAAOA,EAAO/G,MACZ,IAAK,cAEH,OADAF,QAAQC,IAAI,eACL,MACFtB,EADL,CAEEsX,UAAW,iBAGf,IAAK,gBAEH,OADAjW,QAAQC,IAAI,iBACL,MACFtB,EADL,CAEEsX,UAAW,OAGf,IAAK,kBAEH,OADAjW,QAAQC,IAAI,mBACLtB,EAET,IAAK,iBAEH,OADAqB,QAAQC,IAAI,kBACL,MACFtB,EADL,CAEEsX,UAAW,OAGf,IAAK,eAEH,OADAjW,QAAQC,IAAI,gBACL,MACFtB,EADL,CAEEsX,UAAWhP,EAAOlH,IAAIkG,UAG1B,IAAK,yBAEH,OADAjG,QAAQC,IAAI,0BACL,MACFtB,EADL,CAEEsX,UAAW,OAGf,IAAK,uBAEH,OADAjW,QAAQC,IAAI,wBACL,MACFtB,EADL,CAEEsX,UAAW,0BAGf,QACE,OAAOtX,ICxCAsZ,GAPKC,YAAgB,CAClCpZ,KAAMkZ,GACNpP,QAASmP,GACTlZ,UAAWsZ,oBACXhY,SAAUiY,qBCINC,GAAQC,YAAYL,GACtB/J,YACEqK,YAAgBC,KAAMC,kBAAkB,CAAC7Z,OAAMC,YAAW+B,gBAC1D8X,8BAAmBC,EAAQ,CAACC,YAAa,QAASC,wBAAwB,EAAMC,mBAAmB,GAAOC,MAC1GC,0BAAeL,KAInBN,GAAMY,oBAAoBvZ,MAAK,WAC7BwZ,IAAS7B,OAAO,kBAAC,IAAD,CAAUgB,MAAOA,IAAO,kBAAC,GAAD,OAAoBhE,SAAS8E,eAAe,SJ0GlF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5Z,MAAK,SAAA6Z,GACjCA,EAAaC,qB","file":"static/js/main.db97b216.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heirloom22_logo.e81dc3fb.svg\";","export const signIn = (credentials) => {\n    return (dispatch, state, {auth}) => {\n            \n      auth.signInWithEmailAndPassword(\n        credentials.email,\n        credentials.password\n      ).then(() => {\n        dispatch({ type: 'LOGIN_SUCCESS' });\n      }).catch((err) => {\n        dispatch({ type: 'LOGIN_ERROR', err });\n      });\n  \n    }\n  }\n  \nexport const signOut = () => {\n  return (dispatch, state, {auth}) => {\n\n    auth.signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n}\n  \nexport const signUp = (newUser) => {\n  return (dispatch, state, {auth, firestore}) => {\n\n    auth.createUserWithEmailAndPassword(\n      newUser.email, \n      newUser.password\n    ).then(resp => {\n      delete newUser['password'];\n      newUser.photoURL = \"https://firebasestorage.googleapis.com/v0/b/testing-e1ec1.appspot.com/o/No%20profile%20photo.png?alt=media&token=23fa70a3-c8a7-409d-bd73-0d38ed8772d6\";\n      return firestore.collection('users').doc(resp.user.uid).set(newUser)\n      .then(() => {\n        var user = auth.currentUser;\n        user.updateProfile({ displayName: newUser.name});\n      }).catch(err => { console.log('Set up user profile ERROR')});\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n}\n\nexport const updateUserProfile = (info) => {\n  return (dispatch, state, {auth, firestore}) => {\n    var user = auth.currentUser;\n    var infoElement = [\"name\", \"lastName\", \"location\", \"bio\", \"photoURL\"];\n    Object.keys(info).forEach(key => {\n      if(!infoElement.includes(key)||!info[key]||info[key] === '') {delete info[key]}\n    })\n    firestore.collection('users').doc(user.uid).update({\n            ...info,\n    }).then(() => {\n      var user = auth.currentUser;\n      user.updateProfile({ displayName: info.name});\n    }).catch(err => { console.log('Set up user profile ERROR')})\n    .then(() => {\n      dispatch({ type: 'PROFILE_UPDATE_SUCCESS'});\n    }).catch((err) => {\n      dispatch({ type: 'PROFILE_UPDATE_ERROR'});\n    });\n  }\n}\n","import firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Firebase configuration\nconst config = {\n    apiKey: \"AIzaSyD1XO5L2AYwpimMVN6pzl2OtFRJE2yE9Zc\",\n    authDomain: \"testing-e1ec1.firebaseapp.com\",\n    databaseURL: \"https://testing-e1ec1.firebaseio.com\",\n    projectId: \"testing-e1ec1\",\n    storageBucket: \"testing-e1ec1.appspot.com\",\n    messagingSenderId: \"656238030591\",\n    appId: \"1:656238030591:web:ee3f92b02ce48007\"\n  };\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\n\nexport const fireauth = firebase.auth;\n\nexport const firestore = firebase.firestore();\n\nexport const firebasestore = firebase.firestore;\n\nexport const storageRef = firebase.storage().ref();\n\nexport default firebase ","import firebase from '../../firebase/config'\n\nexport const createObj = (objType, obj) => {\n    return (dispatch, getState, { auth, firestore }) => {\n        firestore.collection(objType).add({\n            ...obj,\n            authroId: auth.currentUser.uid,\n            created_by: auth.currentUser.displayName,\n            date_created: new Date(),\n            last_modified: new Date()\n        }).then((doc) => {\n            dispatch({ type: 'CREATE_SUCCESS' , doc: doc});\n        }).catch(err => {\n            console.log(err);\n            dispatch({ type: 'CREATE_ERROR' }, err);\n        });\n    }\n}\n\nexport const editObj = (objType, docId, obj) => {\n    return (dispatch, getState, { firestore }) => {\n        Object.keys(obj).forEach(key => {if (!obj[key] || (obj[key] || []).length === 0)  delete obj[key]})\n        var ref = firestore.collection(objType).doc(docId)\n        ref.update({\n            ...obj,\n            last_modified: new Date()\n        }).then(() => {\n            dispatch({ type: 'EDIT_SUCCESS' });\n        }).catch(err => {\n            console.log(err);\n            dispatch({ type: 'EDIT_ERROR' }, err);\n        });\n    }\n}\n\n// export const deleteObj = (objType, docId) => {\n//     return (dispatch, getState, { firestore }) => {\n//         const ref = firestore.collection(objType).doc(docId)\n//         ref.delete()\n//         .then(() => {\n//             dispatch({ type: 'DELETE_SUCCESS' });\n//         }).catch(err => {\n//             console.log(err);\n//             dispatch({ type: 'DELETE_ERROR'}, err);\n//         })\n//     }\n// }\n\n/*\n    remove all relations that this object is currently having,\n    and clean up all relations in other objects before deleting.\n*/\nexport const deleteObj = (objType, docId) => {\n    return async (dispatch, getState, { firestore }) => {\n        const ref = firestore.collection(objType).doc(docId)\n        const snapshot = await ref.get();\n        console.log(snapshot.data());\n        const doc = snapshot.data();\n        if(doc.artefacts_links){\n            doc.artefacts_links.forEach(item => {dispatch(deleteRelation(objType, docId, item.reference, \"artefacts_links\"))})\n        }\n        if(doc.people_links){\n            doc.people_links.forEach((item) => {dispatch(deleteRelation(objType, docId, item.reference, \"people_links\"))})\n        }\n        if(doc.events_links){\n            doc.events_links.forEach(item => {dispatch(deleteRelation(objType, docId, item.reference, \"events_links\"))})\n        }\n        ref.delete()\n        .then(() => {\n            dispatch({ type: 'DELETE_SUCCESS' });\n        }).catch(err => {\n            console.log(err);\n            dispatch({ type: 'DELETE_ERROR'}, err);\n        })\n    }\n}\n\nexport const uploadFile = (path, file) => {\n    return (dispatch, getState, { storageRef }) => {\n        storageRef.child(path).put(file)\n        .then((snapshot) => {\n            snapshot.ref.getDownloadURL().then((downloadURL) => {\n                dispatch({ type: 'UPLOAD_SUCCESS', downloadURL: downloadURL});\n              }).catch(err => {\n                  console.log(err);\n                  dispatch({ type: 'UPLOAD_ERROR' })\n              })\n        })\n    }\n}\n\nexport const fieldAppend = (objType, docId, fieldName, fieldValue) => {\n    return ( dispatch, getState, { firestore }) => {\n        var ref = firestore.collection(objType).doc(docId)\n        ref.update({\n            [fieldName]:  firebase.firestore.FieldValue.arrayUnion(fieldValue)\n        })\n        .then(() => {\n            dispatch({ type: 'APPEND_SUCCESS' });\n        }).catch(err => {\n            console.log(err);\n            dispatch({ type: 'APPEND_ERROR'}, err);\n        })\n    }\n}\n\n/* \ndeleteRelation: set up a relation for an object (which launches a set up relation request)\n     and target object. It works for both sides.\n\ntargetRef: the referece pointing to the target object\nfieldName: a particular field that target object holds the relations of this object type.\n*/\n\nexport const deleteRelation = (objType, docId, targetRef, fieldName) => {\n    return async (dispatch, getState, { firestore }) => {        \n        try{\n            const objRef = await firestore.doc(objType+'/'+docId)\n            const snapshot_1 = await objRef.get();\n            if(snapshot_1.data()){\n                const obj = DeleteRelationField(snapshot_1.data(), fieldName, targetRef);\n                await objRef.update({\n                    ...obj,\n                    last_modified: new Date()\n                })\n            }\n            \n            const snapshot_2 = await targetRef.get();\n            if(snapshot_2.data()){\n                const targetObj = DeleteRelationField(snapshot_2.data(), `${objType.toLowerCase()}_links`, objRef);\n                await targetRef.update({\n                    ...targetObj,\n                    last_modified: new Date()\n                })\n            }\n        } catch(err){\n            console.log(err);\n        }\n    }\n}\n\n//remove selected relation from an object\nfunction DeleteRelationField(obj, field, reference){\n    if((obj[field]||[]).length > 0){\n        var new_field = obj[field].filter((link) => {\n            return link.reference.id !== reference.id\n        })\n        obj[field] = new_field\n    }\n    return obj;\n}\n","import React, { Fragment} from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\n\nconst UserProfile = (props) => {\n    const { auth, profile } = props;\n    if (!auth.uid) { return <Redirect to='/signin' /> }\n    \n    return (\n        <Fragment>\n            <img src= {profile.photoURL ? profile.photoURL : \"https://firebasestorage.googleapis.com/v0/b/testing-e1ec1.appspot.com/o/No%20profile%20photo.png?alt=media&token=23fa70a3-c8a7-409d-bd73-0d38ed8772d6\"}\n                alt=\"\" \n                style={{width: 200,\n                    height: 200,\n                    objectFit: 'cover',\n                    maxWidth: '100%',\n                    borderRadius: '50%',\n                    verticalAlign: 'middle'}}/>\n            <p> {auth.email}</p>\n            <p>{profile.name}  {profile.lastName} </p>\n            <p>{profile.email}</p>\n            <p>{profile.location? profile.location : '(Please add your location)'}</p>\n            <p>{profile.bio? profile.bio : '(Please edit your bio)'}</p>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {  \n    return{\n      auth: state.firebase.auth,\n      profile: state.firebase.profile\n    }\n  }\n\nexport default connect(mapStateToProps)(UserProfile)","import React from \"react\";\nimport { Upload, Icon, Modal, message } from 'antd';\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\n// file restriction.\nfunction beforeUpload(file) {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJpgOrPng) {\n       message.error(\"You can only upload JPG/PNG file!\");\n       return;\n    }\n    const isLt5M = file.size / 1024 / 1024 < 5;\n    if (!isLt5M) {\n       message.error(\"Image must smaller than 5MB!\");\n       return;\n    }\n    return isJpgOrPng && isLt5M;\n }\n\nclass ImageUpload extends React.Component {\n  state = {\n    previewVisible: false,\n    previewImage: '',\n    fileList: []\n  };\n\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  handlePreview = async file => {\n    if (!file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    this.setState({\n      previewImage: file.preview,\n      previewVisible: true,\n    });\n  };\n\n  handleChange = ({ fileList }) => {\n      this.setState({ fileList })\n    };\n\n    handleUpload = (file) => {\n        this.props.handleFile(file);\n     };\n  \n  \n\n  render() {\n    const { previewVisible, previewImage, fileList } = this.state;\n    const uploadButton = (\n      <div>\n        <Icon type=\"plus\" />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    return (\n      <div className=\"clearfix\">\n        <Upload\n        action={this.handleUpload}\n          listType=\"picture-card\"\n          fileList={fileList}\n          onPreview={this.handlePreview}\n          onChange={this.handleChange}\n          beforeUpload={beforeUpload}\n        >\n          {fileList.length >= 1 ? null : uploadButton}\n        </Upload>\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ImageUpload;","import React, { Fragment} from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Input } from 'antd';\n\nimport ImageUpload from \"../util/imageUpload\";\n\nconst EditProfile = ({handleChange, handleFile}) => {\n    return (\n      <Fragment>\n        <ImageUpload handleFile={handleFile}/>\n        <Form >\n        <Form.Item >\n            <Input id=\"name\" placeholder=\"first name\" onChange={handleChange}/>\n          </Form.Item>\n          <Form.Item >\n            <Input id=\"lastName\" placeholder=\"last name\" onChange={handleChange}/>\n          </Form.Item>\n          <Form.Item >\n            <Input id=\"location\" placeholder=\"where you are?\" onChange={handleChange}/>\n          </Form.Item>\n          <Form.Item  >\n            <Input id=\"bio\" placeholder=\"tell them about yourself\" onChange={handleChange}/>\n          </Form.Item>\n        </Form>\n      </Fragment>\n    );\n}\n\n\nconst mapStateToProps = (state) => {  \n    return{\n      auth: state.firebase.auth,\n      profile: state.firebase.profile\n    }\n  }\n\nexport default connect(mapStateToProps)(EditProfile)","/**\n * UserModal :: ReactJS Component\n * Button and modal to access user-related features.\n */\n\nimport React from \"react\";\nimport {Modal, Button} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {updateUserProfile} from \"../../store/Actions/authActions\";\nimport {uploadFile} from \"../../store/Actions/userActions\";\nimport UserProfile from \"../profile/userProfile\";\nimport EditProfile from \"../profile/editProfile\";\n\nimport {storageRef} from \"../../firebase/config\";\n\nclass UserModal extends React.Component {\n   state = {\n      //ModalText: 'Content of the modal',\n      editMode: false,\n      visible: false,\n      confirmLoading: false,\n      name: \"\",\n      lastName: \"\",\n      location: \"\",\n      bio: \"\",\n      photoURL: null,\n      file: null,\n   };\n\n   showModal = () => {\n      this.setState({\n         visible: true\n      });\n   };\n\n   handleEditMode = () => {\n      this.setState({\n         editMode: true\n      });\n   };\n\n\n   handleSubmit = async (e) => {\n        if(this.state.file){\n            //await this.props.uploadFile(\"image/\" + this.props.auth.uid + \"/\" + this.state.file.name, this.state.file);\n            let snapshot = await storageRef.child(\"image/\" + this.props.auth.uid + \"/\" + this.state.file.name).put(this.state.file);\n            this.setState({\n                photoURL: await snapshot.ref.getDownloadURL(),\n            })\n\n        }\n        this.props.updateUserProfile(this.state);\n        this.setState({loading: false, visible: false, editMode: false});\n   };\n\n   handleBack = () => {\n      this.setState({\n         visible: false,\n         editMode: false\n      });\n   };\n\n   handleCancel = () => {\n      this.setState({\n         editMode: false\n      });\n   };\n\n   handleChange = e => {\n      this.setState({\n         [e.target.id]: e.target.value\n      });\n   };\n\n   handleFile = file => {\n       this.setState({\n           file: file\n       })\n   }\n\n   render() {\n      const {visible, confirmLoading} = this.state;\n      const {profile, auth} = this.props;\n\n      return (\n         <div>\n            <Button type='primary' onClick={this.showModal} icon=\"user\">\n                {!auth.displayName ? profile.name : auth.displayName}\n            </Button>\n            <Modal\n               title='Profile'\n               visible={visible}\n               onOk={this.handleSubmit}\n               confirmLoading={confirmLoading}\n               onCancel={this.handleBack}\n               footer={\n                  !this.state.editMode\n                     ? [\n                          <Button key='close' onClick={this.handleBack}>\n                             Back\n                          </Button>,\n                          <Button\n                             key='edit'\n                             type='primary'\n                             onClick={this.handleEditMode}\n                          >\n                             Edit Profile\n                          </Button>\n                       ]\n                     : [\n                          <Button key='cancle' onClick={this.handleCancel}>\n                             Return\n                          </Button>,\n                          <Button\n                             key='submit'\n                             type='primary'\n                             onClick={this.handleSubmit}\n                          >\n                             Submit\n                          </Button>\n                       ]\n               }\n            >\n               {!this.state.editMode ? (\n                  <UserProfile />\n               ) : (\n                  <EditProfile handleChange={this.handleChange} handleFile={this.handleFile}/>\n               )}\n            </Modal>\n         </div>\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n   return {\n      auth: state.firebase.auth,\n      profile: state.firebase.profile,\n      url: state.objects.downloadURL\n   };\n};\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      updateUserProfile: info => dispatch(updateUserProfile(info)),\n      uploadFile: (path, file) => dispatch(uploadFile(path, file))\n   };\n};\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(UserModal);\n","/**\n * Navigation :: ReactJS Component\n * Renders the navigation bar for the site.\n * Provides sitewide navigation, and access to account features.\n */\n\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {NavLink} from \"react-router-dom\";\nimport {Menu, Button, Icon} from \"antd\";\nimport {signOut} from \"../../store/Actions/authActions\";\nimport logo from \"../../heirloom22_logo.svg\";\nimport UserModal from \"../profile/UserModal.js\";\nimport \"./Navigation.css\";\n\nclass Navigation extends React.Component {\n   render() {\n      return (\n         <nav className='nav-bar'>\n            <this.MainMenu />\n            <this.UserMenu />\n         </nav>\n      );\n   }\n\n   // menu for site navigation\n   MainMenu = () => {\n      const {auth} = this.props;\n\n      // use auth.uid to check if we can show the signup page\n      if (auth.uid) {\n         return (\n            <Menu className='menu-main' mode='horizontal'>\n               <Menu.Item key='logo'>\n                  <NavLink to='/'>\n                     <img className='nav-logo' src={logo} alt='logo' />\n                  </NavLink>\n               </Menu.Item>\n               <Menu.Item key='home'>\n                  <NavLink to='/'>Home</NavLink>\n               </Menu.Item>\n               <Menu.Item key='list'>\n                  <NavLink to='/feed'>List View</NavLink>\n               </Menu.Item>\n               <Menu.Item key='artefact'>\n                  <NavLink to='/view/artefacts/family_crest_monument_id'>\n                     Sample Artefact View\n                  </NavLink>\n               </Menu.Item>\n               <Menu.Item key='event'>\n                  <NavLink to='/view/events/making_crest_id'>\n                     Sample Event View\n                  </NavLink>\n               </Menu.Item>\n               <Menu.Item key='person'>\n                  <NavLink to='/view/people/john_gilbert_id'>\n                     Sample Person View\n                  </NavLink>\n               </Menu.Item>\n            </Menu>\n         );\n      } else {\n         return (\n            <Menu className='menu-main' mode='horizontal'>\n               <Menu.Item key='logo'>\n                  <NavLink to='/'>\n                     <img className='nav-logo' src={logo} alt='logo' />\n                  </NavLink>\n               </Menu.Item>\n               <Menu.Item key='home'>\n                  <NavLink to='/'>Home</NavLink>\n               </Menu.Item>\n            </Menu>\n         );\n      }\n   };\n\n   // menu for account-related functions\n   UserMenu = () => {\n      const {auth, signOut} = this.props;\n\n      if (auth.uid) {\n         return (\n            <Menu className='menu-user' mode='horizontal'>\n               <Menu.Item key='profile'>\n                  <UserModal />\n               </Menu.Item>\n               <Menu.Item key='signup'>\n                  <NavLink to='/signup'>Sign up</NavLink>\n               </Menu.Item>\n               <Menu.Item key='logout'>\n                  <Button type='link' onClick={signOut}>\n                     <Icon type='logout' style={{color: \"red\"}} />\n                  </Button>\n               </Menu.Item>\n            </Menu>\n         );\n      } else {\n         return (\n            <Menu className='menu-user' mode='horizontal'>\n               <Menu.Item key='login'>\n                  <NavLink to='/signin'>Log in</NavLink>\n               </Menu.Item>\n            </Menu>\n         );\n      }\n   };\n}\n\nconst mapStateToProps = state => {\n   return {\n      auth: state.firebase.auth\n   };\n};\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      signOut: () => dispatch(signOut())\n   };\n};\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(Navigation);\n","/* * *\n * ArtefactListElement :: ReactJS Component\n * A simple representation of an artefact for ArtefactList.\n * The artefact should be passed to this component.\n */\n\nimport React from 'react';\nimport { Card } from 'antd';\nimport { Link } from 'react-router-dom';\n\nconst { Meta } = Card;\n/**\n * Function element.\n * Props:\n *   - artefact : artefact json object to be represented\n */\nfunction ArtefactListElement(props) {\n    const { artefact, reference } = props;\n    const TITLE_LENGTH = 50;       // maximum length of title in chars\n    const DESC_LENGTH = 100;       // maximum length of description in chars\n    \n\n    /**\n     * Simple function that shortens a string if it's longer than given length\n     * and adds \"...\".\n     * @param {String} str \n     * @param {Int} n \n     */\n    function excerpt(str, n) {\n        if (str.length > n) {\n            // want length to be exactly n\n            return str.substring(0, n-2) + \"...\";\n        } else {\n            return str;\n        }\n    }\n\n    /**\n     * For the list, we intend to show:\n     *   - name\n     *   - excerpt of description\n     */\n    return(\n        artefact\n        ? \n            <div>\n                <Link to={\"/view/artefacts/\" + reference}>\n                    <Card\n                        hoverable\n                        className=\"artefact-list-element\"\n                        cover={(artefact.media_links||[]).length > 0\n                            ? <img alt=\"cover\" src={artefact.media_links[0].url} />\n                            : null\n                        }\n                    >\n                        <Meta\n                            title={excerpt(artefact.name, TITLE_LENGTH)}\n                            description={artefact.description && excerpt(artefact.description, DESC_LENGTH)}\n                        />\n                    </Card>\n                </Link>             \n            </div>\n        : <p>Nothing to show</p>\n    );\n}\n\nexport default ArtefactListElement;","export const ARTEFACTS = 'Artefacts';\nexport const EVENTS = 'Events';\nexport const PEOPLE = 'People';\nexport const USERS = 'users'; //tmp test collections\nexport const ADDENDUMS = 'Addendums';\n\n","// from https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\nexport const makeID = (length) => {\n    var result = \"\";\n    var characters =\n       \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n }","/* * *\n * CreateArtefactForm :: ReactJS Component\n * Form allowing user to input relevant information to create an artefact.\n */\nimport React from \"react\";\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { EVENTS, PEOPLE } from \"../../store/objectTypes\"\nimport { Form, Input, Select, Button, Icon, Spin, Divider } from \"antd\";\nimport ImageUpload from \"../util/imageUpload\";\nimport { makeID } from \"../util/Makeid\";\nimport {storageRef} from \"../../firebase/config\";\n\nconst { TextArea } = Input;\n\nclass ArtefactForm extends React.Component {\n    state = {\n        loading: false,\n        events_selected: [],\n        people_selected: [],\n        people_links: {},\n        events_links: {},\n        \n        file: null,\n        photoURL: null,\n    }\n\n    toggle = () => {\n        this.setState({ loading: true });\n      };\n\n    resetState = () => {\n        this.setState({\n            loading: false,\n            events_selected: [],\n            people_selected: [],\n            people_links: {},\n            events_links: {},\n            \n            file: null,\n            photoURL: null,\n        })\n    }\n\n    //get file from file uploader\n    handleFile = file => {\n        this.setState({\n            file: file\n        })\n    }\n\n    /* When submit clicked, upload image (if any) => fetch download URL \n        => construct artefact object => pass object to ArtefactHandler */\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // fields must pass validation before submission\n        // For update relation for both objects, create artefact first => update relation info\n        this.props.form.validateFields(async (err, values) => {\n            if (!err) {\n                this.toggle();\n                //upload file first\n                if(this.state.file){\n                    //await this.props.uploadFile(\"image/\" + this.props.auth.uid + \"/\" + this.state.file.name, this.state.file);\n                    let snapshot = await storageRef.child(\"image/\" + this.props.auth.uid + \"/\" + makeID(10) + this.state.file.name)\n                    .put(this.state.file);\n                    this.setState({\n                        photoURL: await snapshot.ref.getDownloadURL(),\n                    })\n                }\n                // build artefact from form\n                const artefact = {\n                    name: values.name,\n                    description: values.description || \"\",\n                    media_links: this.state.photoURL ? [{\n                        date_created: new Date(),\n                        url: this.state.photoURL\n                    }]\n                    : [],\n                }\n                \n                // pass form data to parent\n                this.props.handleSubmit(artefact);\n\n                this.resetState();\n                this.props.form.resetFields();\n            }\n        });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const { type, handleCancel } = this.props;\n        const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n        return(\n            <Spin spinning={this.state.loading} indicator={antIcon} tip=\"uploading\" size=\"large\">\n            <Form onSubmit={ this.handleSubmit } className=\"CreateArtefactForm\">\n                <Form.Item label=\"Name\">{getFieldDecorator('name',\n                    { rules : [\n                        { required: true,\n                          message: \"Please give your Artefact a name!\"\n                        }\n                    ]})(\n                    <Input placeholder=\"Give your Artefact a name.\"/>\n                )}</Form.Item>\n\n                <Form.Item label=\"Description\">{getFieldDecorator('description')(\n                    <TextArea\n                        placeholder={\"Tell us about your artefact.\\ne.g., why it is important, or about its history\"}\n                        autosize={{minRows: 3}}\n                    />\n                )}</Form.Item>\n                \n                { type === \"create\" && <this.RelationFormItems form={getFieldDecorator}/>}\n                <Form.Item label=\"Photo (JPG or PNG format only, file size must be less than 5M)\">\n                    <ImageUpload handleFile={this.handleFile}/>\n                </Form.Item>\n            </Form>\n            <Divider type='horizontal' />\n            <div type=\"flex\" align=\"right\">\n                    <Button type=\"default\" onClick={handleCancel}>Cancel</Button>\n                    <Divider type='vertical' />\n                    <Button type=\"primary\" ghost onClick={this.handleSubmit}>Submit</Button>\n            </div>\n            </Spin>\n        );\n    }\n\n    RelationFormItems = () => {\n        const { getFieldDecorator } = this.props.form;\n        const { events, people, handleFieldChange } = this.props;\n        const {\n            events_selected, people_selected, people_links,events_links,\n        } = this.state;\n\n        return (\n            <React.Fragment>\n                <Form.Item label=\"Related People\">\n                    {getFieldDecorator('people', {})(\n                        <Select\n                            mode=\"multiple\"\n                            placeholder=\"Select the People related to this Artefact.\"\n                            optionFilterProp={\"children\"}\n                            filterOption={true}\n                            // updates list of selected people in state to show text boxes\n                            onChange={(value) => {\n                                this.setState({people_selected: value});\n                                handleFieldChange({people_selected: value});\n\n                                //update list of selected people's name\n                                const people_names = {}\n                                value.map(person => people_names[person] = people[person].name)\n                                handleFieldChange({people_names: people_names});\n                                \n                        }}\n                        >\n                            { people ?\n                                Object.keys(people).map( (id) =>\n                                    <Select.Option key={id}>{people[id].name + \" \" + people[id].lastname}</Select.Option>\n                                )\n                            : null }\n                        </Select>\n                    )}\n                </Form.Item>\n                \n                <div>\n                    {people_selected.map((person_id) =>\n                        <Form.Item\n                            key={person_id}\n                            label={\"Relation with \" + people[person_id].name + \" \" + people[person_id].lastname}\n                        >\n                            {getFieldDecorator(person_id,\n                                { initialValue: people_links[person_id] || \"\",\n                                  setFieldsValue : people_links[person_id] || \"\",\n                                  rules : [\n                                    { required: true,\n                                    message: \"Please describe how this person is related to your Artefact!\"\n                                    }\n                            ]})(\n                            <TextArea\n                                placeholder={\"Tell us how this person is related to your Artefact\"}\n                                autosize={{minRows: 1}}\n                                onChange={(e) => {\n                                    const new_people_links = people_links;\n                                    new_people_links[person_id] = e.target.value;\n                                    //this.setState({people_links: new_people_links});\n                                    handleFieldChange({people_links: new_people_links})\n                                }}\n                            />\n                        )}</Form.Item>\n                    )}\n                </div>\n                \n                <Form.Item label=\"Related Events\">\n                    {getFieldDecorator('events', {})(\n                        <Select\n                        mode=\"multiple\"\n                        placeholder=\"Select the Events related to this Artefact!\"\n                        optionFilterProp={\"children\"}\n                        filterOption={true}\n                        // updates list of selected events in state to show text boxes\n                        onChange={(value) => {\n                            this.setState({events_selected: value});\n                            handleFieldChange({events_selected: value});\n\n                            //update list of selected people's name\n                            const events_names = {}\n                            value.map(event => events_names[event] = events[event].name)\n                            handleFieldChange({events_names: events_names});\n                        }}\n                        >\n                            { events ?\n                                Object.keys(events).map( (id) =>\n                                    <Select.Option key={id}>{events[id].name}</Select.Option>\n                                )\n                            : null }\n                        </Select>\n                    )}\n                </Form.Item>\n\n                <div>\n                    {events_selected.map((event_id) =>\n                        <Form.Item\n                            key={event_id}\n                            label={\"Relation with \" + events[event_id].name}\n                        >\n                            {getFieldDecorator(event_id,\n                                { initialValue: events_links[event_id] || \"\",\n                                  setFieldsValue : events_links[event_id] || \"\",\n                                  rules : [\n                                    { required: true,\n                                    message: \"Please describe how this event is related to your Artefact!\"\n                                    }\n                            ]})(\n                            <TextArea\n                                placeholder={\"Tell us how this event is related to your Artefact\"}\n                                autosize={{minRows: 1}}\n                                onChange={(e) => {\n                                    const new_events_links = events_links;\n                                    new_events_links[event_id] = e.target.value;\n                                    handleFieldChange({events_links: new_events_links})\n\n                                    var new_events_name = JSON.parse(JSON.stringify(events_links));\n                                    new_events_name[event_id] = events[event_id].name;\n                                    handleFieldChange({events_name: new_events_name});\n                                }}\n                            />\n                        )}</Form.Item>\n                    )}\n                </div>\n            </React.Fragment>\n        );\n    }\n};\n\n// use wrapper\nArtefactForm = Form.create({name: \"createArtefactForm\"})(ArtefactForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        events: state.firestore.data.Events,\n        people: state.firestore.data.People,\n    }\n}\n  \nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect(() => [\n        {collection: PEOPLE},\n        {collection: EVENTS},\n    ])\n)(ArtefactForm);","/* * *\n * CreateEventForm :: ReactJS Component\n * Form allowing user to input relevant information to create an event.\n */\n\nimport React from \"react\";\nimport { Form, Input, Button, DatePicker } from \"antd\";\nconst { TextArea } = Input;\n\nclass EventForm extends React.Component {\n    handleSubmit = e => {\n        // stops the page from refreshing\n        e.preventDefault();\n\n        // fields must pass validation before submission\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const event = {\n                    name: values.name,\n                    details: values.description || \"\",\n                    date: new Date(values.date)\n                }\n                \n                // pass form data to parent\n                this.props.handleSubmit(event);\n                this.props.form.resetFields();\n            }\n        });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const dateFormat = \"DD/MM/YYYY\";\n\n        return(\n            <Form onSubmit={ this.handleSubmit }>\n                <Form.Item label=\"Name\">{getFieldDecorator('name',\n                    { rules : [\n                        { required: true,\n                          message: \"Please give your event a name!\"\n                        }\n                    ]})(\n                    <Input placeholder=\"Give your event a name.\"/>\n                )}</Form.Item>\n\n                <Form.Item label=\"Date\">{getFieldDecorator('date',\n                    { rules : [\n                        { required: true,\n                          message: \"Please give your event a date!\"\n                        }\n                    ]})(\n                    <DatePicker placeholder=\"dd/mm/yyyy\" format={dateFormat}/>\n                )}\n                </Form.Item>\n\n                <Form.Item label=\"Description\">{getFieldDecorator('description')(\n                    <TextArea\n                        placeholder={\"Tell us about this event.\\ne.g., why it is important, or what happened at it.\"}\n                        autosize={{minRows: 3}}\n                    />\n                )}</Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" ghost htmlType=\"submit\">Submit</Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n};\n\n// use wrapper\nEventForm = Form.create({name: \"eventForm\"})(EventForm);\n\nexport default EventForm \n","/* * *\n * CreateEvent :: ReactJS Component\n * Button and Modal with Form to facilitate creation of an Event.\n */\n \nimport React from \"react\";\nimport { Modal, Button, Icon } from \"antd\";\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\n\nimport EventForm from \"./EventForm.js\";\nimport { createObj, editObj} from \"../../store/Actions/userActions\"\nimport { EVENTS } from \"../../store/objectTypes.js\";\n\nclass EventHandler extends React.Component {\n    constructor(props){\n    super(props);\n    this.state = {\n        visible: false,\n        type: this.props.type,\n        title: this.props.type === \"create\" ? \"Create an Event\" : \"Edit Event\",\n        docId: this.props.docId ? this.props.docId : null\n    }\n}\n\n    showModal = () => {\n        this.setState({\n            visible: true\n        })\n    }\n\n    handleCancel = () => {\n        this.setState({\n            visible: false\n        });\n    }\n\n    handleSubmit = (event) => {\n        if (this.state.type === \"create\") {\n            this.props.createObj(EVENTS, event);\n        } else {\n            this.props.editObj(EVENTS, this.props.docId, event)\n        }\n        this.setState({ visible: false });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Button type=\"primary\" ghost onClick={this.showModal} style={{margin: \"0 1rem\"}}><Icon type=\"plus-square\"/>{this.state.title}</Button>\n                <Modal\n                    visible={this.state.visible}\n                    title={this.state.title}\n                    onOk={this.handleSubmit}\n                    onCancel={this.handleCancel}\n                    footer={[\n                        <Button key=\"cancel\" type=\"default\" onClick={this.handleCancel}>Cancel</Button>,\n                    ]}\n                >\n                    <EventForm handleSubmit={this.handleSubmit}/>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createObj: (objType, event) => dispatch(createObj(objType, event)),\n        editObj: (objType, id, event) => dispatch(editObj(objType, id, event))\n    }\n}\n\nexport default compose(\n    connect(null, mapDispatchToProps),\n)(EventHandler)\n","/* * *\n * CreatePersonForm :: ReactJS Component\n * Form allowing user to input relevant information to create a Person.\n */\n\nimport React from \"react\";\nimport { Form, Input, Button, DatePicker } from \"antd\";\nconst { TextArea } = Input;\n\nclass PersonForm extends React.Component {\n    handleSubmit = e => {\n        // stops the page from refreshing\n        e.preventDefault();\n\n        // fields must pass validation before submission\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const person = {\n                    name: values.name,\n                    lastname: values.lastname,\n                    details: values.description || \"\",\n                    dob: new Date(values.date),\n                }\n                // pass form data to parent\n                \n                this.props.handleSubmit(person);\n                this.props.form.resetFields();\n            }\n        });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const dateFormat = \"DD/MM/YYYY\";\n\n        return(\n            <Form onSubmit={ this.handleSubmit }>\n                <Form.Item label=\"First Name\">{getFieldDecorator('name',\n                    { rules : [\n                        { required: true,\n                          message: \"Please input this person's first name.\"\n                        }\n                    ]})(\n                    <Input placeholder=\"What is this person's first name?\"/>\n                )}</Form.Item>\n\n                <Form.Item label=\"Last Name\">{getFieldDecorator('lastname',\n                    { rules : [\n                        { required: true,\n                          message: \"Please input this person's last name.\"\n                        }\n                    ]})(\n                    <Input placeholder=\"What is this person's last name?\"/>\n                )}</Form.Item>\n\n                <Form.Item label=\"Date of Birth\">{getFieldDecorator('date',\n                    { rules : [\n                        { required: true,\n                          message: \"Please input this\"\n                        }\n                    ]})(\n                    <DatePicker placeholder=\"dd/mm/yyyy\" format={dateFormat}/>\n                )}\n                </Form.Item>\n\n                <Form.Item label=\"Description\">{getFieldDecorator('description')(\n                    <TextArea\n                        placeholder={\"Tell us about this person.\\ne.g. what did they do, or how they are a part of the family.\"}\n                        autosize={{minRows: 3}}\n                    />\n                )}</Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" ghost htmlType=\"submit\">Submit</Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n};\n\n// use wrapper\nPersonForm = Form.create({name: \"personForm\"})(PersonForm);\nexport default PersonForm \n","/* * *\n * CreatePerson :: ReactJS Component\n * Button and Modal with Form to facilitate creation of a Person.\n */\n \nimport React from \"react\";\nimport { Modal, Button, Icon } from \"antd\";\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\n\nimport PersonForm from \"./PersonForm.js\";\nimport { createObj, editObj} from \"../../store/Actions/userActions\"\nimport { PEOPLE } from \"../../store/objectTypes.js\";\n\nclass PersonHandler extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            visible: false,\n            type: this.props.type,\n            title: this.props.type === \"create\" ? \"Create a Person\" : \"Edit Person\",\n            docId: this.props.docId ? this.props.docId : null\n        }\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true\n        })\n    }\n\n    handleCancel = () => {\n        this.setState({\n            visible: false\n        });\n    }\n\n    handleSubmit = (person) => {\n        if (this.state.type === \"create\") {\n            this.props.createObj(PEOPLE, person);\n        } else {\n            this.props.editObj(PEOPLE, this.props.docId, person)\n        }\n        this.setState({ visible: false });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Button type=\"primary\" ghost onClick={this.showModal} style={{margin: \"0 1rem\"}}><Icon type=\"plus-square\"/>{this.state.title}</Button>\n                <Modal\n                    visible={this.state.visible}\n                    title=\"Create a new Person\"\n                    onOk={this.handleSubmit}\n                    onCancel={this.handleCancel}\n                    footer={[\n                        <Button key=\"cancel\" type=\"default\" onClick={this.handleCancel}>Cancel</Button>,\n                    ]}\n                >\n                    <PersonForm handleSubmit={this.handleSubmit}/>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createObj: (objType, event) => dispatch(createObj(objType, event)),\n        editObj: (objType, id, event) => dispatch(editObj(objType, id, event))\n    }\n}\n\nexport default compose(\n    connect(null, mapDispatchToProps),\n)(PersonHandler)\n","/* * *\n * ArtefactHandler :: ReactJS Component\n * Button and Modal with Form to facilitate creation of an Artefact.\n */\n\nimport React from \"react\";\nimport {Modal, Button, Icon} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\n\nimport { firestore } from \"../../firebase/config\"\nimport {createObj, editObj, fieldAppend} from \"../../store/Actions/userActions\";\nimport {ARTEFACTS, EVENTS, PEOPLE} from \"../../store/objectTypes\";\nimport ArtefactForm from \"./ArtefactForm.js\";\nimport EventHandler from \"./EventHandler.js\";\nimport PersonHandler from \"./PersonHandler.js\";\n\nclass ArtefactHandler extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         visible: false,\n         type: this.props.type,\n         title:\n            this.props.type === \"create\"\n               ? \"Create an Artefact\"\n               : \"Edit Artefact\",\n         buttonText:\n            this.props.type === \"create\"\n               ? \"Create an Artefact\"\n               : \"Edit\",\n         docId:\n            this.props.docId\n               ? this.props.docId\n               : null,\n         icon:\n            this.props.type === \"create\"\n               ? \"plus-square\"\n               : \"form\",\n         \n         events_selected: [],\n         people_selected: [],\n         events_links: {},\n         people_links: {},\n         events_names:{},\n         people_names:{},\n      };\n   }\n\n   handleFieldChange = (field) =>{\n      this.setState(field);\n   }\n\n   showModal = () => {\n      this.setState({\n         visible: true\n      });\n   };\n\n   handleCancel = () => {\n      this.setState({\n         visible: false\n      });\n   };\n\n   handleSubmit = async (artefact) => {\n      const { type, \n         events_selected, people_selected,\n         events_links, people_links, \n         events_names, people_names }  = this.state;\n      const { auth } = this.props;\n\n      //decide action.\n      if (type === \"create\") {\n         const newArtefact = await firestore.collection(ARTEFACTS).add({\n            ...artefact,\n            authorId: auth.uid,\n            created_by: auth.displayName,\n            date_created: new Date(),\n            last_modified: new Date(),\n         })\n         \n         //construct and update links\n         if(events_selected.length > 0){\n            events_selected.forEach(event => {\n               const artefact_link = {\n                  name: artefact.name,\n                  reference: firestore.doc(\"/Artefacts/\" + newArtefact.id),\n                  relation: events_links[event]\n               }\n               const event_link = {\n                  name: events_names[event],\n                  reference: firestore.doc(\"/Events/\" + event),\n                  relation: events_links[event]\n               }\n               this.props.fieldAppend(EVENTS, event, 'artefacts_links', artefact_link)\n               this.props.fieldAppend(ARTEFACTS, newArtefact.id, 'events_links', event_link)\n            })\n         }\n\n         if(people_selected.length > 0){\n               people_selected.forEach(person => {\n                  const artefact_link = {\n                     name: artefact.name,\n                     reference: firestore.doc(\"/Artefacts/\" + newArtefact.id),\n                     relation: people_links[person]\n                  }\n                  const person_link = {\n                     name: people_names[person],\n                     reference: firestore.doc(\"/People/\" + person),\n                     relation: people_links[person]\n                  }\n                  this.props.fieldAppend(PEOPLE, person, 'artefacts_links', artefact_link)\n                  this.props.fieldAppend(ARTEFACTS, newArtefact.id, 'people_links', person_link)\n               })\n         }\n\n      } else {\n         this.props.editObj(ARTEFACTS, this.props.docId, artefact);\n      }\n\n      this.setState({visible: false});\n   };\n\n   render() {\n      return (\n         <React.Fragment>\n            <Button type='primary' onClick={this.showModal} ghost size=\"small\">\n               <Icon type={this.state.icon} />{this.state.buttonText}\n            </Button>\n\n            <Modal\n               style={{ top: 20 }}\n               visible={this.state.visible}\n               title={this.state.title}\n               onCancel={this.handleCancel}\n               footer={null}\n            >\n               {this.state.type === \"create\" ? (\n                  <React.Fragment>\n                     <PersonHandler type={\"create\"} />\n                     <EventHandler type={\"create\"} />\n                  </React.Fragment>\n               ) : null}\n\n               <ArtefactForm\n                  handleSubmit={this.handleSubmit}\n                  handleFieldChange={this.handleFieldChange}\n                  type={this.state.type}\n                  docId={this.state.docId}\n                  handleCancel={this.handleCancel}\n               />\n            </Modal>\n         </React.Fragment>\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n   return {\n      auth: state.firebase.auth\n   };\n};\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      createObj: (objType, artefact) => dispatch(createObj(objType, artefact)),\n      editObj: (objType, id, artefact) =>\n      dispatch(editObj(objType, id, artefact)),\n      fieldAppend: (objType, docId,fieldName, fieldValue) => dispatch(fieldAppend(objType, docId, fieldName ,fieldValue)),\n   };\n};\n\nexport default compose(\n   connect(\n      mapStateToProps,\n      mapDispatchToProps\n   )\n)(ArtefactHandler);\n","/* * *\n * ArtefactList :: ReactJS Component\n * A simple list view for browsing artefacts.\n * Requests for relevant content will be made from this component.\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { PageHeader, Tag, Spin } from 'antd';\n\n// components\nimport ArtefactListElement from \"./ArtefactListElement.js\";\nimport './ArtefactList.css';\nimport ArtefactHandler from \"../forms/ArtefactHandler.js\";\nimport { ARTEFACTS } from \"../../store/objectTypes\";\n\nclass ArtefactList extends React.Component {\n    \n    render() {\n        const { artefacts, profile } = this.props;\n        if(!artefacts){\n            return (\n                <div className=\"container center\">\n                    <Spin tip=\"Loading artefacts...\" size=\"large\" />\n                </div>\n            )\n        }\n        if(artefacts && !Object.keys(artefacts)){\n            return (\n                <div className=\"container center\">\n                    <h2>No artefact found.</h2>\n                </div>\n            )\n        }\n        return(\n            <React.Fragment>\n                <PageHeader\n                    onBack={() => window.history.back()}\n                    title=\"Browsing your collection\"\n                    tags={<Tag color=\"blue\">{profile.name}</Tag>}\n                    extra={[\n                        <ArtefactHandler type={\"create\"} />\n                    ]}\n                    avatar={{ src: profile.photoURL }}\n                >\n                </PageHeader>\n                <div className=\"artefact-list-wrapper\">\n                    <div className=\"artefact-list\">\n                        { artefacts && Object.entries(artefacts).map(([id, artefact]) => <ArtefactListElement key={id} reference={id} artefact={artefact}/>)}  \n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      artefacts: state.firestore.data.Artefacts,\n      auth: state.firebase.auth,\n      profile: state.firebase.profile,\n    }\n}\n  \nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect(() => [{\n        collection: ARTEFACTS,\n    }])\n)(ArtefactList)","export function capitalize(string) {\n   // https://paulund.co.uk/index.php/how-to-capitalize-the-first-letter-of-a-string-in-javascript\n   return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","/* \nAlmost static welcome page that links to other components\n* Backend Dependency\n   1. auth \n      - uid checking for authentication\n      - name\n   2. profile\n      - name\n* Purpose\n   1. Welcomes page\n   2. Manual page\n */\n\n// react\nimport React, {Component} from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\n// redux\nimport {connect} from \"react-redux\";\nimport {signOut} from \"../../store/Actions/authActions\";\n// style\nimport {capitalize} from \"../util/Text\";\nimport {Button, Row, Col, Icon} from \"antd\";\nimport \"./Welcome.css\";\nimport logo from \"../../heirloom22_logo.svg\";\n\nclass Welcome extends Component {\n   style = {\n      textAlign: \"center\"\n   };\n\n   welcomeMessage = () => {\n      // the profile information\n      const {profile, auth} = this.props;\n      let name;\n      if (auth && auth.displayName) name = auth.displayName;\n      else if (profile && profile.name) name = profile.name;\n      else name = \"Visiter\";\n      name = capitalize(name);\n\n      // Welcome message\n      if (!auth.uid) {\n         return (\n            <h2 className='Title'>\n               Hi {name}. Please log in to start using this application.\n               <p className='Description'>\n                  If you don't can't login you can try (1) reset the password\n                  (2) ask a family member to create a new account for you\n               </p>\n            </h2>\n         );\n      }\n      return (\n         <h2>\n            Hi {name}. Here is an overview of how you can navigate through your\n            family artefacts and find out more about your family history\n         </h2>\n      );\n   };\n\n   // onMount and unMount are handlers passed from App.js\n   componentDidMount() {\n      this.props.onMount();\n   }\n   componentWillUnmount() {\n      this.props.unMount();\n   }\n\n   tutorial = () => {\n      const {auth} = this.props;\n\n      // user not logged in\n      if (!auth.uid) {\n         return (\n            <div className='Tutorial'>\n               {/* use ant-design grid layout */}\n               <Row type='flex'>\n                  <Col span={4}>\n                     <Icon type='login' />\n                  </Col>\n                  <Col span={20}>\n                     <Row className='title'>Log in</Row>\n                     <Row>\n                        Click on\n                        <Button className='LeftRightMargin'>\n                           <NavLink to='/signin'>Log in</NavLink>\n                        </Button>\n                        to start using this application.\n                     </Row>\n                  </Col>\n               </Row>\n            </div>\n         );\n      }\n      // user logged in\n\n      return (\n         <div className='Tutorial'>\n            {/* use ant-design grid layout */}\n            <Row type='flex'>\n               <Col span={4}>\n                  <Icon type='home' />\n               </Col>\n               <Col span={20}>\n                  <Row className='title'>Homepage</Row>\n                  <Row>\n                     Click on\n                     <Button className='LeftRightMargin'>\n                        <NavLink to='/'>Home</NavLink>\n                     </Button>\n                     to come back to this page.\n                  </Row>\n               </Col>\n            </Row>\n            <Row type='flex' justify='center'>\n               <Col span={4}>\n                  <Icon type='picture' />\n               </Col>\n               <Col span={20}>\n                  <Row className='title'>Gallery</Row>\n                  <Row>\n                     Click on\n                     <Button className='LeftRightMargin'>\n                        <NavLink to='/feed'>List View</NavLink>\n                     </Button>\n                     to go to the Gallery where you can view all the artefacts\n                     and its related people and events.\n                  </Row>\n               </Col>\n            </Row>\n            <Row type='flex' justify='center'>\n               <Col span={4}>\n                  <Icon type='logout' />\n               </Col>\n               <Col span={20}>\n                  <Row className='title'>Log out</Row>\n                  <Row>\n                     Click on\n                     <Button\n                        type='danger'\n                        onClick={this.props.signOut}\n                        className='LeftRightMargin'\n                     >\n                        Log out\n                     </Button>\n                     to exit this application correctly.\n                  </Row>\n               </Col>\n            </Row>\n            <Row type='flex' justify='center'>\n               <Col span={4}>\n                  <Icon type='user-add' />\n               </Col>\n               <Col span={20}>\n                  <Row className='title'>Create new accounts</Row>\n                  <Row>\n                     Click on\n                     <Button className='LeftRightMargin'>\n                        <NavLink to='/signup'>Sign up</NavLink>\n                     </Button>\n                     create new accounts for your family members.\n                  </Row>\n               </Col>\n            </Row>\n         </div>\n      );\n   };\n\n   // I am using a lot of div containers to achieve the desired UI\n   render() {\n      // return the webpage\n      return (\n         <div className='Welcome'>\n            <div className='Background'>\n               <div className='Intro'>\n                  <img className='logo' src={logo} alt='logo' />\n                  <h1 className='Center'>Welcome to Heirloom22!</h1>\n                  {this.welcomeMessage()}.\n                  <div className='Hidden'>\n                     .{/* A trick to draw an \"empty\" box */}\n                  </div>\n               </div>\n            </div>\n            <this.tutorial />\n         </div>\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n   return {\n      auth: state.firebase.auth,\n      profile: state.firebase.profile\n   };\n};\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      signOut: () => dispatch(signOut())\n   };\n};\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(Welcome);\n","import React from \"react\";\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { EVENTS, PEOPLE, ARTEFACTS} from \"../../store/objectTypes\"\nimport { Form, Input, Select, Modal, Button} from \"antd\";\nimport { fieldAppend } from \"../../store/Actions/userActions\";\n\nconst { TextArea } = Input;\n\nclass RelationForm extends React.Component {\n    state = {\n        visible: false,\n        title: this.props.type,\n        docId: this.props.docId ? this.props.docId : null,\n\n        events_selected: [],\n        people_selected: [],\n        events_links: {},\n        people_links: {},\n    }\n\n    showModal = () => {\n        this.setState({\n          visible: true,\n        });\n      };\n    \n      handleCancel = () => {\n        this.setState({ \n            visible: false,\n        })\n      };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        const { firestore, events, people, artefact_id, fieldAppend } = this.props;\n        const artefact = this.props.artefact[artefact_id]\n        const {\n            events_selected, people_selected,\n            events_links, people_links\n        } = this.state;\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                if(events_selected.length > 0){\n                    events_selected.forEach(event => {\n                        const artefact_link = {\n                            name: artefact.name,\n                            reference: firestore.doc(\"/Artefacts/\" + artefact_id),\n                            relation: events_links[event]\n                        }\n                        const event_link = {\n                            name: events[event].name,\n                            reference: firestore.doc(\"/Events/\" + event),\n                            relation: events_links[event]\n                        }\n                        fieldAppend(EVENTS, event, 'artefacts_links', artefact_link)\n                        fieldAppend(ARTEFACTS, artefact_id, 'events_links', event_link)\n                    })\n                }\n\n                if(people_selected.length > 0){\n                    people_selected.forEach(person => {\n                        const artefact_link = {\n                            name: artefact.name,\n                            reference: firestore.doc(\"/Artefacts/\" + artefact_id),\n                            relation: people_links[person]\n                        }\n                        const person_link = {\n                            name: people[person].name,\n                            reference: firestore.doc(\"/People/\" + person),\n                            relation: people_links[person]\n                        }\n                        fieldAppend(PEOPLE, person, 'artefacts_links', artefact_link)\n                        fieldAppend(ARTEFACTS, artefact_id, 'people_links', person_link)\n\n                    })\n\n                }\n                this.props.form.resetFields();\n                this.setState({\n                    visible: false\n                })\n            }\n        });\n    }\n\n    render(){\n        const { getFieldDecorator } = this.props.form;\n        const { events, people, title, iconType } = this.props;\n        const {\n            events_selected, people_selected,\n            events_links, people_links, visible,\n        } = this.state;\n        return(\n            <div>\n            <Button type=\"primary\" shape=\"circle\" icon={iconType} ghost onClick={this.showModal} size=\"small\"/>\n            <Modal\n                visible={visible}\n                title={title}\n                onCancel={this.handleCancel}\n                footer={[\n                    <Button key=\"back\" onClick={this.handleCancel}>\n                    Return\n                    </Button>,\n                    <Button key=\"submit\" type=\"primary\"  onClick={this.handleSubmit}>\n                    Submit\n                    </Button>,\n                ]}\n            >\n            \n            <Form layout=\"vertical\" hideRequiredMark>\n            \n            {title === \"Related People\" ?\n            <React.Fragment>\n                <Form.Item label=\"Related People\">\n                    {getFieldDecorator('people', {})(\n                        <Select\n                            mode=\"multiple\"\n                            placeholder=\"Select the People related to this Artefact.\"\n                            optionFilterProp={\"children\"}\n                            filterOption={true}\n                            // updates list of selected people in state to show text boxes\n                            onChange={(value) => {this.setState({people_selected: value})}}\n                        >\n                            { people ?\n                                Object.keys(people).map( (id) =>\n                                    <Select.Option key={id}>{people[id].name + \" \" + people[id].lastname}</Select.Option>\n                                )\n                            : null }\n                        </Select>\n                    )}\n                </Form.Item>\n                \n                <div>\n                    {people_selected.map((person_id) =>\n                        <Form.Item\n                            key={person_id}\n                            label={\"Relation with \" + people[person_id].name + \" \" + people[person_id].lastname}\n                        >\n                            {getFieldDecorator(person_id,\n                                { initialValue: people_links[person_id] || \"\",\n                                  setFieldsValue : people_links[person_id] || \"\",\n                                  rules : [\n                                    { required: true,\n                                    message: \"Please describe how this person is related to your Artefact!\"\n                                    }\n                            ]})(\n                            <TextArea\n                                placeholder={\"Tell us how this person is related to your Artefact\"}\n                                autosize={{minRows: 1}}\n                                onChange={(e) => {\n                                    const new_people_links = people_links;\n                                    new_people_links[person_id] = e.target.value;\n                                    this.setState({people_links: new_people_links});\n                                }}\n                            />\n                        )}</Form.Item>\n                    )}\n                </div>\n                </React.Fragment>\n                :\n                <React.Fragment>\n                <Form.Item label=\"Related Events\">\n                    {getFieldDecorator('events', {})(\n                        <Select\n                        mode=\"multiple\"\n                        placeholder=\"Select the Events related to this Artefact!\"\n                        optionFilterProp={\"children\"}\n                        filterOption={true}\n                        // updates list of selected events in state to show text boxes\n                        onChange={(value) => {this.setState({events_selected: value})}}\n                        >\n                            { events ?\n                                Object.keys(events).map( (id) =>\n                                    <Select.Option key={id}>{events[id].name}</Select.Option>\n                                )\n                            : null }\n                        </Select>\n                    )}\n                </Form.Item>\n\n                <div>\n                    {events_selected.map((event_id) =>\n                        <Form.Item\n                            key={event_id}\n                            label={\"Relation with \" + events[event_id].name}\n                        >\n                            {getFieldDecorator(event_id,\n                                { initialValue: events_links[event_id] || \"\",\n                                  setFieldsValue : events_links[event_id] || \"\",\n                                  rules : [\n                                    { required: true,\n                                    message: \"Please describe how this event is related to your Artefact!\"\n                                    }\n                            ]})(\n                            <TextArea\n                                placeholder={\"Tell us how this event is related to your Artefact\"}\n                                autosize={{minRows: 1}}\n                                onChange={(e) => {\n                                    const new_events_links = events_links;\n                                    new_events_links[event_id] = e.target.value;\n                                    this.setState({events_links: new_events_links});\n                                }}\n                            />\n                        )}</Form.Item>\n                    )}\n                </div>\n                </React.Fragment>\n                }\n            \n            </Form>\n            </Modal>\n            </div>\n        )\n    }\n\n\n}\n\n// use wrapper\nRelationForm = Form.create({name: \"createRelationForm\"})(RelationForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        events: state.firestore.data.Events,\n        people: state.firestore.data.People,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        fieldAppend: (objType, docId,fieldName, fieldValue) => dispatch(fieldAppend(objType, docId, fieldName ,fieldValue)),\n    }\n}\n  \nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    firestoreConnect(() => [\n        {collection: PEOPLE},\n        {collection: EVENTS},\n    ])\n)(RelationForm);","import React from \"react\";\nimport { Popconfirm, Icon } from \"antd\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\n\nimport {deleteRelation} from '../../store/Actions/userActions'\n\n\nconst DeleteRelation = (props) => {\n    const {item, objType, docId, fieldName} = props\n    \n    const handleDelete = e => {\n        //console.log(objType, docId, item.reference)\n        props.deleteRelation(objType, docId, item.reference, fieldName);\n    }\n    \n    return(\n        <Popconfirm\n            title=\"Are you sure you want to remove this relation？\"\n            icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }}/>}\n            okType={\"danger\"}\n            okText=\"DELETE\"\n            onConfirm={handleDelete}\n        >\n        <Icon type=\"close-circle\" style={{color:'red'}}/>   \n        </Popconfirm>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n       deleteRelation: (objType, docId, targetRef, fieldName) => dispatch(deleteRelation(objType, docId, targetRef, fieldName))\n    };\n };\n \n export default compose(\n    connect(\n       null,\n       mapDispatchToProps\n    )\n )(DeleteRelation);","/* * *\n * ItemLinks :: ReactJS Component\n * Page for the display of a link to an item.\n * Shows the item name and its relation.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {Divider, Row, Icon} from 'antd';\nimport RelationForm from '../forms/RelationForm'\nimport DeleteRelation from '../util/DeleteRelation';\nimport './ItemLinks.css';\n\nfunction ItemLinks(props) {\n    const {title, items, objType, obj, docId, fieldName} = props;\n    const iconType = (title) => {\n        if(title === 'Related People') return \"usergroup-add\"\n        if(title === 'Related Events') return \"file-add\"\n    }\n\n    const header = (title) => {\n        if (title === 'Related Artefacts'){\n            return (\n                <h3>\n                <Row style={{display: 'flex', alignItems:'center'}}>\n                    {title}\n                </Row>\n                </h3> \n            )\n        }\n        return(\n            <h3>\n            <Row style={{display: 'flex', alignItems:'center'}}>\n                {title}\n                <Divider type=\"vertical\"/>\n                <RelationForm \n                    title={title}\n                    artefact={obj}\n                    artefact_id={docId}\n                    iconType={iconType(title)}\n                />\n                </Row>\n            </h3>\n        )\n    }\n\n    // if no items exist then don't render anything\n    if (!items || items.length === 0) {\n        return (\n            <React.Fragment>\n                {header(title)}\n                <div className=\"polaroid\">\n                <div className=\"container\">\n                <p>Ooops, you can update {title.toLowerCase()} by clicking the icon <Icon type={iconType(title)} style={{color: 'DodgerBlue'}}/> above. Your list shows up right here.</p>\n                </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n    return(\n        <React.Fragment>\n        {header(title)}\n            { // generates an item for each link\n            items.map((item) => <ItemLink \n            key={item.name} \n            item={item} \n            fieldName={fieldName}\n            objType={objType} \n            docId={docId}\n            />)\n            }\n        </React.Fragment>\n    );\n}\n\nfunction ItemLink(props) {\n    const {item, objType, docId, fieldName} = props;\n    return(\n        <div className=\"polaroid container\">\n            <h4>\n                <Link to={\"/view/\" + item.reference.path}>{item.name}</Link>\n                <Divider type=\"vertical\"/>\n                <DeleteRelation\n                    item={item}\n                    objType={objType}\t\n                    docId={docId}\t\n                    fieldName={fieldName}\t\n                />\n            </h4>\n            <p>{item.relation}</p>\n        </div>\n    );\n}\n\nexport default ItemLinks;","import React from \"react\";\nimport {Modal, Button, Icon} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {deleteObj} from \"../../store/Actions/userActions\";\n\n/**\n * Handles the deletion of an item\n *\n * Props:\n *    - objType: the firebase collection\n *    - docId:   the document id\n *    - visible: modal state\n *    - showModal: visible to true\n *    - hideModal: visible to false\n *\n * Workflow:\n *    1. show confirmation modal\n *    2. click confirm\n *    3. await for deletion\n *    4. modal disappears\n *\n * @class DelComfirmation\n * @extends {React.Component}\n */\nclass GeneralDelComfirmation extends React.Component {\n   // when click confirm\n   handleConfirm = async () => {\n      await this.props.deleteObj(this.props.objType, this.props.docId);\n\n      this.props.hideModal();\n   };\n\n   render() {\n      return (\n         <div>\n            <Modal\n               title='DELETE'\n               visible={this.props.visible}\n               onOk={this.handleConfirm}\n               onCancel={this.props.hideModal}\n               okText='Confirm'\n               cancelText='Cancel'\n            >\n               <p>\n                  <Icon type='question-circle-o' style={{color: \"red\"}} /> Are\n                  you sure you want to delete this?\n               </p>\n            </Modal>\n         </div>\n      );\n   }\n}\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      deleteObj: (objType, docId) => dispatch(deleteObj(objType, docId))\n   };\n};\n\nexport default compose(\n   connect(\n      null,\n      mapDispatchToProps\n   )\n)(GeneralDelComfirmation);\n","import React from 'react';\nimport { Carousel, Icon } from 'antd';\nimport './ImageDisplay.css'\n\nclass ImageDisplay extends React.Component {\n    state = {\n        carousel: React.createRef(),\n        index: 0\n    }\n\n    // move to previous slide\n    previous = () => {\n        this.state.carousel.current.prev()\n    }\n    // move to next slide\n    next = () => {\n        this.state.carousel.current.next()\n    }\n    // move to specified slide\n    goTo = (index) => {\n        this.state.carousel.current.goTo(index)\n    }\n    // called when slide is about to change\n    handleChange = (from, index) => {\n        this.setState({index: index})\n    }\n\n    \n    render() {\n        const {carousel, index } = this.state;\n        const { media_links } = this.props;\n\n        if (!media_links) return null;\n            return (\n                <div className=\"carousel-container\">\n                    <Carousel\n                        ref={carousel}\n                        dots={false}\n                        beforeChange={this.handleChange}\n                    >\n                        {media_links.map((link, id) => {\n                            return (\n                                <div key={id} className=\"carousel-image-container\">\n                                    <img alt=\"Carousel\" src={link.url}/>\n                                </div>\n                            );\n                        })}\n                    </Carousel>\n\n                    {/* Carousel Controls */}\n                    { media_links.length > 1 ?\n                        <div style={{textAlign: \"center\"}}>\n                            <Icon type=\"left-circle\" style={{fontSize: \"2rem\", margin: \"0 1rem\"}} onClick={this.previous} />\n                            { media_links.map((m, i) =>\n                                <div\n                                    key={i}\n                                    style={{\n                                        display: \"inline-block\",\n                                        verticalAlign: \"text-bottom\",\n                                        width: \"2rem\",\n                                        height: \"2rem\",\n                                        backgroundColor: i === index ? \"rgba(0,0,0,0.65)\" : \"white\",\n                                        borderColor: \"rgba(0,0,0,0.65)\",\n                                        borderRadius: \"50%\",\n                                        borderStyle: i === index ? \"none\" : \"solid\",\n                                        borderWidth: \"0.18rem\",\n                                        cursor: \"pointer\",\n                                        margin: \"0 1rem\"\n                                    }}\n                                    onClick={() => this.goTo(i)}\n                                />\n                            )}\n                            <Icon type=\"right-circle\" style={{fontSize: \"2rem\", margin: \"0 1rem\"}} onClick={this.next}/>\n                        </div>\n                    : null }\n                </div>\n        );\n\n    }\n    \n}\n\nexport default ImageDisplay;","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Upload, Icon, message} from \"antd\";\nimport {uploadFile} from \"../../store/Actions/userActions\";\n\nfunction getBase64(img, callback) {\n   const reader = new FileReader();\n   reader.addEventListener(\"load\", () => callback(reader.result));\n   reader.readAsDataURL(img);\n}\n\n// file restriction.\nfunction beforeUpload(file) {\n   const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n   if (!isJpgOrPng) {\n      message.error(\"You can only upload JPG/PNG file!\");\n      return;\n   }\n   const isLt5M = file.size / 1024 / 1024 < 5;\n   if (!isLt5M) {\n      message.error(\"Image must smaller than 5MB!\");\n      return;\n   }\n   return isJpgOrPng && isLt5M;\n}\n\n// from https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\nfunction makeid(length) {\n   var result = \"\";\n   var characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n   var charactersLength = characters.length;\n   for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n}\n\n/**\n * Props:\n *    - downloadURL\n */\nclass Avatar extends Component {\n   state = {\n      loading: false\n   };\n\n   // upload status, downloadURL generated after upload success.\n   handleChange = info => {\n      const {downloadURL} = this.props;\n\n      if (!downloadURL) {\n         this.setState({loading: true});\n         return;\n      }\n      getBase64(info.file.originFileObj, imageUrl =>\n         this.setState({\n            loading: false\n         })\n      );\n   };\n\n   // error here, uploader's action requirs a return of upload URL, but we doesn't have any.\n   //\n   handleUpload = file => {\n      // generate a random name\n      let name = makeid(10) + file.name;\n\n      this.props.uploadFile(\"image/\" + this.props.auth.uid + \"/\" + name, file);\n      //return 'https://www.mocky.io/v2/5cc8019d300000980a055e76' // <- return a irrelavent upload path can be a workaround,\n      //    but it will cause a security/data breach.\n   };\n\n   // constantly checking if downloadURL was generated\n   componentDidUpdate = () => {\n      const {downloadURL} = this.props;\n      console.log(\"url\", downloadURL);\n      if (this.props.returnUrl) {\n         this.props.returnUrl(downloadURL);\n      } else {\n         console.log(\n            \"URL generated but not used. Pass returnUrl function as prop\"\n         );\n      }\n   };\n\n   render() {\n      const {downloadURL} = this.props;\n      const uploadButton = (\n         <div>\n            <Icon type={this.state.loading ? \"loading\" : \"plus\"} />\n            <div className='ant-upload-text'>Upload</div>\n         </div>\n      );\n      console.log(this.state);\n\n      return (\n         <Upload\n            name='avatar'\n            listType='picture-card'\n            className='avatar-uploader'\n            showUploadList={false}\n            action={this.handleUpload} // <- here's the action call\n            beforeUpload={beforeUpload}\n            onChange={this.handleChange}\n         >\n            {downloadURL ? (\n               <img src={downloadURL} alt='avatar' style={{width: \"100%\"}} />\n            ) : (\n               uploadButton\n            )}\n         </Upload>\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n   return {\n      auth: state.firebase.auth,\n      downloadURL: state.objects.downloadURL\n   };\n};\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      uploadFile: (path, file) => dispatch(uploadFile(path, file))\n   };\n};\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(Avatar);\n","/* * *\n * CreatePersonForm :: ReactJS Component\n * Form allowing user to input relevant information to create a Person.\n */\n\nimport React from \"react\";\nimport Avatar from \"../util/Avatar\";\nimport { Form, Input, Button } from \"antd\";\nconst { TextArea } = Input;\n\nclass AddendumForm extends React.Component {\n    state = {\n       image_url: null\n    }\n\n    // get the url from the Avatar component\n    getImageUrl = image_url => {\n        this.setState({image_url});\n        console.log(\"image_url\", image_url);\n    };\n\n    handleSubmit = e => {\n        // stops the page from refreshing\n        e.preventDefault();\n\n        // fields must pass validation before submission\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const addendum = {\n                    details: values.details,\n                    media_links: this.state.image_url ?\n                        [\n                            {\n                                date_created: Date.now(),\n                                url: this.state.image_url\n                            }\n                        ]\n                    : []\n                }\n\n                // pass form data to parent\n                this.props.handleSubmit(addendum);\n                this.props.form.resetFields();\n            }\n        });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return(\n            <Form onSubmit={ this.handleSubmit }>\n                <Form.Item label=\"Details\">{getFieldDecorator('details', {rules: [{required: true, message: \"Please enter some details!\"}]})(\n                    <TextArea\n                        placeholder={\"What would you like to add about the story of this artefact?\"}\n                        autosize={{minRows: 3}}\n                    />\n                )}</Form.Item>\n\n                <Form.Item label=\"Photos\">\n                    <Avatar returnUrl={this.getImageUrl} />\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" ghost htmlType=\"submit\">Submit</Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n};\n\n// use wrapper\nAddendumForm = Form.create({name: \"addendumForm\"})(AddendumForm);\nexport default AddendumForm;\n","import React, {Component} from \"react\";\nimport {Modal, Button, Icon} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {firestoreConnect} from \"react-redux-firebase\";\nimport {compose} from \"redux\";\n\nimport {createObj, editObj} from \"../../store/Actions/userActions\";\nimport {ADDENDUMS} from \"../../store/objectTypes\";\nimport AddendumForm from \"./AddendumForm.jsx\";;\n\nexport class AddendumHandler extends Component {\n   state = {\n      visible: false,\n      type: this.props.type,\n      title:\n         this.props.type === \"create\" ? \"Create an Addendum\" : \"Edit Addendum\",\n      docId: this.props.docId ? this.props.docId : null\n   };\n\n   showModal = () => {\n      this.setState({\n         visible: true\n      });\n   };\n\n   handleCancel = () => {\n      this.setState({\n         visible: false\n      });\n   };\n\n   handleSubmit = addendum => {\n      // insert reference\n      addendum.reference = this.props.firestore.doc(\n         \"Artefacts/\" + this.props.artefact_id\n      );\n\n      console.log(addendum);\n      console.log(this.props.docId)\n      if (this.state.type === \"create\") {\n         this.props.createObj(ADDENDUMS, addendum);\n      } else {\n         this.props.editObj(ADDENDUMS, this.props.docId, addendum);\n      }\n\n      this.setState({visible: false});\n   };\n\n   render() {\n      return (\n         <React.Fragment>\n            {/* Choose button based on edit vs create */}\n            { this.state.type === \"create\"\n               ?  <Button\n                     type='primary'\n                     shape='circle'\n                     icon={\"file-add\"}\n                     ghost\n                     onClick={this.showModal}\n                     size='small'\n                  />\n               :  <Button\n                     size=\"small\"\n                     onClick={this.showModal}\n                  >\n                     <Icon type=\"form\"/>{\"Edit\"}\n                  </Button>\n            }\n            \n\n            <Modal\n               visible={this.state.visible}\n               onCancel={this.handleCancel}\n               title={this.state.title}\n               footer={[\n                  <Button\n                     key='cancel'\n                     type='default'\n                     onClick={this.handleCancel}\n                  >\n                     Cancel\n                  </Button>\n               ]}\n            >\n               <AddendumForm handleSubmit={this.handleSubmit} />\n            </Modal>\n         </React.Fragment>\n      );\n   }\n}\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      createObj: (objType, addendum) => dispatch(createObj(objType, addendum)),\n      editObj: (objType, id, addendum) =>\n         dispatch(editObj(objType, id, addendum))\n   };\n};\n\nexport default compose(\n   connect(\n      null,\n      mapDispatchToProps\n   ),\n   firestoreConnect()\n)(AddendumHandler);\n","import React from \"react\";\n// connect to backend module for delete\nimport GeneralDelComfirmation from \"../forms/GeneralDelComfirmation\";\n// style\nimport {capitalize} from \"../util/Text\";\nimport {Icon, Button, Divider} from \"antd\";\nimport ImageDisplay from \"../util/ImageDisplay\";\nimport AddendumHandler from \"../forms/AddendumHandler.jsx\";\nimport \"./List.css\";\n\nfunction convert_date_to_string(date) {\n   const options = {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n   };\n   return date.toDate().toLocaleDateString(\"en-AU\", options);\n}\n\n/*\nfunction displayImage(media_links) {\n   if (!media_links) return;\n   return media_links.map(elem => <img key={elem.url} src={elem.url}></img>);\n}*/\n\n/**\n * Function component.\n * Props:\n *   - document : addendum json object to be represented\n *   - id: the addendum documen_id\n */\nexport default class Addendum extends React.Component {\n   state = {visible: false};\n\n   showModal = () => {\n      this.setState({\n         visible: true\n      });\n   };\n   hideModal = () => {\n      this.setState({\n         visible: false\n      });\n   };\n   /**\n    * For the list, we intend to show:\n    * Data:\n    *   - date_created\n    *   - created_by\n    *   - image\n    *   - details\n    * Buttons:\n    *   - delete\n    *   - edit\n    */\n   render() {\n      const {\n         created_by,\n         date_created,\n         details,\n         media_links,\n         reference\n      } = this.props.document;\n      const docId = this.props.id;\n      return (\n         <div className='polaroid'>\n            <div className='container'>\n               <h4>{convert_date_to_string(date_created)}</h4>\n               <p style={{color: \"#1890ff\"}}>By: {created_by? capitalize(created_by) : \"unknown\"}</p>\n               <p>{details}</p>\n               { media_links && media_links.length ? <ImageDisplay media_links={media_links} /> : null}\n            </div>\n            <div className='addendum-list left-align'>\n               <AddendumHandler size=\"small\" docId={this.props.id} artefact_id={reference.id} type=\"edit\" />\n               <Divider type='vertical' />\n               <Button onClick={this.showModal} size='small'>\n                  <Icon type='delete' /> Delete\n               </Button>\n               <GeneralDelComfirmation\n                  objType='Addendums'\n                  docId={docId}\n                  visible={this.state.visible}\n                  showModal={this.showModal}\n                  hideModal={this.hideModal}\n               />\n            </div>\n         </div>\n      );\n   }\n}\n","/** AddendumList grabs all the addendums from database\n *    that contains references to the parent document path\n * Component structure\n *             Artefact\n *                v\n *          AddendumList\n *                |\n *    +-----------+-----------+\n *    |                       |\n * Addendum              AddendumForm\n */\n\nimport React, {Component} from \"react\";\nimport {Divider, Row} from \"antd\";\n// connect to backend\nimport {connect} from \"react-redux\";\nimport {firestoreConnect} from \"react-redux-firebase\";\nimport {compose} from \"redux\";\nimport {deleteObj} from \"../../store/Actions/userActions\";\nimport {ADDENDUMS} from \"../../store/objectTypes\";\n// components\nimport Addendum from \"./Addendum\";\nimport AddendumHandler from \"../forms/AddendumHandler\";\n\n// helper function\nfunction createPath(id) {\n   return \"Artefacts/\" + id;\n}\n\n/**\n * Class component.\n * Props:\n *   - id: the id of the artefact\n */\nexport class AddendumList extends Component {\n   state = {\n      path: createPath(this.props.id)\n   };\n\n   handleDelete = id => {\n      this.props.deleteObj(ADDENDUMS, id);\n   };\n\n   // input: a list of addendum documents\n   // output: a html list of Addendums\n   generateList(list) {\n      return list.map(element => (\n         <Addendum\n            key={element[0]}\n            id={element[0]}\n            document={element[1]}\n            delete={this.handleDelete}\n         />\n      ));\n   }\n\n   // input: {doc_id:doc, ... }\n   // output: [ [document_id, document], [document_id, document], ...]\n   getAddendums(addendums) {\n      const addendumsList = Object.keys(addendums).map(key => [\n         key,\n         addendums[key]\n      ]);\n      // filter out the addendums that contains document reference to the parent object\n      /* You can simply use Array.filter() instead.\n      let filtered_addendumsList = [];\n      for (const addendum of addendumsList) {\n         // Weird thing even if you delete something, the document id still exits\n         if (addendum[1] && addendum[1].reference.path === this.state.path) {\n            filtered_addendumsList.push(addendum);\n         }\n      }*/\n      return addendumsList.filter(\n         addendum =>\n            addendum[1] && addendum[1].reference.path === this.state.path\n      );\n   }\n\n   // return the title of the List\n   header = title => {\n      return (\n         <h3>\n            <Row style={{display: \"flex\", alignItems: \"center\"}}>\n               {title}\n               <Divider type='vertical' />\n               <AddendumHandler\n               artefact_id={this.props.id}\n               type='create'\n               />\n            </Row>\n         </h3>\n      );\n   };\n\n   render() {\n      // grab the addendums object\n      const {addendums} = this.props;\n\n      // check if we received the addendums\n      let filtered_addendumsList = [];\n      if (addendums) {\n         filtered_addendumsList = this.getAddendums(addendums);\n      }\n\n      // check if there are any addendums\n      return (\n         <div>\n            {this.header(\"Addendums\")}\n            {filtered_addendumsList.length === 0 ? (\n               <p>Press add an addendum button to create addendums</p>\n            ) : (\n               this.generateList(filtered_addendumsList)\n            )}\n         </div>\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n   const addendums = state.firestore.data.Addendums;\n   return {\n      addendums: addendums\n   };\n};\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      deleteObj: (objType, docId) => dispatch(deleteObj(objType, docId))\n   };\n};\n\n// Search the addendum that has a reference to the parent document\nexport default compose(\n   connect(\n      mapStateToProps,\n      mapDispatchToProps\n   ),\n   firestoreConnect(props => [\n      {\n         collection: ADDENDUMS,\n         // where: [\"reference\", \"==\", props.ref],\n         orderBy: [\"date_created\"]\n      }\n   ])\n)(AddendumList);\n","import React from \"react\";\nimport { Modal, Button, Icon } from 'antd';\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {deleteObj} from \"../../store/Actions/userActions\";\n\nclass DelComfirmation extends React.Component {\n  state = { visible: false };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  // when click confirm \n  handleConfirm = async () => {\n\n    await this.props.deleteObj(this.props.objType, this.props.docId);\n\n    this.setState({\n        visible: true,\n      });\n\n    // redirect to list view \n    this.props.history.push(\"/feed\");\n  }\n\n  hideModal = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Button type=\"danger\" onClick={this.showModal} ghost size=\"small\">\n            <Icon type=\"delete\"/> Delete\n        </Button>\n        <Modal\n          title=\"You are about to Delete something!\"\n          visible={this.state.visible}\n          onOk={this.handleConfirm}\n          onCancel={this.hideModal}\n          okText=\"Confirm\"\n          cancelText=\"Cancel\"\n        >\n          <p><Icon type=\"question-circle-o\" style={{ color: 'red' }} />{\" Are you sure you want to delete this? This cannot be undone.\"}</p>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n       deleteObj: (objType, docId) => dispatch(deleteObj(objType, docId))\n    };\n };\n \n export default compose(\n    connect(\n       null,\n       mapDispatchToProps\n    )\n )(DelComfirmation);","/* * *\n * Artefact :: ReactJS Component\n * Page for the display of an Artefact.\n * The artefact should be passed to this component as the prop \"artefact\".\n */\n\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {firestoreConnect} from \"react-redux-firebase\";\nimport {compose} from \"redux\";\nimport moment from 'moment';\nimport ItemLinks from \"./ItemLinks.js\";\nimport AddendumList from \"./AddendumList.jsx\";\nimport ArtefactHandler from \"../forms/ArtefactHandler.js\";\nimport {ARTEFACTS} from \"../../store/objectTypes\";\nimport ImageDisplay from \"../util/ImageDisplay.js\";\nimport DelComfirmation from \"../forms/DelComfirmation\";\nimport {Divider, Row, PageHeader, Descriptions, Spin} from 'antd';\nimport \"./Objects.css\";\n\nconst Artefact = props => {\n   const {artefact} = props;\n   const id = props.match.params.id;\n\n   //any result returns?\n   if (!artefact) {\n      return (\n         <div className='object-content'>\n            <Spin tip=\"Loading...\" size=\"large\"/>\n         </div>\n      );\n   }\n\n   //if result is null.\n   if (artefact && !artefact[id]) {\n      return (\n         <div className='object-content'>\n            <h2>Artefact is NOT FOUND</h2>\n         </div>\n      );\n   }\n   return (\n      <div>\n            <PageHeader\n               onBack={() => window.history.back()}\n               title={artefact[id].name}\n            >\n               <Descriptions size=\"small\" column={2}>\n               <Descriptions.Item label=\"Created by\">{artefact[id].created_by}</Descriptions.Item>\n                  <Descriptions.Item label=\"Created at\">\n                     {moment(artefact[id].date_created.toDate()).format('LL')}\n                  </Descriptions.Item>\n                  \n                  {artefact[id].last_modified ?\n                  <Descriptions.Item label=\"Last Modified\">\n                   {moment(artefact[id].last_modified.toDate()).calendar()}\n                  </Descriptions.Item>\n                  :\n                  null\n                  }\n               </Descriptions>\n            </PageHeader>\n         <ImageDisplay media_links={artefact[id].media_links} />\n         <div className='object-content'>\n            <p>{artefact[id].description}</p>\n            <Row className=\"contentLink\" style={{display: 'flex', alignItems:'center'}}>\n               <ArtefactHandler docId={id} />\n               <Divider type='vertical' />\n               <DelComfirmation\n                  docId={id}\n                  objType={ARTEFACTS}\n                  history={props.history}\n               />\n            </Row>\n\n            {/* ItemLinks will render links as items with names and relation descriptors */}\n            <div className='List'>\n               <AddendumList id={id} />\n               <ItemLinks\n                  key='related people'\n                  title='Related People'\n                  fieldName='people_links'\n                  items={artefact[id].people_links}\n                  objType={ARTEFACTS}\n                  obj={artefact}\n                  docId={id}\n               />\n               <ItemLinks\n                  key='related events'\n                  title='Related Events'\n                  fieldName='events_links'\n                  items={artefact[id].events_links}\n                  objType={ARTEFACTS}\n                  docId={id}\n               />\n            </div>\n         </div>\n      </div>\n   );\n};\n\nconst mapStateToProps = state => {\n   const artefact = state.firestore.data.Artefacts;\n   return {\n      artefact: artefact\n   };\n};\n\nexport default compose(\n   connect(\n      mapStateToProps,\n      null\n   ),\n   firestoreConnect(props => [\n      {\n         collection: \"Artefacts\",\n         doc: props.match.params.id\n      }\n   ])\n)(Artefact);\n","/* * *\n * Event :: ReactJS Component\n * Page for the display of an Event.\n */\n\nimport React from \"react\";\nimport ItemLinks from \"./ItemLinks.js\";\nimport \"./Objects.css\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport {PageHeader, Descriptions, Spin} from 'antd';\nimport moment from 'moment';\n\nimport {EVENTS} from \"../../store/objectTypes\"\n\nconst Event = props => {\n   const { event } = props;\n   const id = props.match.params.id;\n   const options = {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n   };\n\n   if (!event) {\n      return (\n         <div className=\"object-content\">\n            <Spin tip=\"Loading...\" size=\"large\"/>\n         </div>\n      );\n   }\n\n   if (event && !event[id]) {\n      return (\n         <div className=\"object-content\">\n            <h2>Event is NOT FOUND</h2>\n         </div>\n      );\n   }\n\n   return (\n      <div>\n            <PageHeader\n               onBack={() => window.history.back()}\n               title={event[id].name}\n               subTitle={'Occured on: '+ event[id].date.toDate().toLocaleDateString(\"en-AU\", options)}\n            >\n               <Descriptions size=\"small\" column={2}>\n               <Descriptions.Item label=\"Created by\">{event[id].created_by}</Descriptions.Item>\n                  <Descriptions.Item label=\"Created at\">\n                     {moment(event[id].date_created.toDate()).format('LL')}\n                  </Descriptions.Item>\n                  \n                  {event[id].last_modified ?\n                  <Descriptions.Item label=\"Last Modified\">\n                   {moment(event[id].last_modified.toDate()).calendar()}\n                  </Descriptions.Item>\n                  :\n                  null\n                  }\n               </Descriptions>\n            </PageHeader>\n      <div className=\"object-content\">\n         <p>{event[id].details}</p>\n         <ItemLinks\n            title=\"Related Artefacts\"\n            fieldName='artefacts_links'\n            objType={EVENTS}\n            items={event[id].artefacts_links}\n            docId={id}\n         />\n      </div>\n      </div>\n   );\n};\n\nconst mapStateToProps = state => {\n   const event = state.firestore.data.Events;\n   return {\n      event: event\n   };\n};\n\nexport default compose(\n   connect(mapStateToProps),\n   firestoreConnect(props => [\n      {\n         collection: \"Events\",\n         doc: props.match.params.id\n      }\n   ])\n)(Event);\n","/* * *\n * Person :: ReactJS Component\n * Page for the display of a Person.\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport {PageHeader, Descriptions,Spin} from 'antd';\nimport moment from 'moment';\n\nimport ItemLinks from './ItemLinks.js';\nimport \"./Objects.css\";\nimport { PEOPLE } from '../../store/objectTypes.js';\n\nconst Person = (props) => {\n    const { person } = props;\n    const id = props.match.params.id;\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    \n    if (!person){\n        return (\n            <div className=\"object-content\">\n                <Spin tip=\"Loading...\" size=\"large\"/>\n            </div>\n        )\n    }\n    \n    if (person && !person[id]) {\n        return(\n            <div className=\"object-content\">\n                <h2>Person is NOT FOUND</h2>\n            </div>\n        );\n    }\n        \n    return(\n        <div>\n            <PageHeader\n               onBack={() => window.history.back()}\n               title={person[id].name + \" \" + person[id].lastname}\n               subTitle={'Born: '+ person[id].dob.toDate().toLocaleDateString(\"en-AU\", options)}\n            >\n               <Descriptions size=\"small\" column={2}>\n               <Descriptions.Item label=\"Created by\">{person[id].created_by}</Descriptions.Item>\n                  <Descriptions.Item label=\"Created at\">\n                     {moment(person[id].date_created.toDate()).format('LL')}\n                  </Descriptions.Item>\n                  \n                  {person[id].last_modified ?\n                  <Descriptions.Item label=\"Last Modified\">\n                   {moment(person[id].last_modified.toDate()).calendar()}\n                  </Descriptions.Item>\n                  :\n                  null\n                  }\n               </Descriptions>\n            </PageHeader>\n            <div className=\"object-content\">\n                <p>{person[id].details}</p>\n                <ItemLinks \n                    title=\"Related Artefacts\" \n                    fieldName='artefacts_links'\n                    items={person[id].artefacts_links}\n                    objType={PEOPLE}\n                    docId={id}\n                    />\n            </div>\n        </div>\n    );\n} \n\nconst mapStateToProps = (state) => {\n    const person = state.firestore.data.People;  \n    return {\n        person: person,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect((props) =>[{\n        collection: 'People', \n        doc: props.match.params.id,\n    }])\n)(Person);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/Actions/authActions'\nimport { Redirect } from 'react-router-dom'\nimport { Button, Form } from 'semantic-ui-react'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field>\n            <label>Email</label>\n            <input type=\"email\" placeholder='email' id='email' onChange={this.handleChange} />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Password</label>\n            <input type=\"password\" placeholder='password' id='password' onChange={this.handleChange} />\n          </Form.Field>\n\n          <Button type='submit'>Log In</Button>\n\n          <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n          </div>\n        </Form>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.user.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/Actions/authActions'\nimport { Button, Form } from 'semantic-ui-react'\nimport {Redirect} from 'react-router-dom'\n\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        name: '',\n        lastName: '',\n        submission: {\n            email: ''\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        \n        const { email, password, name, lastName } = this.state;\n        const signup = {\n            email: email,\n            password: password,\n            name: name,\n            lastName: lastName\n        }\n\n        this.props.signUp(signup);\n\n        this.setState({submission: signup});\n    }\n\n    render() {\n        const { submission } = this.state;\n        const { auth } = this.props;\n\n        // check if already submitted and signed up\n        if ( submission && submission.email && submission.email === auth.email ) {\n            return (\n                <Redirect to=\"/\" />\n            )\n        }\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Field>\n                    <label>First Name</label>\n                    <input type=\"text\" placeholder='First Name' id='name' onChange={this.handleChange} />\n                </Form.Field>\n\n                <Form.Field>\n                    <label>Last Name</label>\n                    <input type=\"text\" placeholder='Last Name' id='lastName' onChange={this.handleChange} />\n                </Form.Field>\n\n                <Form.Field>\n                    <label>Email</label>\n                    <input type=\"email\" placeholder='email' id='email' onChange={this.handleChange} />\n                </Form.Field>\n\n                <Form.Field>\n                    <label>Password</label>\n                    <input type=\"password\" placeholder='password' id='password' onChange={this.handleChange} />\n                </Form.Field>\n\n                <Button type='submit'>Submit</Button>\n            </Form>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.user.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (creds) => dispatch(signUp(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","/* * *\n * App :: ReactJS Component\n * Main component for the project.\n */\nimport React from \"react\";\nimport {\n   BrowserRouter as Router,\n   Route,\n   Switch,\n   Redirect\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\n\n/* Components */\nimport Navigation from \"./component/layout/Navigation.js\";\nimport ArtefactList from \"./component/feed/ArtefactList.js\";\nimport Welcome from \"./component/layout/Welcome\";\nimport Artefact from \"./component/objects/Artefact.js\";\nimport Event from \"./component/objects/Event.js\";\nimport Person from \"./component/objects/Person.js\";\nimport SignIn from \"./component/auth/SignIn\";\nimport SignUp from \"./component/auth/SignUp\";\nimport ImageUpload from \"./component/util/imageUpload\";\n\nclass App extends React.Component {\n   constructor(props, context) {\n      super(props, context);\n      this.state = {\n         width: \"65%\"\n      };\n   }\n\n   // Rational:\n   // I want to customize the style of App.js contain based on the component\n   remove_width_constraint_handler = () => {\n      this.setState({width: \"100%\"});\n   };\n   reset_width_constraint_handler = () => {\n      this.setState({width: \"65%\"});\n   };\n   render() {\n      return (\n         <Router>\n            <Navigation />\n            <div className='App' style={{width: this.state.width}}>\n               <this.HomeRoutes />\n            </div>\n         </Router>\n      );\n   }\n\n   HomeRoutes = () => {\n      const {auth} = this.props;\n\n      if (auth.uid) {\n         return (\n            <Switch>\n               <Route\n                  path='/'\n                  exact\n                  // a trick to pase handler to children\n                  // https://stackoverflow.com/questions/27864720/react-router-pass-props-to-handler-component\n                  render={props => (\n                     <Welcome\n                        onMount={this.remove_width_constraint_handler}\n                        unMount={this.reset_width_constraint_handler}\n                        {...props}\n                     />\n                  )}\n               />\n               <Route path='/feed' component={ArtefactList} />\n               <Route path='/view/artefacts/:id' component={Artefact} />\n\n               <Route path='/view/events/:id' component={Event} />\n               <Route path='/view/people/:id' component={Person} />\n\n               <Route path='/signup' component={SignUp} />\n               <Route path='/upload' component={ImageUpload} />\n\n               {/* default to \"/\" if unrecognised route. */}\n               <Route render={() => <Redirect to='/' />} />\n            </Switch>\n         );\n      } else {\n         return (\n            <Switch>\n               {/* Welcome page goes here... */}\n               <Route\n                  path='/'\n                  exact\n                  // a trick to pase handler to children\n                  // https://stackoverflow.com/questions/27864720/react-router-pass-props-to-handler-component\n                  render={props => (\n                     <Welcome\n                        onMount={this.remove_width_constraint_handler}\n                        unMount={this.reset_width_constraint_handler}\n                        {...props}\n                     />\n                  )}\n               />\n               <Route path='/signin' component={SignIn} />\n\n               {/* default to \"/\" if unrecognised route. */}\n               <Route render={() => <Redirect to='/' />} />\n            </Switch>\n         );\n      }\n   };\n}\n\nconst mapStateToProps = state => {\n   return {\n      auth: state.firebase.auth\n   };\n};\nexport default compose(connect(mapStateToProps))(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  isLoading: true,\n  errMess: null,\n}\n\nconst userReducer = (state = initState, action) => {\n  switch (action.type) {\n    \n      case 'CREATE_SUCCESS':\n        console.log('create success');\n        return {\n          ...state,\n          doc: action.doc,\n        };\n      case 'CREATE_ERROR':\n          console.log('create error');\n          return {\n            ...state,\n            errMess: 'Create failed'\n          }\n      \n      case 'EDIT_SUCCESS':\n          console.log('edit success');\n          return state;\n  \n      case 'EDIT_ERROR':\n          console.log('edit error');\n          return {\n            ...state,\n            errMess: 'Edit failed'\n          }\n      \n      case 'DELETE_SUCCESS':\n          console.log('delete success');\n          return state;\n      \n      case 'DELETE_ERROR':\n          console.log('delete error');\n          return {\n            ...state,\n            errMess: 'Delete failed'\n          }\n      \n      case 'UPLOAD_SUCCESS':\n        console.log('upload success');\n        return {\n          ...state,\n          downloadURL: action.downloadURL,\n        };\n\n      case 'UPDATE_ERROR':\n          console.log('update error');\n          return {\n            ...state,\n            errMess: 'update failed'\n          }\n      \n      case 'APPEND_SUCCESS':\n          console.log('append success');\n          return state;\n      \n      case 'APPEND_ERROR':\n          console.log('append error');\n          return {\n            ...state,\n            errMess: 'Append failed'\n          }\n\n      default:\n        return state;\n    }\n};\n\n\n\nexport default userReducer;","const initState = {\n    authError: null\n  }\n  \n  const authReducer = (state = initState, action) => {\n    switch(action.type){\n      case 'LOGIN_ERROR':\n        console.log('login error');\n        return {\n          ...state,\n          authError: 'Login failed'\n        }\n  \n      case 'LOGIN_SUCCESS':\n        console.log('login success');\n        return {\n          ...state,\n          authError: null\n        }\n  \n      case 'SIGNOUT_SUCCESS':\n        console.log('signout success');\n        return state;\n  \n      case 'SIGNUP_SUCCESS':\n        console.log('signup success')\n        return {\n          ...state,\n          authError: null\n        }\n  \n      case 'SIGNUP_ERROR':\n        console.log('signup error')\n        return {\n          ...state,\n          authError: action.err.message\n        }\n\n      case 'PROFILE_UPDATE_SUCCESS':\n        console.log('profile update success')\n        return {\n          ...state,\n          authError: null\n        }\n\n      case 'PROFILE_UPDATE_ERROR':\n        console.log('profile update error')\n        return {\n          ...state,\n          authError: 'Profile update failed'\n        }\n  \n      default:\n        return state\n    }\n  };\n  \n  export default authReducer;","import { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase'\nimport userReducer from './userReducer';\nimport authReducer from './authReducer';\n\nconst rootReducer = combineReducers({\n  user: authReducer,\n  objects: userReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore } from 'redux-firestore';\nimport { reactReduxFirebase } from 'react-redux-firebase'\nimport logger from 'redux-logger'\nimport { Provider } from 'react-redux'\nimport rootReducer from './store/Reducer/rootReducer'\nimport config, {auth, firestore, storageRef} from './firebase/config'\n\nconst store = createStore(rootReducer,\n    compose(\n      applyMiddleware(thunk.withExtraArgument({auth, firestore, storageRef})),\n      reactReduxFirebase(config, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}, logger),\n      reduxFirestore(config) // redux bindings for firestore\n    )\n  );\n  \n  store.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n\n    serviceWorker.unregister();\n  });"],"sourceRoot":""}